<xml><var name="ConfusionMatrixDisplay" type="type" qualifier="builtins" value="%3Cclass %27sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay%27&gt;" isContainer="True" />
<var name="DataFrame" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.frame.DataFrame%27&gt;" isContainer="True" />
<var name="GridSearchCV" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._search.GridSearchCV%27&gt;" isContainer="True" />
<var name="In" type="list" qualifier="builtins" value="%5B%27%27%2C %22def importdata%28%29%3A%5Cn    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%5Cn    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %22%23 event del Index Column%5Cndf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%5Cndf.head%28%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29%22%2C %22%23add classification target%5Cndef f%28row%29%3A%5Cn    if row%5B%27idle_time%27%5D %3C 56%3A%5Cn        val = 1%5Cn    elif row%5B%27idle_time%27%5D %3C 195%3A%5Cn        val = 2%5Cn    elif row%5B%27idle_time%27%5D %3C 488%3A%5Cn        val = 3%5Cn    else%3A%5Cn        val = 4%5Cn    return val%5Cn%5Cndf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29%22%2C %27df..." isContainer="True" shape="34" isIPythonHidden="True" />
<var name="MLPClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.neural_network._multilayer_perceptron.MLPClassifier%27&gt;" isContainer="True" />
<var name="MultiIndex" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.indexes.multi.MultiIndex%27&gt;" isContainer="True" />
<var name="Out" type="dict" qualifier="builtins" value="%7B4%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %0A2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %0A3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %0A4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80   0.0   0.0     12    6       1427           1   %0A1      195  10.80   0.0   0.0     12    6       1427           1   %0A2       81  10.80   0.0   0.0     12    6       1437           1   %0A3       81  10.86   0.0   0.0      1    0          0           1   %0A4      195  10.86   0.0   0.0      1    0          0           0   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                1439         12  %0A2                14..." isContainer="True" shape="6" isIPythonHidden="True" />
<var name="PredictorScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="PredictorScalerFit" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="Predictors" type="list" qualifier="builtins" value="%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C %27hex_enc%27%2C %27start_min%27%2C %27month%27%2C %27day%27%5D" isContainer="True" shape="11" />
<var name="RandomForestClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._forest.RandomForestClassifier%27&gt;" isContainer="True" />
<var name="RandomForestRegressor" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._forest.RandomForestRegressor%27&gt;" isContainer="True" />
<var name="StandardScaler" type="type" qualifier="builtins" value="%3Cclass %27sklearn.preprocessing._data.StandardScaler%27&gt;" isContainer="True" />
<var name="TargetVarScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="TargetVariable" type="list" qualifier="builtins" value="%5B%27idle_time_class%27%5D" isContainer="True" shape="1" />
<var name="TimeSeriesSplit" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._split.TimeSeriesSplit%27&gt;" isContainer="True" />
<var name="X" type="ndarray" qualifier="numpy" value="%5B%5B-3.48291031  0.05221204  0.00831509 ...  1.74586868  1.62198697%2C   1.52004291%5D%2C %5B-3.53864896  0.05221204  0.00831509 ...  1.74586868  1.62198697%2C   1.52004291%5D%2C %5B-1.68963911  0.05525741  0.0933678  ...  1.7676273   1.62198697%2C   1.52004291%5D%2C ...%2C %5B-3.50067524  0.05965731  0.03911388 ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%2C %5B-3.42209597  0.05545353 -0.0107677  ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%2C %5B-3.51129661  0.05743199  0.04654993 ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%5D" isContainer="True" shape="(2547158, 11)" />
<var name="X_test" type="ndarray" qualifier="numpy" value="%5B%5B 1.05071915  0.04889693  0.11413728 ...  0.63617885  0.62918419%2C  -1.0372361 %5D%2C %5B-0.27530614  0.06483141  0.04634295 ...  0.68187196 -0.36361858%2C  -0.01432449%5D%2C %5B 1.05175309  0.04263701  0.08134823 ... -0.14495576 -0.36361858%2C   1.00858711%5D%2C ...%2C %5B-1.69631271  0.05545353 -0.0107677  ...  0.93209614 -0.36361858%2C  -0.52578029%5D%2C %5B 0.73480414  0.05847147  0.11548136 ... -1.35908699  0.29824993%2C  -0.01432449%5D%2C %5B-0.26548373  0.05469059  0.00189398 ... -0.02963505 -0.03268432%2C   0.49713131%5D%5D" isContainer="True" shape="(509432, 11)" />
<var name="X_train" type="ndarray" qualifier="numpy" value="%5B%5B-1.70087144  0.05915032  0.06987419 ... -0.46480754  0.96011845%2C  -0.52578029%5D%2C %5B 0.73973884  0.05925821  0.07617097 ... -0.16889025  0.96011845%2C   1.00858711%5D%2C %5B-1.69678268  0.05520917  0.10957407 ...  0.92339269  1.29105271%2C  -1.5486919 %5D%2C ...%2C %5B 0.74420358  0.05981332  0.10904473 ... -1.35908699 -0.69455284%2C   1.52004291%5D%2C %5B 0.74425057  0.07199308  0.1287628  ... -1.35908699 -0.69455284%2C  -1.0372361 %5D%2C %5B-0.27666906  0.05176837  0.06976643 ...  1.27805826 -0.36361858%2C  -1.0372361 %5D%5D" isContainer="True" shape="(2037726, 11)" />
<var name="_" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7f8d53de0100&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_16" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" isIPythonHidden="True" />
<var name="_33" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7f8d53de0100&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_4" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  %5D %5B0                 821         12  %5D %5B1                1439         12  %5D %5B2                1439  ...%5D" isContainer="True" shape="(5, 16)" isIPythonHidden="True" />
<var name="_6" type="Series" qualifier="pandas.core.series" value="%280.25%2C 56.0%29 %280.5%2C 195.0%29 %280.75%2C 488.0%29" isContainer="True" shape="(3,)" isIPythonHidden="True" />
<var name="_7" type="Series" qualifier="pandas.core.series" value="%280.25%2C 56.0%29 %280.5%2C 195.0%29 %280.75%2C 488.0%29 %281.0%2C 1439.0%29" isContainer="True" shape="(4,)" isIPythonHidden="True" />
<var name="_9" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  idle_time_class  %5D %5B0                 821         12                1  %5D %5B1                1439   ...%5D" isContainer="True" shape="(5, 17)" isIPythonHidden="True" />
<var name="__" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" isIPythonHidden="True" />
<var name="___" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  idle_time_class  %5D %5B0                 821         12                1  %5D %5B1                1439   ...%5D" isContainer="True" shape="(5, 17)" isIPythonHidden="True" />
<var name="__builtin__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtins__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__doc__" type="str" qualifier="builtins" value="Automatically created module for IPython interactive environment" isIPythonHidden="True" />
<var name="__loader__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__name__" type="str" qualifier="builtins" value="__main__" isIPythonHidden="True" />
<var name="__package__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__spec__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="_dh" type="list" qualifier="builtins" value="%5B%27/Users/jonweske/devment/BA_nextbike/scripts%27%5D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_i" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_i1" type="str" qualifier="builtins" value="def importdata%28%29%3A%0A    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%0A    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29" isIPythonHidden="True" />
<var name="_i10" type="str" qualifier="builtins" value="TargetVariable=%5B%27idle_time_class%27%5D%0APredictors=%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C%27hex_enc%27%2C%27start_min%27%2C %27month%27%2C %27day%27%2C%5D" isIPythonHidden="True" />
<var name="_i11" type="str" qualifier="builtins" value="X=df%5BPredictors%5D.values%0Ay=df%5BTargetVariable%5D.values%0A%0A%23%23%23 Sandardization of data %23%23%23%0Afrom sklearn.preprocessing import StandardScaler%0APredictorScaler=StandardScaler%28%29%0ATargetVarScaler=StandardScaler%28%29%0A%0A%23 Storing the fit object for later reference%0APredictorScalerFit=PredictorScaler.fit%28X%29%0A%23TargetVarScalerFit=TargetVarScaler.fit%28y%29%0A%0A%23 Generating the standardized values of X and y%0AX=PredictorScalerFit.transform%28X%29%0A%23y=TargetVarScalerFit.transform%28y%29%0A%0A%0A%23 Split the data into training and testing set%0Afrom sklearn.model_selection import train_test_split%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28X%2C y%2C test_size=0.2%2C random_state=42%29%0A%0A%23 Quick sanity check with the shapes of Training and testing datasets%0Aprint%28X_train.shape%29%0Aprint%28y_train.shape%29%0Aprint%28X_test.shape%29%0Aprint%28y_test.shape%29" isIPythonHidden="True" />
<var name="_i12" type="str" qualifier="builtins" value="from sklearn.neural_network import MLPClassifier%0Aimport matplotlib.pyplot as plt%0Afrom sklearn.metrics import ConfusionMatrixDisplay%0A%0Acls = MLPClassifier%28hidden_layer_sizes=%28100%2C50%2C100%29%2C activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=1%2C early_stopping=True%29%0Acls.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Aexpected_y = y_test%0Apredicted_y = cls.predict%28X_test%29%0A%0Aprint%28cls.score%28X_test%2C y_test%29%29%0A%0Afig = ConfusionMatrixDisplay.from_predictions%28predicted_y%2Cexpected_y%2Ccmap=plt.cm.Blues%29%0Afig.figure_.suptitle%28%22Confusion Matrix%22%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i13" type="str" qualifier="builtins" value="def regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29%0A%0Aregression_results%28expected_y%2C predicted_y%29" isIPythonHidden="True" />
<var name="_i14" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29%0A%0Aregression_results%28expected_y%2C predicted_y%29" isIPythonHidden="True" />
<var name="_i15" type="str" qualifier="builtins" value="from sklearn.ensemble import RandomForestClassifier%0A%0Arfc = RandomForestClassifier%28n_estimators=100%29%0A%0Arfc.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Arf_y_pred = rfc.predict%28X_test%29%0A%0Arfc.score%28X_test%2Cy_test%29%0A%0Afig = ConfusionMatrixDisplay.from_predictions%28rf_y_pred%2Cexpected_y%2Ccmap=plt.cm.Blues%29%0Afig.figure_.suptitle%28%22Confusion Matrix RandomForestClassifier%22%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i16" type="str" qualifier="builtins" value="import pandas as pd%0A%0Afeature_imp = pd.Series%28rfc.feature_importances_%2Cindex=Predictors%29.sort_values%28ascending=False%29%0Afeature_imp" isIPythonHidden="True" />
<var name="_i17" type="str" qualifier="builtins" value="import matplotlib.pyplot as plt%0Aimport seaborn as sns%0A%25matplotlib inline%0A%23 Creating a bar plot%0Asns.barplot%28x=feature_imp%2C y=feature_imp.index%29%0A%23 Add labels to your graph%0Aplt.xlabel%28%27Feature Importance Score%27%29%0Aplt.ylabel%28%27Features%27%29%0Aplt.title%28%22Visualizing Important Features%22%29%0Aplt.legend%28%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i18" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i19" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i2" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0A%0A%23 read CSV%0Adf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29" isIPythonHidden="True" />
<var name="_i20" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i21" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i22" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i23" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i24" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0Afrom sklearn.ensemble import RandomForestRegressor%0Afrom sklearn.model_selection import TimeSeriesSplit%0A%0Amodel = MLPClassifier%28activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=0%2C early_stopping=True%29%0Aparam_search = %7B%0A    %27hidden_layer_sizes%27%3A %5B%2810%2C10%29%2C %2810%2C10%2C10%29%2C %2810%2C10%2C10%2C10%29%2C%0A                           %2850%2C50%29%2C %2850%2C50%2C50%29%2C %2850%2C50%2C50%2C50%29%2C%0A                           %28100%2C100%29%2C %28100%2C100%2C100%29%2C %28100%2C100%2C100%2C100%29%5D%7D%0Atscv = TimeSeriesSplit%28n_splits=10%29%0Agsearch = GridSearchCV%28estimator=model%2C cv=tscv%2C param_grid=param_search%2C scoring = rmse_score%29%0Agsearch.fit%28X_train%2C y_train.ravel%28%29%29%0Abest_score = gsearch.best_score_%0Abest_model = gsearch.best_estimator_" isIPythonHidden="True" />
<var name="_i25" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i26" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i27" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0Afrom sklearn.ensemble import RandomForestRegressor%0Afrom sklearn.model_selection import TimeSeriesSplit%0A%0Amodel = MLPClassifier%28activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=1%2C early_stopping=True%29%0Aparam_search = %7B%0A    %27hidden_layer_sizes%27%3A %5B%2810%2C10%29%2C %2810%2C10%2C10%29%2C %2810%2C10%2C10%2C10%29%2C%0A                           %2850%2C50%29%2C %2850%2C50%2C50%29%2C %2850%2C50%2C50%2C50%29%2C%0A                           %28100%2C100%29%2C %28100%2C100%2C100%29%2C %28100%2C100%2C100%2C100%29%5D%7D%0Atscv = TimeSeriesSplit%28n_splits=10%29%0Agsearch = GridSearchCV%28estimator=model%2C cv=tscv%2C param_grid=param_search%2C scoring = rmse_score%29%0Agsearch.fit%28X_train%2C y_train.ravel%28%29%29%0Abest_score = gsearch.best_score_%0Abest_model = gsearch.best_estimator_" isIPythonHidden="True" />
<var name="_i28" type="str" qualifier="builtins" value="y_true = y_test%0Ay_pred = best_model.predict%28X_test%29%0A%0Aregression_results%28y_true%2C y_pred%29" isIPythonHidden="True" />
<var name="_i29" type="str" qualifier="builtins" value="imp = best_model.feature_importances_%0AX_train = pd.DataFrame%28X_train%2Ccolumns=Predictors%29%0Afeatures = X_train.columns%0Aindices = np.argsort%28imp%29%0Aplt.title%28%27Feature Importances%27%29%0Aplt.barh%28range%28len%28indices%29%29%2C imp%5Bindices%5D%2C color=%27b%27%2C align=%27center%27%29%0Aplt.yticks%28range%28len%28indices%29%29%2C %5Bfeatures%5Bi%5D for i in indices%5D%29%0Aplt.xlabel%28%27Relative Importance%27%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i3" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0A%0A%23 read CSV%0Adf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29" isIPythonHidden="True" />
<var name="_i30" type="str" qualifier="builtins" value="best_model.get%28%29" isIPythonHidden="True" />
<var name="_i31" type="str" qualifier="builtins" value="best_model.__getattribute__%28%29" isIPythonHidden="True" />
<var name="_i32" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_i33" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22visualize-sklearn%22%29" isIPythonHidden="True" />
<var name="_i4" type="str" qualifier="builtins" value="%23 event del Index Column%0Adf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%0Adf.head%28%29" isIPythonHidden="True" />
<var name="_i5" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29" isIPythonHidden="True" />
<var name="_i6" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%0Adf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29" isIPythonHidden="True" />
<var name="_i7" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%0Adf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29" isIPythonHidden="True" />
<var name="_i8" type="str" qualifier="builtins" value="%23add classification target%0Adef f%28row%29%3A%0A    if row%5B%27idle_time%27%5D %3C 56%3A%0A        val = 1%0A    elif row%5B%27idle_time%27%5D %3C 195%3A%0A        val = 2%0A    elif row%5B%27idle_time%27%5D %3C 488%3A%0A        val = 3%0A    else%3A%0A        val = 4%0A    return val%0A%0Adf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29" isIPythonHidden="True" />
<var name="_i9" type="str" qualifier="builtins" value="df.head%28%29" isIPythonHidden="True" />
<var name="_ih" type="list" qualifier="builtins" value="%5B%27%27%2C %22def importdata%28%29%3A%5Cn    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%5Cn    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %22%23 event del Index Column%5Cndf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%5Cndf.head%28%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29%22%2C %22%23add classification target%5Cndef f%28row%29%3A%5Cn    if row%5B%27idle_time%27%5D %3C 56%3A%5Cn        val = 1%5Cn    elif row%5B%27idle_time%27%5D %3C 195%3A%5Cn        val = 2%5Cn    elif row%5B%27idle_time%27%5D %3C 488%3A%5Cn        val = 3%5Cn    else%3A%5Cn        val = 4%5Cn    return val%5Cn%5Cndf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29%22%2C %27df..." isContainer="True" shape="34" isIPythonHidden="True" />
<var name="_ii" type="str" qualifier="builtins" value="best_model.__getattribute__%28%29" isIPythonHidden="True" />
<var name="_iii" type="str" qualifier="builtins" value="best_model.get%28%29" isIPythonHidden="True" />
<var name="_oh" type="dict" qualifier="builtins" value="%7B4%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %0A2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %0A3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %0A4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80   0.0   0.0     12    6       1427           1   %0A1      195  10.80   0.0   0.0     12    6       1427           1   %0A2       81  10.80   0.0   0.0     12    6       1437           1   %0A3       81  10.86   0.0   0.0      1    0          0           1   %0A4      195  10.86   0.0   0.0      1    0          0           0   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                1439         12  %0A2                14..." isContainer="True" shape="6" isIPythonHidden="True" />
<var name="_pydevd_bundle" type="module" qualifier="builtins" value="%3Cmodule %27_pydevd_bundle%27 from %27/Applications/PyCharm.app/Contents/plugins/python/helpers/pydev/_pydevd_bundle/__init__.py%27&gt;" isContainer="True" />
<var name="best_model" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C hidden_layer_sizes=%2850%2C 50%2C 50%2C 50%29%2C%0A              max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="best_score" type="float64" qualifier="numpy" value="-1.0336816581459078" shape="()" />
<var name="boxplot" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.775x0.755%29" isContainer="True" />
<var name="cls" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C hidden_layer_sizes=%28100%2C 50%2C 100%29%2C%0A              max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="df" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end  %5C %5B0           3694  51.323619  12.335887  1514764029  1514764799   %5D %5B1           2508  51.323619  12.335887  1514764035  1514764799   %5D %5B2          41851  51.332415  12.395158  1514764638  1514764799   %5D %5B3          41851  51.332415  12.395158  1514764800  1514851199   %5D %5B4           3694  51.323619  12.335887  1514764800  1514814103   %5D %5B...          ...        ...        ...         ...         ...   %5D %5B2547153    72243  51.367222  12.369617  1640897552  1640903562   %5D %5B2547154    72058  51.317569  12.382730  1640897593  1640904368   %5D %5B2547155    71949  51.334711  12.356763  1640897835  1640899343   %5D %5B2547156    97785  51.367276  12.369792  1640898086  1640900985   %5D %5B2547157    41738  51.366942  12.370322  1640900918  1640903516   %5D %5B%5D %5B                  hex_id  hex_enc   temp  rain  snow  month  day  start_min  %5C%5D %5B0        881f1a8d91fffff      195  10.80  0.00   0.0     12    6       1427   %5D %5B1        881f1a8d91fffff      195  10.80  0.00   ...%5D" isContainer="True" shape="(2547158, 17)" />
<var name="exit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7f93a6e96910&gt;" isContainer="True" isIPythonHidden="True" />
<var name="expected_y" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="f" type="function" qualifier="builtins" value="%3Cfunction f at 0x7f9345087f70&gt;" isContainer="True" />
<var name="feature_imp" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" />
<var name="fig" type="ConfusionMatrixDisplay" qualifier="sklearn.metrics._plot.confusion_matrix" value="%3Csklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay object at 0x7f9344523eb0&gt;" isContainer="True" />
<var name="get_ipython" type="method" qualifier="builtins" value="%3Cbound method InteractiveShell.get_ipython of %3Cipykernel.zmqshell.ZMQInteractiveShell object at 0x7f93a6e7d610&gt;&gt;" isContainer="True" isIPythonHidden="True" />
<var name="gsearch" type="GridSearchCV" qualifier="sklearn.model_selection._search" value="GridSearchCV%28cv=TimeSeriesSplit%28gap=0%2C max_train_size=None%2C n_splits=10%2C test_size=None%29%2C%0A             estimator=MLPClassifier%28early_stopping=True%2C max_iter=1000%2C%0A                                     verbose=1%29%2C%0A             param_grid=%7B%27hidden_layer_sizes%27%3A %5B%2810%2C 10%29%2C %2810%2C 10%2C 10%29%2C%0A                                                %2810%2C 10%2C 10%2C 10%29%2C %2850%2C 50%29%2C%0A                                                %2850%2C 50%2C 50%29%2C %2850%2C 50%2C 50%2C 50%29%2C%0A                                                %28100%2C 100%29%2C %28100%2C 100%2C 100%29%2C%0A                                                %28100%2C 100%2C 100%2C 100%29%5D%7D%2C%0A             scoring=make_scorer%28rmse%2C greater_is_better=False%29%29" isContainer="True" />
<var name="importdata" type="function" qualifier="builtins" value="%3Cfunction importdata at 0x7f93a6eef5e0&gt;" isContainer="True" />
<var name="make_scorer" type="function" qualifier="builtins" value="%3Cfunction make_scorer at 0x7f9345aead30&gt;" isContainer="True" />
<var name="metrics" type="module" qualifier="builtins" value="%3Cmodule %27sklearn.metrics%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/sklearn/metrics/__init__.py%27&gt;" isContainer="True" />
<var name="model" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="np" type="module" qualifier="builtins" value="%3Cmodule %27numpy%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/numpy/__init__.py%27&gt;" isContainer="True" />
<var name="param_search" type="dict" qualifier="builtins" value="%7B%27hidden_layer_sizes%27%3A %5B%2810%2C 10%29%2C %2810%2C 10%2C 10%29%2C %2810%2C 10%2C 10%2C 10%29%2C %2850%2C 50%29%2C %2850%2C 50%2C 50%29%2C %2850%2C 50%2C 50%2C 50%29%2C %28100%2C 100%29%2C %28100%2C 100%2C 100%29%2C %28100%2C 100%2C 100%2C 100%29%5D%7D" isContainer="True" shape="1" />
<var name="pd" type="module" qualifier="builtins" value="%3Cmodule %27pandas%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/pandas/__init__.py%27&gt;" isContainer="True" />
<var name="plt" type="module" qualifier="builtins" value="%3Cmodule %27matplotlib.pyplot%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/matplotlib/pyplot.py%27&gt;" isContainer="True" />
<var name="predicted_y" type="ndarray" qualifier="numpy" value="%5B1 2 2 2 4 3 1 3 3 4 1 2 2 4 1 2 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 2 1 1 4 4%2C 1 2 1 4 4 1 3 1 1 1 1 2 2 3 4 1 4 1 1 1 1 3 4 4 3 2 1 3 3 3 1 4 4 3 4 1 2%2C 1 2 3 3 4 3 3 1 3 1 3 4 2 4 3 4 2 2 4 2 3 2 1 3 3 2%5D" isContainer="True" shape="(509432,)" />
<var name="print_columns" type="function" qualifier="builtins" value="%3Cfunction print_columns at 0x7f9343f18dc0&gt;" isContainer="True" />
<var name="pydev_jupyter_vars" type="module" qualifier="builtins" value="%3Cmodule %27pydev_jupyter_vars%27 from %27/Applications/PyCharm.app/Contents/plugins/python/helpers-pro/jupyter_debug/pydev_jupyter_vars.py%27&gt;" isContainer="True" />
<var name="quit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7f93a6e96910&gt;" isContainer="True" isIPythonHidden="True" />
<var name="regression_results" type="function" qualifier="builtins" value="%3Cfunction regression_results at 0x7f9343f18ee0&gt;" isContainer="True" />
<var name="remove_imported_pydev_package" type="function" qualifier="builtins" value="%3Cfunction remove_imported_pydev_package at 0x7f93a6eef280&gt;" isContainer="True" />
<var name="rf_y_pred" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 4 4 1 2 2 4 3 1 4 1 1 3 4 3 4 1 2 4 2 1 3 3 4 1 3 1 1 4 4%2C 1 1 2 4 4 1 3 1 2 1 1 4 3 3 4 1 4 2 1 1 2 1 4 4 3 1 1 3 3 4 1 1 4 3 4 1 3%2C 1 1 3 3 4 3 3 1 2 2 3 4 1 3 2 2 2 2 4 2 3 2 3 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="rfc" type="RandomForestClassifier" qualifier="sklearn.ensemble._forest" value="RandomForestClassifier%28%29" isContainer="True" shape="100" />
<var name="rmse" type="function" qualifier="builtins" value="%3Cfunction rmse at 0x7f9343f18ca0&gt;" isContainer="True" />
<var name="rmse_score" type="_PredictScorer" qualifier="sklearn.metrics._scorer" value="make_scorer%28rmse%2C greater_is_better=False%29" isContainer="True" />
<var name="sns" type="module" qualifier="builtins" value="%3Cmodule %27seaborn%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/seaborn/__init__.py%27&gt;" isContainer="True" />
<var name="sys" type="module" qualifier="builtins" value="%3Cmodule %27sys%27 %28built-in%29&gt;" isContainer="True" />
<var name="train_test_split" type="function" qualifier="builtins" value="%3Cfunction train_test_split at 0x7f9344c24820&gt;" isContainer="True" />
<var name="tscv" type="TimeSeriesSplit" qualifier="sklearn.model_selection._split" value="TimeSeriesSplit%28gap=0%2C max_train_size=None%2C n_splits=10%2C test_size=None%29" isContainer="True" />
<var name="wandb" type="module" qualifier="builtins" value="%3Cmodule %27wandb%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/wandb/__init__.py%27&gt;" isContainer="True" />
<var name="y" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(2547158, 1)" />
<var name="y_pred" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 3 4 1 2 2 4 1 1 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 3 1 1 3 4%2C 1 1 1 4 4 1 3 1 1 2 1 4 2 3 3 1 4 1 1 1 1 1 4 4 3 2 1 2 3 4 1 4 4 3 4 1 2%2C 2 3 3 3 4 3 3 1 2 1 3 4 2 4 1 4 2 2 4 2 3 2 2 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="y_test" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="y_train" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(2037726, 1)" />
<var name="y_true" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
</xml>
<xml><var name="ConfusionMatrixDisplay" type="type" qualifier="builtins" value="%3Cclass %27sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay%27&gt;" isContainer="True" />
<var name="DataFrame" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.frame.DataFrame%27&gt;" isContainer="True" />
<var name="GridSearchCV" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._search.GridSearchCV%27&gt;" isContainer="True" />
<var name="In" type="list" qualifier="builtins" value="%5B%27%27%2C %22def importdata%28%29%3A%5Cn    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%5Cn    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %22%23 event del Index Column%5Cndf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%5Cndf.head%28%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29%22%2C %22%23add classification target%5Cndef f%28row%29%3A%5Cn    if row%5B%27idle_time%27%5D %3C 56%3A%5Cn        val = 1%5Cn    elif row%5B%27idle_time%27%5D %3C 195%3A%5Cn        val = 2%5Cn    elif row%5B%27idle_time%27%5D %3C 488%3A%5Cn        val = 3%5Cn    else%3A%5Cn        val = 4%5Cn    return val%5Cn%5Cndf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29%22%2C %27df..." isContainer="True" shape="35" isIPythonHidden="True" />
<var name="MLPClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.neural_network._multilayer_perceptron.MLPClassifier%27&gt;" isContainer="True" />
<var name="MultiIndex" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.indexes.multi.MultiIndex%27&gt;" isContainer="True" />
<var name="Out" type="dict" qualifier="builtins" value="%7B4%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %0A2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %0A3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %0A4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80   0.0   0.0     12    6       1427           1   %0A1      195  10.80   0.0   0.0     12    6       1427           1   %0A2       81  10.80   0.0   0.0     12    6       1437           1   %0A3       81  10.86   0.0   0.0      1    0          0           1   %0A4      195  10.86   0.0   0.0      1    0          0           0   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                1439         12  %0A2                14..." isContainer="True" shape="6" isIPythonHidden="True" />
<var name="PredictorScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="PredictorScalerFit" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="Predictors" type="list" qualifier="builtins" value="%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C %27hex_enc%27%2C %27start_min%27%2C %27month%27%2C %27day%27%5D" isContainer="True" shape="11" />
<var name="RandomForestClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._forest.RandomForestClassifier%27&gt;" isContainer="True" />
<var name="RandomForestRegressor" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._forest.RandomForestRegressor%27&gt;" isContainer="True" />
<var name="StandardScaler" type="type" qualifier="builtins" value="%3Cclass %27sklearn.preprocessing._data.StandardScaler%27&gt;" isContainer="True" />
<var name="TargetVarScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="TargetVariable" type="list" qualifier="builtins" value="%5B%27idle_time_class%27%5D" isContainer="True" shape="1" />
<var name="TimeSeriesSplit" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._split.TimeSeriesSplit%27&gt;" isContainer="True" />
<var name="X" type="ndarray" qualifier="numpy" value="%5B%5B-3.48291031  0.05221204  0.00831509 ...  1.74586868  1.62198697%2C   1.52004291%5D%2C %5B-3.53864896  0.05221204  0.00831509 ...  1.74586868  1.62198697%2C   1.52004291%5D%2C %5B-1.68963911  0.05525741  0.0933678  ...  1.7676273   1.62198697%2C   1.52004291%5D%2C ...%2C %5B-3.50067524  0.05965731  0.03911388 ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%2C %5B-3.42209597  0.05545353 -0.0107677  ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%2C %5B-3.51129661  0.05743199  0.04654993 ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%5D" isContainer="True" shape="(2547158, 11)" />
<var name="X_test" type="ndarray" qualifier="numpy" value="%5B%5B 1.05071915  0.04889693  0.11413728 ...  0.63617885  0.62918419%2C  -1.0372361 %5D%2C %5B-0.27530614  0.06483141  0.04634295 ...  0.68187196 -0.36361858%2C  -0.01432449%5D%2C %5B 1.05175309  0.04263701  0.08134823 ... -0.14495576 -0.36361858%2C   1.00858711%5D%2C ...%2C %5B-1.69631271  0.05545353 -0.0107677  ...  0.93209614 -0.36361858%2C  -0.52578029%5D%2C %5B 0.73480414  0.05847147  0.11548136 ... -1.35908699  0.29824993%2C  -0.01432449%5D%2C %5B-0.26548373  0.05469059  0.00189398 ... -0.02963505 -0.03268432%2C   0.49713131%5D%5D" isContainer="True" shape="(509432, 11)" />
<var name="X_train" type="ndarray" qualifier="numpy" value="%5B%5B-1.70087144  0.05915032  0.06987419 ... -0.46480754  0.96011845%2C  -0.52578029%5D%2C %5B 0.73973884  0.05925821  0.07617097 ... -0.16889025  0.96011845%2C   1.00858711%5D%2C %5B-1.69678268  0.05520917  0.10957407 ...  0.92339269  1.29105271%2C  -1.5486919 %5D%2C ...%2C %5B 0.74420358  0.05981332  0.10904473 ... -1.35908699 -0.69455284%2C   1.52004291%5D%2C %5B 0.74425057  0.07199308  0.1287628  ... -1.35908699 -0.69455284%2C  -1.0372361 %5D%2C %5B-0.27666906  0.05176837  0.06976643 ...  1.27805826 -0.36361858%2C  -1.0372361 %5D%5D" isContainer="True" shape="(2037726, 11)" />
<var name="_" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7f8d53de0100&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_16" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" isIPythonHidden="True" />
<var name="_33" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7f8d53de0100&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_4" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  %5D %5B0                 821         12  %5D %5B1                1439         12  %5D %5B2                1439  ...%5D" isContainer="True" shape="(5, 16)" isIPythonHidden="True" />
<var name="_6" type="Series" qualifier="pandas.core.series" value="%280.25%2C 56.0%29 %280.5%2C 195.0%29 %280.75%2C 488.0%29" isContainer="True" shape="(3,)" isIPythonHidden="True" />
<var name="_7" type="Series" qualifier="pandas.core.series" value="%280.25%2C 56.0%29 %280.5%2C 195.0%29 %280.75%2C 488.0%29 %281.0%2C 1439.0%29" isContainer="True" shape="(4,)" isIPythonHidden="True" />
<var name="_9" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  idle_time_class  %5D %5B0                 821         12                1  %5D %5B1                1439   ...%5D" isContainer="True" shape="(5, 17)" isIPythonHidden="True" />
<var name="__" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" isIPythonHidden="True" />
<var name="___" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  idle_time_class  %5D %5B0                 821         12                1  %5D %5B1                1439   ...%5D" isContainer="True" shape="(5, 17)" isIPythonHidden="True" />
<var name="__builtin__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtins__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__doc__" type="str" qualifier="builtins" value="Automatically created module for IPython interactive environment" isIPythonHidden="True" />
<var name="__loader__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__name__" type="str" qualifier="builtins" value="__main__" isIPythonHidden="True" />
<var name="__package__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__spec__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="_dh" type="list" qualifier="builtins" value="%5B%27/Users/jonweske/devment/BA_nextbike/scripts%27%5D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_i" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22visualize-sklearn%22%29" isIPythonHidden="True" />
<var name="_i1" type="str" qualifier="builtins" value="def importdata%28%29%3A%0A    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%0A    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29" isIPythonHidden="True" />
<var name="_i10" type="str" qualifier="builtins" value="TargetVariable=%5B%27idle_time_class%27%5D%0APredictors=%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C%27hex_enc%27%2C%27start_min%27%2C %27month%27%2C %27day%27%2C%5D" isIPythonHidden="True" />
<var name="_i11" type="str" qualifier="builtins" value="X=df%5BPredictors%5D.values%0Ay=df%5BTargetVariable%5D.values%0A%0A%23%23%23 Sandardization of data %23%23%23%0Afrom sklearn.preprocessing import StandardScaler%0APredictorScaler=StandardScaler%28%29%0ATargetVarScaler=StandardScaler%28%29%0A%0A%23 Storing the fit object for later reference%0APredictorScalerFit=PredictorScaler.fit%28X%29%0A%23TargetVarScalerFit=TargetVarScaler.fit%28y%29%0A%0A%23 Generating the standardized values of X and y%0AX=PredictorScalerFit.transform%28X%29%0A%23y=TargetVarScalerFit.transform%28y%29%0A%0A%0A%23 Split the data into training and testing set%0Afrom sklearn.model_selection import train_test_split%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28X%2C y%2C test_size=0.2%2C random_state=42%29%0A%0A%23 Quick sanity check with the shapes of Training and testing datasets%0Aprint%28X_train.shape%29%0Aprint%28y_train.shape%29%0Aprint%28X_test.shape%29%0Aprint%28y_test.shape%29" isIPythonHidden="True" />
<var name="_i12" type="str" qualifier="builtins" value="from sklearn.neural_network import MLPClassifier%0Aimport matplotlib.pyplot as plt%0Afrom sklearn.metrics import ConfusionMatrixDisplay%0A%0Acls = MLPClassifier%28hidden_layer_sizes=%28100%2C50%2C100%29%2C activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=1%2C early_stopping=True%29%0Acls.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Aexpected_y = y_test%0Apredicted_y = cls.predict%28X_test%29%0A%0Aprint%28cls.score%28X_test%2C y_test%29%29%0A%0Afig = ConfusionMatrixDisplay.from_predictions%28predicted_y%2Cexpected_y%2Ccmap=plt.cm.Blues%29%0Afig.figure_.suptitle%28%22Confusion Matrix%22%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i13" type="str" qualifier="builtins" value="def regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29%0A%0Aregression_results%28expected_y%2C predicted_y%29" isIPythonHidden="True" />
<var name="_i14" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29%0A%0Aregression_results%28expected_y%2C predicted_y%29" isIPythonHidden="True" />
<var name="_i15" type="str" qualifier="builtins" value="from sklearn.ensemble import RandomForestClassifier%0A%0Arfc = RandomForestClassifier%28n_estimators=100%29%0A%0Arfc.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Arf_y_pred = rfc.predict%28X_test%29%0A%0Arfc.score%28X_test%2Cy_test%29%0A%0Afig = ConfusionMatrixDisplay.from_predictions%28rf_y_pred%2Cexpected_y%2Ccmap=plt.cm.Blues%29%0Afig.figure_.suptitle%28%22Confusion Matrix RandomForestClassifier%22%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i16" type="str" qualifier="builtins" value="import pandas as pd%0A%0Afeature_imp = pd.Series%28rfc.feature_importances_%2Cindex=Predictors%29.sort_values%28ascending=False%29%0Afeature_imp" isIPythonHidden="True" />
<var name="_i17" type="str" qualifier="builtins" value="import matplotlib.pyplot as plt%0Aimport seaborn as sns%0A%25matplotlib inline%0A%23 Creating a bar plot%0Asns.barplot%28x=feature_imp%2C y=feature_imp.index%29%0A%23 Add labels to your graph%0Aplt.xlabel%28%27Feature Importance Score%27%29%0Aplt.ylabel%28%27Features%27%29%0Aplt.title%28%22Visualizing Important Features%22%29%0Aplt.legend%28%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i18" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i19" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i2" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0A%0A%23 read CSV%0Adf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29" isIPythonHidden="True" />
<var name="_i20" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i21" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i22" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i23" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i24" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0Afrom sklearn.ensemble import RandomForestRegressor%0Afrom sklearn.model_selection import TimeSeriesSplit%0A%0Amodel = MLPClassifier%28activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=0%2C early_stopping=True%29%0Aparam_search = %7B%0A    %27hidden_layer_sizes%27%3A %5B%2810%2C10%29%2C %2810%2C10%2C10%29%2C %2810%2C10%2C10%2C10%29%2C%0A                           %2850%2C50%29%2C %2850%2C50%2C50%29%2C %2850%2C50%2C50%2C50%29%2C%0A                           %28100%2C100%29%2C %28100%2C100%2C100%29%2C %28100%2C100%2C100%2C100%29%5D%7D%0Atscv = TimeSeriesSplit%28n_splits=10%29%0Agsearch = GridSearchCV%28estimator=model%2C cv=tscv%2C param_grid=param_search%2C scoring = rmse_score%29%0Agsearch.fit%28X_train%2C y_train.ravel%28%29%29%0Abest_score = gsearch.best_score_%0Abest_model = gsearch.best_estimator_" isIPythonHidden="True" />
<var name="_i25" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i26" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i27" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0Afrom sklearn.ensemble import RandomForestRegressor%0Afrom sklearn.model_selection import TimeSeriesSplit%0A%0Amodel = MLPClassifier%28activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=1%2C early_stopping=True%29%0Aparam_search = %7B%0A    %27hidden_layer_sizes%27%3A %5B%2810%2C10%29%2C %2810%2C10%2C10%29%2C %2810%2C10%2C10%2C10%29%2C%0A                           %2850%2C50%29%2C %2850%2C50%2C50%29%2C %2850%2C50%2C50%2C50%29%2C%0A                           %28100%2C100%29%2C %28100%2C100%2C100%29%2C %28100%2C100%2C100%2C100%29%5D%7D%0Atscv = TimeSeriesSplit%28n_splits=10%29%0Agsearch = GridSearchCV%28estimator=model%2C cv=tscv%2C param_grid=param_search%2C scoring = rmse_score%29%0Agsearch.fit%28X_train%2C y_train.ravel%28%29%29%0Abest_score = gsearch.best_score_%0Abest_model = gsearch.best_estimator_" isIPythonHidden="True" />
<var name="_i28" type="str" qualifier="builtins" value="y_true = y_test%0Ay_pred = best_model.predict%28X_test%29%0A%0Aregression_results%28y_true%2C y_pred%29" isIPythonHidden="True" />
<var name="_i29" type="str" qualifier="builtins" value="imp = best_model.feature_importances_%0AX_train = pd.DataFrame%28X_train%2Ccolumns=Predictors%29%0Afeatures = X_train.columns%0Aindices = np.argsort%28imp%29%0Aplt.title%28%27Feature Importances%27%29%0Aplt.barh%28range%28len%28indices%29%29%2C imp%5Bindices%5D%2C color=%27b%27%2C align=%27center%27%29%0Aplt.yticks%28range%28len%28indices%29%29%2C %5Bfeatures%5Bi%5D for i in indices%5D%29%0Aplt.xlabel%28%27Relative Importance%27%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i3" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0A%0A%23 read CSV%0Adf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29" isIPythonHidden="True" />
<var name="_i30" type="str" qualifier="builtins" value="best_model.get%28%29" isIPythonHidden="True" />
<var name="_i31" type="str" qualifier="builtins" value="best_model.__getattribute__%28%29" isIPythonHidden="True" />
<var name="_i32" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_i33" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22visualize-sklearn%22%29" isIPythonHidden="True" />
<var name="_i34" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i4" type="str" qualifier="builtins" value="%23 event del Index Column%0Adf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%0Adf.head%28%29" isIPythonHidden="True" />
<var name="_i5" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29" isIPythonHidden="True" />
<var name="_i6" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%0Adf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29" isIPythonHidden="True" />
<var name="_i7" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%0Adf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29" isIPythonHidden="True" />
<var name="_i8" type="str" qualifier="builtins" value="%23add classification target%0Adef f%28row%29%3A%0A    if row%5B%27idle_time%27%5D %3C 56%3A%0A        val = 1%0A    elif row%5B%27idle_time%27%5D %3C 195%3A%0A        val = 2%0A    elif row%5B%27idle_time%27%5D %3C 488%3A%0A        val = 3%0A    else%3A%0A        val = 4%0A    return val%0A%0Adf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29" isIPythonHidden="True" />
<var name="_i9" type="str" qualifier="builtins" value="df.head%28%29" isIPythonHidden="True" />
<var name="_ih" type="list" qualifier="builtins" value="%5B%27%27%2C %22def importdata%28%29%3A%5Cn    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%5Cn    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %22%23 event del Index Column%5Cndf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%5Cndf.head%28%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29%22%2C %22%23add classification target%5Cndef f%28row%29%3A%5Cn    if row%5B%27idle_time%27%5D %3C 56%3A%5Cn        val = 1%5Cn    elif row%5B%27idle_time%27%5D %3C 195%3A%5Cn        val = 2%5Cn    elif row%5B%27idle_time%27%5D %3C 488%3A%5Cn        val = 3%5Cn    else%3A%5Cn        val = 4%5Cn    return val%5Cn%5Cndf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29%22%2C %27df..." isContainer="True" shape="35" isIPythonHidden="True" />
<var name="_ii" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_iii" type="str" qualifier="builtins" value="best_model.__getattribute__%28%29" isIPythonHidden="True" />
<var name="_oh" type="dict" qualifier="builtins" value="%7B4%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %0A2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %0A3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %0A4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80   0.0   0.0     12    6       1427           1   %0A1      195  10.80   0.0   0.0     12    6       1427           1   %0A2       81  10.80   0.0   0.0     12    6       1437           1   %0A3       81  10.86   0.0   0.0      1    0          0           1   %0A4      195  10.86   0.0   0.0      1    0          0           0   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                1439         12  %0A2                14..." isContainer="True" shape="6" isIPythonHidden="True" />
<var name="_pydevd_bundle" type="module" qualifier="builtins" value="%3Cmodule %27_pydevd_bundle%27 from %27/Applications/PyCharm.app/Contents/plugins/python/helpers/pydev/_pydevd_bundle/__init__.py%27&gt;" isContainer="True" />
<var name="best_model" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C hidden_layer_sizes=%2850%2C 50%2C 50%2C 50%29%2C%0A              max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="best_score" type="float64" qualifier="numpy" value="-1.0336816581459078" shape="()" />
<var name="boxplot" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.775x0.755%29" isContainer="True" />
<var name="cls" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C hidden_layer_sizes=%28100%2C 50%2C 100%29%2C%0A              max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="df" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end  %5C %5B0           3694  51.323619  12.335887  1514764029  1514764799   %5D %5B1           2508  51.323619  12.335887  1514764035  1514764799   %5D %5B2          41851  51.332415  12.395158  1514764638  1514764799   %5D %5B3          41851  51.332415  12.395158  1514764800  1514851199   %5D %5B4           3694  51.323619  12.335887  1514764800  1514814103   %5D %5B...          ...        ...        ...         ...         ...   %5D %5B2547153    72243  51.367222  12.369617  1640897552  1640903562   %5D %5B2547154    72058  51.317569  12.382730  1640897593  1640904368   %5D %5B2547155    71949  51.334711  12.356763  1640897835  1640899343   %5D %5B2547156    97785  51.367276  12.369792  1640898086  1640900985   %5D %5B2547157    41738  51.366942  12.370322  1640900918  1640903516   %5D %5B%5D %5B                  hex_id  hex_enc   temp  rain  snow  month  day  start_min  %5C%5D %5B0        881f1a8d91fffff      195  10.80  0.00   0.0     12    6       1427   %5D %5B1        881f1a8d91fffff      195  10.80  0.00   ...%5D" isContainer="True" shape="(2547158, 17)" />
<var name="exit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7f93a6e96910&gt;" isContainer="True" isIPythonHidden="True" />
<var name="expected_y" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="f" type="function" qualifier="builtins" value="%3Cfunction f at 0x7f9345087f70&gt;" isContainer="True" />
<var name="feature_imp" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" />
<var name="fig" type="ConfusionMatrixDisplay" qualifier="sklearn.metrics._plot.confusion_matrix" value="%3Csklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay object at 0x7f9344523eb0&gt;" isContainer="True" />
<var name="get_ipython" type="method" qualifier="builtins" value="%3Cbound method InteractiveShell.get_ipython of %3Cipykernel.zmqshell.ZMQInteractiveShell object at 0x7f93a6e7d610&gt;&gt;" isContainer="True" isIPythonHidden="True" />
<var name="gsearch" type="GridSearchCV" qualifier="sklearn.model_selection._search" value="GridSearchCV%28cv=TimeSeriesSplit%28gap=0%2C max_train_size=None%2C n_splits=10%2C test_size=None%29%2C%0A             estimator=MLPClassifier%28early_stopping=True%2C max_iter=1000%2C%0A                                     verbose=1%29%2C%0A             param_grid=%7B%27hidden_layer_sizes%27%3A %5B%2810%2C 10%29%2C %2810%2C 10%2C 10%29%2C%0A                                                %2810%2C 10%2C 10%2C 10%29%2C %2850%2C 50%29%2C%0A                                                %2850%2C 50%2C 50%29%2C %2850%2C 50%2C 50%2C 50%29%2C%0A                                                %28100%2C 100%29%2C %28100%2C 100%2C 100%29%2C%0A                                                %28100%2C 100%2C 100%2C 100%29%5D%7D%2C%0A             scoring=make_scorer%28rmse%2C greater_is_better=False%29%29" isContainer="True" />
<var name="importdata" type="function" qualifier="builtins" value="%3Cfunction importdata at 0x7f93a6eef5e0&gt;" isContainer="True" />
<var name="make_scorer" type="function" qualifier="builtins" value="%3Cfunction make_scorer at 0x7f9345aead30&gt;" isContainer="True" />
<var name="metrics" type="module" qualifier="builtins" value="%3Cmodule %27sklearn.metrics%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/sklearn/metrics/__init__.py%27&gt;" isContainer="True" />
<var name="model" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="np" type="module" qualifier="builtins" value="%3Cmodule %27numpy%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/numpy/__init__.py%27&gt;" isContainer="True" />
<var name="param_search" type="dict" qualifier="builtins" value="%7B%27hidden_layer_sizes%27%3A %5B%2810%2C 10%29%2C %2810%2C 10%2C 10%29%2C %2810%2C 10%2C 10%2C 10%29%2C %2850%2C 50%29%2C %2850%2C 50%2C 50%29%2C %2850%2C 50%2C 50%2C 50%29%2C %28100%2C 100%29%2C %28100%2C 100%2C 100%29%2C %28100%2C 100%2C 100%2C 100%29%5D%7D" isContainer="True" shape="1" />
<var name="pd" type="module" qualifier="builtins" value="%3Cmodule %27pandas%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/pandas/__init__.py%27&gt;" isContainer="True" />
<var name="plt" type="module" qualifier="builtins" value="%3Cmodule %27matplotlib.pyplot%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/matplotlib/pyplot.py%27&gt;" isContainer="True" />
<var name="predicted_y" type="ndarray" qualifier="numpy" value="%5B1 2 2 2 4 3 1 3 3 4 1 2 2 4 1 2 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 2 1 1 4 4%2C 1 2 1 4 4 1 3 1 1 1 1 2 2 3 4 1 4 1 1 1 1 3 4 4 3 2 1 3 3 3 1 4 4 3 4 1 2%2C 1 2 3 3 4 3 3 1 3 1 3 4 2 4 3 4 2 2 4 2 3 2 1 3 3 2%5D" isContainer="True" shape="(509432,)" />
<var name="print_columns" type="function" qualifier="builtins" value="%3Cfunction print_columns at 0x7f8d54ae4700&gt;" isContainer="True" />
<var name="pydev_jupyter_vars" type="module" qualifier="builtins" value="%3Cmodule %27pydev_jupyter_vars%27 from %27/Applications/PyCharm.app/Contents/plugins/python/helpers-pro/jupyter_debug/pydev_jupyter_vars.py%27&gt;" isContainer="True" />
<var name="quit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7f93a6e96910&gt;" isContainer="True" isIPythonHidden="True" />
<var name="regression_results" type="function" qualifier="builtins" value="%3Cfunction regression_results at 0x7f9343f18ee0&gt;" isContainer="True" />
<var name="remove_imported_pydev_package" type="function" qualifier="builtins" value="%3Cfunction remove_imported_pydev_package at 0x7f93a6eef280&gt;" isContainer="True" />
<var name="rf_y_pred" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 4 4 1 2 2 4 3 1 4 1 1 3 4 3 4 1 2 4 2 1 3 3 4 1 3 1 1 4 4%2C 1 1 2 4 4 1 3 1 2 1 1 4 3 3 4 1 4 2 1 1 2 1 4 4 3 1 1 3 3 4 1 1 4 3 4 1 3%2C 1 1 3 3 4 3 3 1 2 2 3 4 1 3 2 2 2 2 4 2 3 2 3 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="rfc" type="RandomForestClassifier" qualifier="sklearn.ensemble._forest" value="RandomForestClassifier%28%29" isContainer="True" shape="100" />
<var name="rmse" type="function" qualifier="builtins" value="%3Cfunction rmse at 0x7f9343f18ca0&gt;" isContainer="True" />
<var name="rmse_score" type="_PredictScorer" qualifier="sklearn.metrics._scorer" value="make_scorer%28rmse%2C greater_is_better=False%29" isContainer="True" />
<var name="sns" type="module" qualifier="builtins" value="%3Cmodule %27seaborn%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/seaborn/__init__.py%27&gt;" isContainer="True" />
<var name="sys" type="module" qualifier="builtins" value="%3Cmodule %27sys%27 %28built-in%29&gt;" isContainer="True" />
<var name="train_test_split" type="function" qualifier="builtins" value="%3Cfunction train_test_split at 0x7f9344c24820&gt;" isContainer="True" />
<var name="tscv" type="TimeSeriesSplit" qualifier="sklearn.model_selection._split" value="TimeSeriesSplit%28gap=0%2C max_train_size=None%2C n_splits=10%2C test_size=None%29" isContainer="True" />
<var name="wandb" type="module" qualifier="builtins" value="%3Cmodule %27wandb%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/wandb/__init__.py%27&gt;" isContainer="True" />
<var name="y" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(2547158, 1)" />
<var name="y_pred" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 3 4 1 2 2 4 1 1 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 3 1 1 3 4%2C 1 1 1 4 4 1 3 1 1 2 1 4 2 3 3 1 4 1 1 1 1 1 4 4 3 2 1 2 3 4 1 4 4 3 4 1 2%2C 2 3 3 3 4 3 3 1 2 1 3 4 2 4 1 4 2 2 4 2 3 2 2 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="y_test" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="y_train" type="ndarray" qualifier="numpy" value="%5B%5B1%5D%2C %5B3%5D%2C %5B2%5D%2C %5B1%5D%2C %5B4%5D%2C %5B2%5D%2C %5B4%5D%2C %5B2%5D%2C %5B1%5D%2C %5B3%5D%2C %5B4%5D%2C %5B1%5D%2C %5B2%5D%2C %5B3%5D%2C %5B1%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B4%5D%2C %5B1%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B1%5D%2C %5B4%5D%2C %5B1%5D%2C %5B4%5D%2C %5B2%5D%2C %5B4%5D%2C %5B4%5D%2C %5B1%5D%2C %5B2%5D%2C %5B2%5D%2C %5B4%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B2%5D%2C %5B4%5D%2C %5B3%5D%2C %5B3%5D%2C %5B2%5D%2C %5B1%5D%2C %5B4%5D%2C %5B4%5D%2C %5B1%5D%2C %5B3%5D%2C %5B4%5D%2C %5B4%5D%2C %5B1%5D%2C %5B1%5D%2C %5B1%5D%2C %5B1%5D%2C %5B4%5D%2C %5B1%5D%2C %5B1%5D%2C %5B1%5D%2C %5B3%5D%2C %5B1%5D%2C %5B2%5D%2C %5B4%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B2%5D%2C %5B1%5D%2C %5B3%5D%2C %5B2%5D%2C %5B1%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B2%5D%2C %5B4%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B1%5D%2C %5B4%5D%2C %5B2%5D%2C %5B3%5D%2C %5B2%5D%2C %5B2%5D%2C %5B1%5D%2C %5B2%5D%2C %5B3%5D%2C %5B4%5D%2C %5B2%5D%2C %5B2%5D%2C %5B3%5D%2C %5B4%5D%2C %5B1%5D%2C %5B1%5D%2C %5B1%5D%2C %5B1%5D%2C %5B4%5D%2C %5B1%5D%2C %5B4%5D%2C %5B3%5D%5D" isContainer="True" shape="(2037726, 1)" />
<var name="y_true" type="ndarray" qualifier="numpy" value="%5B%5B1%5D%2C %5B4%5D%2C %5B4%5D%2C %5B3%5D%2C %5B4%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B4%5D%2C %5B3%5D%2C %5B1%5D%2C %5B4%5D%2C %5B3%5D%2C %5B4%5D%2C %5B3%5D%2C %5B1%5D%2C %5B4%5D%2C %5B3%5D%2C %5B2%5D%2C %5B3%5D%2C %5B4%5D%2C %5B3%5D%2C %5B4%5D%2C %5B1%5D%2C %5B1%5D%2C %5B3%5D%2C %5B1%5D%2C %5B1%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B4%5D%2C %5B1%5D%2C %5B3%5D%2C %5B1%5D%2C %5B4%5D%2C %5B1%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B4%5D%2C %5B4%5D%2C %5B1%5D%2C %5B3%5D%2C %5B1%5D%2C %5B1%5D%2C %5B3%5D%2C %5B1%5D%2C %5B1%5D%2C %5B2%5D%2C %5B1%5D%2C %5B3%5D%2C %5B2%5D%2C %5B3%5D%2C %5B1%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B3%5D%2C %5B1%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B3%5D%2C %5B4%5D%2C %5B1%5D%2C %5B4%5D%2C %5B4%5D%2C %5B3%5D%2C %5B4%5D%2C %5B1%5D%2C %5B3%5D%2C %5B2%5D%2C %5B3%5D%2C %5B4%5D%2C %5B1%5D%2C %5B3%5D%2C %5B3%5D%2C %5B1%5D%2C %5B1%5D%2C %5B2%5D%2C %5B3%5D%2C %5B1%5D%2C %5B4%5D%2C %5B1%5D%2C %5B3%5D%2C %5B3%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B4%5D%2C %5B1%5D%2C %5B4%5D%2C %5B2%5D%2C %5B1%5D%2C %5B3%5D%2C %5B4%5D%2C %5B2%5D%5D" isContainer="True" shape="(509432, 1)" />
</xml>
explained_variance:  0.1607
r2:  0.1556
MAE:  0.6252
MSE:  1.0555
RMSE:  1.0274
<xml><var name="ConfusionMatrixDisplay" type="type" qualifier="builtins" value="%3Cclass %27sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay%27&gt;" isContainer="True" />
<var name="DataFrame" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.frame.DataFrame%27&gt;" isContainer="True" />
<var name="GridSearchCV" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._search.GridSearchCV%27&gt;" isContainer="True" />
<var name="In" type="list" qualifier="builtins" value="%5B%27%27%2C %22def importdata%28%29%3A%5Cn    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%5Cn    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %22%23 event del Index Column%5Cndf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%5Cndf.head%28%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29%22%2C %22%23add classification target%5Cndef f%28row%29%3A%5Cn    if row%5B%27idle_time%27%5D %3C 56%3A%5Cn        val = 1%5Cn    elif row%5B%27idle_time%27%5D %3C 195%3A%5Cn        val = 2%5Cn    elif row%5B%27idle_time%27%5D %3C 488%3A%5Cn        val = 3%5Cn    else%3A%5Cn        val = 4%5Cn    return val%5Cn%5Cndf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29%22%2C %27df..." isContainer="True" shape="36" isIPythonHidden="True" />
<var name="MLPClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.neural_network._multilayer_perceptron.MLPClassifier%27&gt;" isContainer="True" />
<var name="MultiIndex" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.indexes.multi.MultiIndex%27&gt;" isContainer="True" />
<var name="Out" type="dict" qualifier="builtins" value="%7B4%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %0A2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %0A3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %0A4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80   0.0   0.0     12    6       1427           1   %0A1      195  10.80   0.0   0.0     12    6       1427           1   %0A2       81  10.80   0.0   0.0     12    6       1437           1   %0A3       81  10.86   0.0   0.0      1    0          0           1   %0A4      195  10.86   0.0   0.0      1    0          0           0   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                1439         12  %0A2                14..." isContainer="True" shape="6" isIPythonHidden="True" />
<var name="PredictorScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="PredictorScalerFit" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="Predictors" type="list" qualifier="builtins" value="%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C %27hex_enc%27%2C %27start_min%27%2C %27month%27%2C %27day%27%5D" isContainer="True" shape="11" />
<var name="RandomForestClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._forest.RandomForestClassifier%27&gt;" isContainer="True" />
<var name="RandomForestRegressor" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._forest.RandomForestRegressor%27&gt;" isContainer="True" />
<var name="StandardScaler" type="type" qualifier="builtins" value="%3Cclass %27sklearn.preprocessing._data.StandardScaler%27&gt;" isContainer="True" />
<var name="TargetVarScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="TargetVariable" type="list" qualifier="builtins" value="%5B%27idle_time_class%27%5D" isContainer="True" shape="1" />
<var name="TimeSeriesSplit" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._split.TimeSeriesSplit%27&gt;" isContainer="True" />
<var name="X" type="ndarray" qualifier="numpy" value="%5B%5B-3.48291031  0.05221204  0.00831509 ...  1.74586868  1.62198697%2C   1.52004291%5D%2C %5B-3.53864896  0.05221204  0.00831509 ...  1.74586868  1.62198697%2C   1.52004291%5D%2C %5B-1.68963911  0.05525741  0.0933678  ...  1.7676273   1.62198697%2C   1.52004291%5D%2C ...%2C %5B-3.50067524  0.05965731  0.03911388 ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%2C %5B-3.42209597  0.05545353 -0.0107677  ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%2C %5B-3.51129661  0.05743199  0.04654993 ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%5D" isContainer="True" shape="(2547158, 11)" />
<var name="X_test" type="ndarray" qualifier="numpy" value="%5B%5B 1.05071915  0.04889693  0.11413728 ...  0.63617885  0.62918419%2C  -1.0372361 %5D%2C %5B-0.27530614  0.06483141  0.04634295 ...  0.68187196 -0.36361858%2C  -0.01432449%5D%2C %5B 1.05175309  0.04263701  0.08134823 ... -0.14495576 -0.36361858%2C   1.00858711%5D%2C ...%2C %5B-1.69631271  0.05545353 -0.0107677  ...  0.93209614 -0.36361858%2C  -0.52578029%5D%2C %5B 0.73480414  0.05847147  0.11548136 ... -1.35908699  0.29824993%2C  -0.01432449%5D%2C %5B-0.26548373  0.05469059  0.00189398 ... -0.02963505 -0.03268432%2C   0.49713131%5D%5D" isContainer="True" shape="(509432, 11)" />
<var name="X_train" type="ndarray" qualifier="numpy" value="%5B%5B-1.70087144  0.05915032  0.06987419 ... -0.46480754  0.96011845%2C  -0.52578029%5D%2C %5B 0.73973884  0.05925821  0.07617097 ... -0.16889025  0.96011845%2C   1.00858711%5D%2C %5B-1.69678268  0.05520917  0.10957407 ...  0.92339269  1.29105271%2C  -1.5486919 %5D%2C ...%2C %5B 0.74420358  0.05981332  0.10904473 ... -1.35908699 -0.69455284%2C   1.52004291%5D%2C %5B 0.74425057  0.07199308  0.1287628  ... -1.35908699 -0.69455284%2C  -1.0372361 %5D%2C %5B-0.27666906  0.05176837  0.06976643 ...  1.27805826 -0.36361858%2C  -1.0372361 %5D%5D" isContainer="True" shape="(2037726, 11)" />
<var name="_" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7f8d53de0100&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_16" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" isIPythonHidden="True" />
<var name="_33" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7f8d53de0100&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_4" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  %5D %5B0                 821         12  %5D %5B1                1439         12  %5D %5B2                1439  ...%5D" isContainer="True" shape="(5, 16)" isIPythonHidden="True" />
<var name="_6" type="Series" qualifier="pandas.core.series" value="%280.25%2C 56.0%29 %280.5%2C 195.0%29 %280.75%2C 488.0%29" isContainer="True" shape="(3,)" isIPythonHidden="True" />
<var name="_7" type="Series" qualifier="pandas.core.series" value="%280.25%2C 56.0%29 %280.5%2C 195.0%29 %280.75%2C 488.0%29 %281.0%2C 1439.0%29" isContainer="True" shape="(4,)" isIPythonHidden="True" />
<var name="_9" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  idle_time_class  %5D %5B0                 821         12                1  %5D %5B1                1439   ...%5D" isContainer="True" shape="(5, 17)" isIPythonHidden="True" />
<var name="__" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" isIPythonHidden="True" />
<var name="___" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  idle_time_class  %5D %5B0                 821         12                1  %5D %5B1                1439   ...%5D" isContainer="True" shape="(5, 17)" isIPythonHidden="True" />
<var name="__builtin__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtins__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__doc__" type="str" qualifier="builtins" value="Automatically created module for IPython interactive environment" isIPythonHidden="True" />
<var name="__loader__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__name__" type="str" qualifier="builtins" value="__main__" isIPythonHidden="True" />
<var name="__package__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__spec__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="_dh" type="list" qualifier="builtins" value="%5B%27/Users/jonweske/devment/BA_nextbike/scripts%27%5D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_i" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i1" type="str" qualifier="builtins" value="def importdata%28%29%3A%0A    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%0A    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29" isIPythonHidden="True" />
<var name="_i10" type="str" qualifier="builtins" value="TargetVariable=%5B%27idle_time_class%27%5D%0APredictors=%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C%27hex_enc%27%2C%27start_min%27%2C %27month%27%2C %27day%27%2C%5D" isIPythonHidden="True" />
<var name="_i11" type="str" qualifier="builtins" value="X=df%5BPredictors%5D.values%0Ay=df%5BTargetVariable%5D.values%0A%0A%23%23%23 Sandardization of data %23%23%23%0Afrom sklearn.preprocessing import StandardScaler%0APredictorScaler=StandardScaler%28%29%0ATargetVarScaler=StandardScaler%28%29%0A%0A%23 Storing the fit object for later reference%0APredictorScalerFit=PredictorScaler.fit%28X%29%0A%23TargetVarScalerFit=TargetVarScaler.fit%28y%29%0A%0A%23 Generating the standardized values of X and y%0AX=PredictorScalerFit.transform%28X%29%0A%23y=TargetVarScalerFit.transform%28y%29%0A%0A%0A%23 Split the data into training and testing set%0Afrom sklearn.model_selection import train_test_split%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28X%2C y%2C test_size=0.2%2C random_state=42%29%0A%0A%23 Quick sanity check with the shapes of Training and testing datasets%0Aprint%28X_train.shape%29%0Aprint%28y_train.shape%29%0Aprint%28X_test.shape%29%0Aprint%28y_test.shape%29" isIPythonHidden="True" />
<var name="_i12" type="str" qualifier="builtins" value="from sklearn.neural_network import MLPClassifier%0Aimport matplotlib.pyplot as plt%0Afrom sklearn.metrics import ConfusionMatrixDisplay%0A%0Acls = MLPClassifier%28hidden_layer_sizes=%28100%2C50%2C100%29%2C activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=1%2C early_stopping=True%29%0Acls.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Aexpected_y = y_test%0Apredicted_y = cls.predict%28X_test%29%0A%0Aprint%28cls.score%28X_test%2C y_test%29%29%0A%0Afig = ConfusionMatrixDisplay.from_predictions%28predicted_y%2Cexpected_y%2Ccmap=plt.cm.Blues%29%0Afig.figure_.suptitle%28%22Confusion Matrix%22%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i13" type="str" qualifier="builtins" value="def regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29%0A%0Aregression_results%28expected_y%2C predicted_y%29" isIPythonHidden="True" />
<var name="_i14" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29%0A%0Aregression_results%28expected_y%2C predicted_y%29" isIPythonHidden="True" />
<var name="_i15" type="str" qualifier="builtins" value="from sklearn.ensemble import RandomForestClassifier%0A%0Arfc = RandomForestClassifier%28n_estimators=100%29%0A%0Arfc.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Arf_y_pred = rfc.predict%28X_test%29%0A%0Arfc.score%28X_test%2Cy_test%29%0A%0Afig = ConfusionMatrixDisplay.from_predictions%28rf_y_pred%2Cexpected_y%2Ccmap=plt.cm.Blues%29%0Afig.figure_.suptitle%28%22Confusion Matrix RandomForestClassifier%22%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i16" type="str" qualifier="builtins" value="import pandas as pd%0A%0Afeature_imp = pd.Series%28rfc.feature_importances_%2Cindex=Predictors%29.sort_values%28ascending=False%29%0Afeature_imp" isIPythonHidden="True" />
<var name="_i17" type="str" qualifier="builtins" value="import matplotlib.pyplot as plt%0Aimport seaborn as sns%0A%25matplotlib inline%0A%23 Creating a bar plot%0Asns.barplot%28x=feature_imp%2C y=feature_imp.index%29%0A%23 Add labels to your graph%0Aplt.xlabel%28%27Feature Importance Score%27%29%0Aplt.ylabel%28%27Features%27%29%0Aplt.title%28%22Visualizing Important Features%22%29%0Aplt.legend%28%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i18" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i19" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i2" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0A%0A%23 read CSV%0Adf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29" isIPythonHidden="True" />
<var name="_i20" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i21" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i22" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i23" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i24" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0Afrom sklearn.ensemble import RandomForestRegressor%0Afrom sklearn.model_selection import TimeSeriesSplit%0A%0Amodel = MLPClassifier%28activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=0%2C early_stopping=True%29%0Aparam_search = %7B%0A    %27hidden_layer_sizes%27%3A %5B%2810%2C10%29%2C %2810%2C10%2C10%29%2C %2810%2C10%2C10%2C10%29%2C%0A                           %2850%2C50%29%2C %2850%2C50%2C50%29%2C %2850%2C50%2C50%2C50%29%2C%0A                           %28100%2C100%29%2C %28100%2C100%2C100%29%2C %28100%2C100%2C100%2C100%29%5D%7D%0Atscv = TimeSeriesSplit%28n_splits=10%29%0Agsearch = GridSearchCV%28estimator=model%2C cv=tscv%2C param_grid=param_search%2C scoring = rmse_score%29%0Agsearch.fit%28X_train%2C y_train.ravel%28%29%29%0Abest_score = gsearch.best_score_%0Abest_model = gsearch.best_estimator_" isIPythonHidden="True" />
<var name="_i25" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i26" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i27" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0Afrom sklearn.ensemble import RandomForestRegressor%0Afrom sklearn.model_selection import TimeSeriesSplit%0A%0Amodel = MLPClassifier%28activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=1%2C early_stopping=True%29%0Aparam_search = %7B%0A    %27hidden_layer_sizes%27%3A %5B%2810%2C10%29%2C %2810%2C10%2C10%29%2C %2810%2C10%2C10%2C10%29%2C%0A                           %2850%2C50%29%2C %2850%2C50%2C50%29%2C %2850%2C50%2C50%2C50%29%2C%0A                           %28100%2C100%29%2C %28100%2C100%2C100%29%2C %28100%2C100%2C100%2C100%29%5D%7D%0Atscv = TimeSeriesSplit%28n_splits=10%29%0Agsearch = GridSearchCV%28estimator=model%2C cv=tscv%2C param_grid=param_search%2C scoring = rmse_score%29%0Agsearch.fit%28X_train%2C y_train.ravel%28%29%29%0Abest_score = gsearch.best_score_%0Abest_model = gsearch.best_estimator_" isIPythonHidden="True" />
<var name="_i28" type="str" qualifier="builtins" value="y_true = y_test%0Ay_pred = best_model.predict%28X_test%29%0A%0Aregression_results%28y_true%2C y_pred%29" isIPythonHidden="True" />
<var name="_i29" type="str" qualifier="builtins" value="imp = best_model.feature_importances_%0AX_train = pd.DataFrame%28X_train%2Ccolumns=Predictors%29%0Afeatures = X_train.columns%0Aindices = np.argsort%28imp%29%0Aplt.title%28%27Feature Importances%27%29%0Aplt.barh%28range%28len%28indices%29%29%2C imp%5Bindices%5D%2C color=%27b%27%2C align=%27center%27%29%0Aplt.yticks%28range%28len%28indices%29%29%2C %5Bfeatures%5Bi%5D for i in indices%5D%29%0Aplt.xlabel%28%27Relative Importance%27%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i3" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0A%0A%23 read CSV%0Adf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29" isIPythonHidden="True" />
<var name="_i30" type="str" qualifier="builtins" value="best_model.get%28%29" isIPythonHidden="True" />
<var name="_i31" type="str" qualifier="builtins" value="best_model.__getattribute__%28%29" isIPythonHidden="True" />
<var name="_i32" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_i33" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22visualize-sklearn%22%29" isIPythonHidden="True" />
<var name="_i34" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i35" type="str" qualifier="builtins" value="y_true_mlp = y_test%0Ay_pred_mlp = best_model.predict%28X_test%29%0A%0Aregression_results%28y_true_mlp%2C y_pred_mlp%29" isIPythonHidden="True" />
<var name="_i4" type="str" qualifier="builtins" value="%23 event del Index Column%0Adf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%0Adf.head%28%29" isIPythonHidden="True" />
<var name="_i5" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29" isIPythonHidden="True" />
<var name="_i6" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%0Adf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29" isIPythonHidden="True" />
<var name="_i7" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%0Adf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29" isIPythonHidden="True" />
<var name="_i8" type="str" qualifier="builtins" value="%23add classification target%0Adef f%28row%29%3A%0A    if row%5B%27idle_time%27%5D %3C 56%3A%0A        val = 1%0A    elif row%5B%27idle_time%27%5D %3C 195%3A%0A        val = 2%0A    elif row%5B%27idle_time%27%5D %3C 488%3A%0A        val = 3%0A    else%3A%0A        val = 4%0A    return val%0A%0Adf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29" isIPythonHidden="True" />
<var name="_i9" type="str" qualifier="builtins" value="df.head%28%29" isIPythonHidden="True" />
<var name="_ih" type="list" qualifier="builtins" value="%5B%27%27%2C %22def importdata%28%29%3A%5Cn    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%5Cn    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %22%23 event del Index Column%5Cndf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%5Cndf.head%28%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29%22%2C %22%23add classification target%5Cndef f%28row%29%3A%5Cn    if row%5B%27idle_time%27%5D %3C 56%3A%5Cn        val = 1%5Cn    elif row%5B%27idle_time%27%5D %3C 195%3A%5Cn        val = 2%5Cn    elif row%5B%27idle_time%27%5D %3C 488%3A%5Cn        val = 3%5Cn    else%3A%5Cn        val = 4%5Cn    return val%5Cn%5Cndf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29%22%2C %27df..." isContainer="True" shape="36" isIPythonHidden="True" />
<var name="_ii" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22visualize-sklearn%22%29" isIPythonHidden="True" />
<var name="_iii" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_oh" type="dict" qualifier="builtins" value="%7B4%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %0A2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %0A3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %0A4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80   0.0   0.0     12    6       1427           1   %0A1      195  10.80   0.0   0.0     12    6       1427           1   %0A2       81  10.80   0.0   0.0     12    6       1437           1   %0A3       81  10.86   0.0   0.0      1    0          0           1   %0A4      195  10.86   0.0   0.0      1    0          0           0   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                1439         12  %0A2                14..." isContainer="True" shape="6" isIPythonHidden="True" />
<var name="_pydevd_bundle" type="module" qualifier="builtins" value="%3Cmodule %27_pydevd_bundle%27 from %27/Applications/PyCharm.app/Contents/plugins/python/helpers/pydev/_pydevd_bundle/__init__.py%27&gt;" isContainer="True" />
<var name="best_model" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C hidden_layer_sizes=%2850%2C 50%2C 50%2C 50%29%2C%0A              max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="best_score" type="float64" qualifier="numpy" value="-1.0336816581459078" shape="()" />
<var name="boxplot" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.775x0.755%29" isContainer="True" />
<var name="cls" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C hidden_layer_sizes=%28100%2C 50%2C 100%29%2C%0A              max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="df" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end  %5C %5B0           3694  51.323619  12.335887  1514764029  1514764799   %5D %5B1           2508  51.323619  12.335887  1514764035  1514764799   %5D %5B2          41851  51.332415  12.395158  1514764638  1514764799   %5D %5B3          41851  51.332415  12.395158  1514764800  1514851199   %5D %5B4           3694  51.323619  12.335887  1514764800  1514814103   %5D %5B...          ...        ...        ...         ...         ...   %5D %5B2547153    72243  51.367222  12.369617  1640897552  1640903562   %5D %5B2547154    72058  51.317569  12.382730  1640897593  1640904368   %5D %5B2547155    71949  51.334711  12.356763  1640897835  1640899343   %5D %5B2547156    97785  51.367276  12.369792  1640898086  1640900985   %5D %5B2547157    41738  51.366942  12.370322  1640900918  1640903516   %5D %5B%5D %5B                  hex_id  hex_enc   temp  rain  snow  month  day  start_min  %5C%5D %5B0        881f1a8d91fffff      195  10.80  0.00   0.0     12    6       1427   %5D %5B1        881f1a8d91fffff      195  10.80  0.00   ...%5D" isContainer="True" shape="(2547158, 17)" />
<var name="exit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7f93a6e96910&gt;" isContainer="True" isIPythonHidden="True" />
<var name="expected_y" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="f" type="function" qualifier="builtins" value="%3Cfunction f at 0x7f9345087f70&gt;" isContainer="True" />
<var name="feature_imp" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" />
<var name="fig" type="ConfusionMatrixDisplay" qualifier="sklearn.metrics._plot.confusion_matrix" value="%3Csklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay object at 0x7f9344523eb0&gt;" isContainer="True" />
<var name="get_ipython" type="method" qualifier="builtins" value="%3Cbound method InteractiveShell.get_ipython of %3Cipykernel.zmqshell.ZMQInteractiveShell object at 0x7f93a6e7d610&gt;&gt;" isContainer="True" isIPythonHidden="True" />
<var name="gsearch" type="GridSearchCV" qualifier="sklearn.model_selection._search" value="GridSearchCV%28cv=TimeSeriesSplit%28gap=0%2C max_train_size=None%2C n_splits=10%2C test_size=None%29%2C%0A             estimator=MLPClassifier%28early_stopping=True%2C max_iter=1000%2C%0A                                     verbose=1%29%2C%0A             param_grid=%7B%27hidden_layer_sizes%27%3A %5B%2810%2C 10%29%2C %2810%2C 10%2C 10%29%2C%0A                                                %2810%2C 10%2C 10%2C 10%29%2C %2850%2C 50%29%2C%0A                                                %2850%2C 50%2C 50%29%2C %2850%2C 50%2C 50%2C 50%29%2C%0A                                                %28100%2C 100%29%2C %28100%2C 100%2C 100%29%2C%0A                                                %28100%2C 100%2C 100%2C 100%29%5D%7D%2C%0A             scoring=make_scorer%28rmse%2C greater_is_better=False%29%29" isContainer="True" />
<var name="importdata" type="function" qualifier="builtins" value="%3Cfunction importdata at 0x7f93a6eef5e0&gt;" isContainer="True" />
<var name="make_scorer" type="function" qualifier="builtins" value="%3Cfunction make_scorer at 0x7f9345aead30&gt;" isContainer="True" />
<var name="metrics" type="module" qualifier="builtins" value="%3Cmodule %27sklearn.metrics%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/sklearn/metrics/__init__.py%27&gt;" isContainer="True" />
<var name="model" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="np" type="module" qualifier="builtins" value="%3Cmodule %27numpy%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/numpy/__init__.py%27&gt;" isContainer="True" />
<var name="param_search" type="dict" qualifier="builtins" value="%7B%27hidden_layer_sizes%27%3A %5B%2810%2C 10%29%2C %2810%2C 10%2C 10%29%2C %2810%2C 10%2C 10%2C 10%29%2C %2850%2C 50%29%2C %2850%2C 50%2C 50%29%2C %2850%2C 50%2C 50%2C 50%29%2C %28100%2C 100%29%2C %28100%2C 100%2C 100%29%2C %28100%2C 100%2C 100%2C 100%29%5D%7D" isContainer="True" shape="1" />
<var name="pd" type="module" qualifier="builtins" value="%3Cmodule %27pandas%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/pandas/__init__.py%27&gt;" isContainer="True" />
<var name="plt" type="module" qualifier="builtins" value="%3Cmodule %27matplotlib.pyplot%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/matplotlib/pyplot.py%27&gt;" isContainer="True" />
<var name="predicted_y" type="ndarray" qualifier="numpy" value="%5B1 2 2 2 4 3 1 3 3 4 1 2 2 4 1 2 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 2 1 1 4 4%2C 1 2 1 4 4 1 3 1 1 1 1 2 2 3 4 1 4 1 1 1 1 3 4 4 3 2 1 3 3 3 1 4 4 3 4 1 2%2C 1 2 3 3 4 3 3 1 3 1 3 4 2 4 3 4 2 2 4 2 3 2 1 3 3 2%5D" isContainer="True" shape="(509432,)" />
<var name="print_columns" type="function" qualifier="builtins" value="%3Cfunction print_columns at 0x7f8d54ae4700&gt;" isContainer="True" />
<var name="pydev_jupyter_vars" type="module" qualifier="builtins" value="%3Cmodule %27pydev_jupyter_vars%27 from %27/Applications/PyCharm.app/Contents/plugins/python/helpers-pro/jupyter_debug/pydev_jupyter_vars.py%27&gt;" isContainer="True" />
<var name="quit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7f93a6e96910&gt;" isContainer="True" isIPythonHidden="True" />
<var name="regression_results" type="function" qualifier="builtins" value="%3Cfunction regression_results at 0x7f9343f18ee0&gt;" isContainer="True" />
<var name="remove_imported_pydev_package" type="function" qualifier="builtins" value="%3Cfunction remove_imported_pydev_package at 0x7f93a6eef280&gt;" isContainer="True" />
<var name="rf_y_pred" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 4 4 1 2 2 4 3 1 4 1 1 3 4 3 4 1 2 4 2 1 3 3 4 1 3 1 1 4 4%2C 1 1 2 4 4 1 3 1 2 1 1 4 3 3 4 1 4 2 1 1 2 1 4 4 3 1 1 3 3 4 1 1 4 3 4 1 3%2C 1 1 3 3 4 3 3 1 2 2 3 4 1 3 2 2 2 2 4 2 3 2 3 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="rfc" type="RandomForestClassifier" qualifier="sklearn.ensemble._forest" value="RandomForestClassifier%28%29" isContainer="True" shape="100" />
<var name="rmse" type="function" qualifier="builtins" value="%3Cfunction rmse at 0x7f9343f18ca0&gt;" isContainer="True" />
<var name="rmse_score" type="_PredictScorer" qualifier="sklearn.metrics._scorer" value="make_scorer%28rmse%2C greater_is_better=False%29" isContainer="True" />
<var name="sns" type="module" qualifier="builtins" value="%3Cmodule %27seaborn%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/seaborn/__init__.py%27&gt;" isContainer="True" />
<var name="sys" type="module" qualifier="builtins" value="%3Cmodule %27sys%27 %28built-in%29&gt;" isContainer="True" />
<var name="train_test_split" type="function" qualifier="builtins" value="%3Cfunction train_test_split at 0x7f9344c24820&gt;" isContainer="True" />
<var name="tscv" type="TimeSeriesSplit" qualifier="sklearn.model_selection._split" value="TimeSeriesSplit%28gap=0%2C max_train_size=None%2C n_splits=10%2C test_size=None%29" isContainer="True" />
<var name="wandb" type="module" qualifier="builtins" value="%3Cmodule %27wandb%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/wandb/__init__.py%27&gt;" isContainer="True" />
<var name="y" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(2547158, 1)" />
<var name="y_pred" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 3 4 1 2 2 4 1 1 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 3 1 1 3 4%2C 1 1 1 4 4 1 3 1 1 2 1 4 2 3 3 1 4 1 1 1 1 1 4 4 3 2 1 2 3 4 1 4 4 3 4 1 2%2C 2 3 3 3 4 3 3 1 2 1 3 4 2 4 1 4 2 2 4 2 3 2 2 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="y_pred_mlp" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 3 4 1 2 2 4 1 1 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 3 1 1 3 4%2C 1 1 1 4 4 1 3 1 1 2 1 4 2 3 3 1 4 1 1 1 1 1 4 4 3 2 1 2 3 4 1 4 4 3 4 1 2%2C 2 3 3 3 4 3 3 1 2 1 3 4 2 4 1 4 2 2 4 2 3 2 2 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="y_test" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="y_train" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(2037726, 1)" />
<var name="y_true" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="y_true_mlp" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
</xml>
MLPClassifier(early_stopping=True, hidden_layer_sizes=(50, 50, 50, 50),
              max_iter=1000, verbose=1)
<xml><var name="ConfusionMatrixDisplay" type="type" qualifier="builtins" value="%3Cclass %27sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay%27&gt;" isContainer="True" />
<var name="DataFrame" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.frame.DataFrame%27&gt;" isContainer="True" />
<var name="GridSearchCV" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._search.GridSearchCV%27&gt;" isContainer="True" />
<var name="In" type="list" qualifier="builtins" value="%5B%27%27%2C %22def importdata%28%29%3A%5Cn    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%5Cn    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %22%23 event del Index Column%5Cndf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%5Cndf.head%28%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29%22%2C %22%23add classification target%5Cndef f%28row%29%3A%5Cn    if row%5B%27idle_time%27%5D %3C 56%3A%5Cn        val = 1%5Cn    elif row%5B%27idle_time%27%5D %3C 195%3A%5Cn        val = 2%5Cn    elif row%5B%27idle_time%27%5D %3C 488%3A%5Cn        val = 3%5Cn    else%3A%5Cn        val = 4%5Cn    return val%5Cn%5Cndf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29%22%2C %27df..." isContainer="True" shape="37" isIPythonHidden="True" />
<var name="MLPClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.neural_network._multilayer_perceptron.MLPClassifier%27&gt;" isContainer="True" />
<var name="MultiIndex" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.indexes.multi.MultiIndex%27&gt;" isContainer="True" />
<var name="Out" type="dict" qualifier="builtins" value="%7B4%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %0A2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %0A3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %0A4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80   0.0   0.0     12    6       1427           1   %0A1      195  10.80   0.0   0.0     12    6       1427           1   %0A2       81  10.80   0.0   0.0     12    6       1437           1   %0A3       81  10.86   0.0   0.0      1    0          0           1   %0A4      195  10.86   0.0   0.0      1    0          0           0   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                1439         12  %0A2                14..." isContainer="True" shape="6" isIPythonHidden="True" />
<var name="PredictorScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="PredictorScalerFit" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="Predictors" type="list" qualifier="builtins" value="%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C %27hex_enc%27%2C %27start_min%27%2C %27month%27%2C %27day%27%5D" isContainer="True" shape="11" />
<var name="RandomForestClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._forest.RandomForestClassifier%27&gt;" isContainer="True" />
<var name="RandomForestRegressor" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._forest.RandomForestRegressor%27&gt;" isContainer="True" />
<var name="StandardScaler" type="type" qualifier="builtins" value="%3Cclass %27sklearn.preprocessing._data.StandardScaler%27&gt;" isContainer="True" />
<var name="TargetVarScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="TargetVariable" type="list" qualifier="builtins" value="%5B%27idle_time_class%27%5D" isContainer="True" shape="1" />
<var name="TimeSeriesSplit" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._split.TimeSeriesSplit%27&gt;" isContainer="True" />
<var name="X" type="ndarray" qualifier="numpy" value="%5B%5B-3.48291031  0.05221204  0.00831509 ...  1.74586868  1.62198697%2C   1.52004291%5D%2C %5B-3.53864896  0.05221204  0.00831509 ...  1.74586868  1.62198697%2C   1.52004291%5D%2C %5B-1.68963911  0.05525741  0.0933678  ...  1.7676273   1.62198697%2C   1.52004291%5D%2C ...%2C %5B-3.50067524  0.05965731  0.03911388 ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%2C %5B-3.42209597  0.05545353 -0.0107677  ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%2C %5B-3.51129661  0.05743199  0.04654993 ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%5D" isContainer="True" shape="(2547158, 11)" />
<var name="X_test" type="ndarray" qualifier="numpy" value="%5B%5B 1.05071915  0.04889693  0.11413728 ...  0.63617885  0.62918419%2C  -1.0372361 %5D%2C %5B-0.27530614  0.06483141  0.04634295 ...  0.68187196 -0.36361858%2C  -0.01432449%5D%2C %5B 1.05175309  0.04263701  0.08134823 ... -0.14495576 -0.36361858%2C   1.00858711%5D%2C ...%2C %5B-1.69631271  0.05545353 -0.0107677  ...  0.93209614 -0.36361858%2C  -0.52578029%5D%2C %5B 0.73480414  0.05847147  0.11548136 ... -1.35908699  0.29824993%2C  -0.01432449%5D%2C %5B-0.26548373  0.05469059  0.00189398 ... -0.02963505 -0.03268432%2C   0.49713131%5D%5D" isContainer="True" shape="(509432, 11)" />
<var name="X_train" type="ndarray" qualifier="numpy" value="%5B%5B-1.70087144  0.05915032  0.06987419 ... -0.46480754  0.96011845%2C  -0.52578029%5D%2C %5B 0.73973884  0.05925821  0.07617097 ... -0.16889025  0.96011845%2C   1.00858711%5D%2C %5B-1.69678268  0.05520917  0.10957407 ...  0.92339269  1.29105271%2C  -1.5486919 %5D%2C ...%2C %5B 0.74420358  0.05981332  0.10904473 ... -1.35908699 -0.69455284%2C   1.52004291%5D%2C %5B 0.74425057  0.07199308  0.1287628  ... -1.35908699 -0.69455284%2C  -1.0372361 %5D%2C %5B-0.27666906  0.05176837  0.06976643 ...  1.27805826 -0.36361858%2C  -1.0372361 %5D%5D" isContainer="True" shape="(2037726, 11)" />
<var name="_" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7f8d53de0100&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_16" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" isIPythonHidden="True" />
<var name="_33" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7f8d53de0100&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_4" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  %5D %5B0                 821         12  %5D %5B1                1439         12  %5D %5B2                1439  ...%5D" isContainer="True" shape="(5, 16)" isIPythonHidden="True" />
<var name="_6" type="Series" qualifier="pandas.core.series" value="%280.25%2C 56.0%29 %280.5%2C 195.0%29 %280.75%2C 488.0%29" isContainer="True" shape="(3,)" isIPythonHidden="True" />
<var name="_7" type="Series" qualifier="pandas.core.series" value="%280.25%2C 56.0%29 %280.5%2C 195.0%29 %280.75%2C 488.0%29 %281.0%2C 1439.0%29" isContainer="True" shape="(4,)" isIPythonHidden="True" />
<var name="_9" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  idle_time_class  %5D %5B0                 821         12                1  %5D %5B1                1439   ...%5D" isContainer="True" shape="(5, 17)" isIPythonHidden="True" />
<var name="__" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" isIPythonHidden="True" />
<var name="___" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  idle_time_class  %5D %5B0                 821         12                1  %5D %5B1                1439   ...%5D" isContainer="True" shape="(5, 17)" isIPythonHidden="True" />
<var name="__builtin__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtins__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__doc__" type="str" qualifier="builtins" value="Automatically created module for IPython interactive environment" isIPythonHidden="True" />
<var name="__loader__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__name__" type="str" qualifier="builtins" value="__main__" isIPythonHidden="True" />
<var name="__package__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__spec__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="_dh" type="list" qualifier="builtins" value="%5B%27/Users/jonweske/devment/BA_nextbike/scripts%27%5D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_i" type="str" qualifier="builtins" value="y_true_mlp = y_test%0Ay_pred_mlp = best_model.predict%28X_test%29%0A%0Aregression_results%28y_true_mlp%2C y_pred_mlp%29" isIPythonHidden="True" />
<var name="_i1" type="str" qualifier="builtins" value="def importdata%28%29%3A%0A    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%0A    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29" isIPythonHidden="True" />
<var name="_i10" type="str" qualifier="builtins" value="TargetVariable=%5B%27idle_time_class%27%5D%0APredictors=%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C%27hex_enc%27%2C%27start_min%27%2C %27month%27%2C %27day%27%2C%5D" isIPythonHidden="True" />
<var name="_i11" type="str" qualifier="builtins" value="X=df%5BPredictors%5D.values%0Ay=df%5BTargetVariable%5D.values%0A%0A%23%23%23 Sandardization of data %23%23%23%0Afrom sklearn.preprocessing import StandardScaler%0APredictorScaler=StandardScaler%28%29%0ATargetVarScaler=StandardScaler%28%29%0A%0A%23 Storing the fit object for later reference%0APredictorScalerFit=PredictorScaler.fit%28X%29%0A%23TargetVarScalerFit=TargetVarScaler.fit%28y%29%0A%0A%23 Generating the standardized values of X and y%0AX=PredictorScalerFit.transform%28X%29%0A%23y=TargetVarScalerFit.transform%28y%29%0A%0A%0A%23 Split the data into training and testing set%0Afrom sklearn.model_selection import train_test_split%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28X%2C y%2C test_size=0.2%2C random_state=42%29%0A%0A%23 Quick sanity check with the shapes of Training and testing datasets%0Aprint%28X_train.shape%29%0Aprint%28y_train.shape%29%0Aprint%28X_test.shape%29%0Aprint%28y_test.shape%29" isIPythonHidden="True" />
<var name="_i12" type="str" qualifier="builtins" value="from sklearn.neural_network import MLPClassifier%0Aimport matplotlib.pyplot as plt%0Afrom sklearn.metrics import ConfusionMatrixDisplay%0A%0Acls = MLPClassifier%28hidden_layer_sizes=%28100%2C50%2C100%29%2C activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=1%2C early_stopping=True%29%0Acls.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Aexpected_y = y_test%0Apredicted_y = cls.predict%28X_test%29%0A%0Aprint%28cls.score%28X_test%2C y_test%29%29%0A%0Afig = ConfusionMatrixDisplay.from_predictions%28predicted_y%2Cexpected_y%2Ccmap=plt.cm.Blues%29%0Afig.figure_.suptitle%28%22Confusion Matrix%22%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i13" type="str" qualifier="builtins" value="def regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29%0A%0Aregression_results%28expected_y%2C predicted_y%29" isIPythonHidden="True" />
<var name="_i14" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29%0A%0Aregression_results%28expected_y%2C predicted_y%29" isIPythonHidden="True" />
<var name="_i15" type="str" qualifier="builtins" value="from sklearn.ensemble import RandomForestClassifier%0A%0Arfc = RandomForestClassifier%28n_estimators=100%29%0A%0Arfc.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Arf_y_pred = rfc.predict%28X_test%29%0A%0Arfc.score%28X_test%2Cy_test%29%0A%0Afig = ConfusionMatrixDisplay.from_predictions%28rf_y_pred%2Cexpected_y%2Ccmap=plt.cm.Blues%29%0Afig.figure_.suptitle%28%22Confusion Matrix RandomForestClassifier%22%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i16" type="str" qualifier="builtins" value="import pandas as pd%0A%0Afeature_imp = pd.Series%28rfc.feature_importances_%2Cindex=Predictors%29.sort_values%28ascending=False%29%0Afeature_imp" isIPythonHidden="True" />
<var name="_i17" type="str" qualifier="builtins" value="import matplotlib.pyplot as plt%0Aimport seaborn as sns%0A%25matplotlib inline%0A%23 Creating a bar plot%0Asns.barplot%28x=feature_imp%2C y=feature_imp.index%29%0A%23 Add labels to your graph%0Aplt.xlabel%28%27Feature Importance Score%27%29%0Aplt.ylabel%28%27Features%27%29%0Aplt.title%28%22Visualizing Important Features%22%29%0Aplt.legend%28%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i18" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i19" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i2" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0A%0A%23 read CSV%0Adf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29" isIPythonHidden="True" />
<var name="_i20" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i21" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i22" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i23" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i24" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0Afrom sklearn.ensemble import RandomForestRegressor%0Afrom sklearn.model_selection import TimeSeriesSplit%0A%0Amodel = MLPClassifier%28activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=0%2C early_stopping=True%29%0Aparam_search = %7B%0A    %27hidden_layer_sizes%27%3A %5B%2810%2C10%29%2C %2810%2C10%2C10%29%2C %2810%2C10%2C10%2C10%29%2C%0A                           %2850%2C50%29%2C %2850%2C50%2C50%29%2C %2850%2C50%2C50%2C50%29%2C%0A                           %28100%2C100%29%2C %28100%2C100%2C100%29%2C %28100%2C100%2C100%2C100%29%5D%7D%0Atscv = TimeSeriesSplit%28n_splits=10%29%0Agsearch = GridSearchCV%28estimator=model%2C cv=tscv%2C param_grid=param_search%2C scoring = rmse_score%29%0Agsearch.fit%28X_train%2C y_train.ravel%28%29%29%0Abest_score = gsearch.best_score_%0Abest_model = gsearch.best_estimator_" isIPythonHidden="True" />
<var name="_i25" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i26" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i27" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0Afrom sklearn.ensemble import RandomForestRegressor%0Afrom sklearn.model_selection import TimeSeriesSplit%0A%0Amodel = MLPClassifier%28activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=1%2C early_stopping=True%29%0Aparam_search = %7B%0A    %27hidden_layer_sizes%27%3A %5B%2810%2C10%29%2C %2810%2C10%2C10%29%2C %2810%2C10%2C10%2C10%29%2C%0A                           %2850%2C50%29%2C %2850%2C50%2C50%29%2C %2850%2C50%2C50%2C50%29%2C%0A                           %28100%2C100%29%2C %28100%2C100%2C100%29%2C %28100%2C100%2C100%2C100%29%5D%7D%0Atscv = TimeSeriesSplit%28n_splits=10%29%0Agsearch = GridSearchCV%28estimator=model%2C cv=tscv%2C param_grid=param_search%2C scoring = rmse_score%29%0Agsearch.fit%28X_train%2C y_train.ravel%28%29%29%0Abest_score = gsearch.best_score_%0Abest_model = gsearch.best_estimator_" isIPythonHidden="True" />
<var name="_i28" type="str" qualifier="builtins" value="y_true = y_test%0Ay_pred = best_model.predict%28X_test%29%0A%0Aregression_results%28y_true%2C y_pred%29" isIPythonHidden="True" />
<var name="_i29" type="str" qualifier="builtins" value="imp = best_model.feature_importances_%0AX_train = pd.DataFrame%28X_train%2Ccolumns=Predictors%29%0Afeatures = X_train.columns%0Aindices = np.argsort%28imp%29%0Aplt.title%28%27Feature Importances%27%29%0Aplt.barh%28range%28len%28indices%29%29%2C imp%5Bindices%5D%2C color=%27b%27%2C align=%27center%27%29%0Aplt.yticks%28range%28len%28indices%29%29%2C %5Bfeatures%5Bi%5D for i in indices%5D%29%0Aplt.xlabel%28%27Relative Importance%27%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i3" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0A%0A%23 read CSV%0Adf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29" isIPythonHidden="True" />
<var name="_i30" type="str" qualifier="builtins" value="best_model.get%28%29" isIPythonHidden="True" />
<var name="_i31" type="str" qualifier="builtins" value="best_model.__getattribute__%28%29" isIPythonHidden="True" />
<var name="_i32" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_i33" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22visualize-sklearn%22%29" isIPythonHidden="True" />
<var name="_i34" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i35" type="str" qualifier="builtins" value="y_true_mlp = y_test%0Ay_pred_mlp = best_model.predict%28X_test%29%0A%0Aregression_results%28y_true_mlp%2C y_pred_mlp%29" isIPythonHidden="True" />
<var name="_i36" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_i4" type="str" qualifier="builtins" value="%23 event del Index Column%0Adf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%0Adf.head%28%29" isIPythonHidden="True" />
<var name="_i5" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29" isIPythonHidden="True" />
<var name="_i6" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%0Adf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29" isIPythonHidden="True" />
<var name="_i7" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%0Adf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29" isIPythonHidden="True" />
<var name="_i8" type="str" qualifier="builtins" value="%23add classification target%0Adef f%28row%29%3A%0A    if row%5B%27idle_time%27%5D %3C 56%3A%0A        val = 1%0A    elif row%5B%27idle_time%27%5D %3C 195%3A%0A        val = 2%0A    elif row%5B%27idle_time%27%5D %3C 488%3A%0A        val = 3%0A    else%3A%0A        val = 4%0A    return val%0A%0Adf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29" isIPythonHidden="True" />
<var name="_i9" type="str" qualifier="builtins" value="df.head%28%29" isIPythonHidden="True" />
<var name="_ih" type="list" qualifier="builtins" value="%5B%27%27%2C %22def importdata%28%29%3A%5Cn    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%5Cn    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %22%23 event del Index Column%5Cndf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%5Cndf.head%28%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29%22%2C %22%23add classification target%5Cndef f%28row%29%3A%5Cn    if row%5B%27idle_time%27%5D %3C 56%3A%5Cn        val = 1%5Cn    elif row%5B%27idle_time%27%5D %3C 195%3A%5Cn        val = 2%5Cn    elif row%5B%27idle_time%27%5D %3C 488%3A%5Cn        val = 3%5Cn    else%3A%5Cn        val = 4%5Cn    return val%5Cn%5Cndf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29%22%2C %27df..." isContainer="True" shape="37" isIPythonHidden="True" />
<var name="_ii" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_iii" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22visualize-sklearn%22%29" isIPythonHidden="True" />
<var name="_oh" type="dict" qualifier="builtins" value="%7B4%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %0A2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %0A3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %0A4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80   0.0   0.0     12    6       1427           1   %0A1      195  10.80   0.0   0.0     12    6       1427           1   %0A2       81  10.80   0.0   0.0     12    6       1437           1   %0A3       81  10.86   0.0   0.0      1    0          0           1   %0A4      195  10.86   0.0   0.0      1    0          0           0   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                1439         12  %0A2                14..." isContainer="True" shape="6" isIPythonHidden="True" />
<var name="_pydevd_bundle" type="module" qualifier="builtins" value="%3Cmodule %27_pydevd_bundle%27 from %27/Applications/PyCharm.app/Contents/plugins/python/helpers/pydev/_pydevd_bundle/__init__.py%27&gt;" isContainer="True" />
<var name="best_model" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C hidden_layer_sizes=%2850%2C 50%2C 50%2C 50%29%2C%0A              max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="best_score" type="float64" qualifier="numpy" value="-1.0336816581459078" shape="()" />
<var name="boxplot" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.775x0.755%29" isContainer="True" />
<var name="cls" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C hidden_layer_sizes=%28100%2C 50%2C 100%29%2C%0A              max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="df" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end  %5C %5B0           3694  51.323619  12.335887  1514764029  1514764799   %5D %5B1           2508  51.323619  12.335887  1514764035  1514764799   %5D %5B2          41851  51.332415  12.395158  1514764638  1514764799   %5D %5B3          41851  51.332415  12.395158  1514764800  1514851199   %5D %5B4           3694  51.323619  12.335887  1514764800  1514814103   %5D %5B...          ...        ...        ...         ...         ...   %5D %5B2547153    72243  51.367222  12.369617  1640897552  1640903562   %5D %5B2547154    72058  51.317569  12.382730  1640897593  1640904368   %5D %5B2547155    71949  51.334711  12.356763  1640897835  1640899343   %5D %5B2547156    97785  51.367276  12.369792  1640898086  1640900985   %5D %5B2547157    41738  51.366942  12.370322  1640900918  1640903516   %5D %5B%5D %5B                  hex_id  hex_enc   temp  rain  snow  month  day  start_min  %5C%5D %5B0        881f1a8d91fffff      195  10.80  0.00   0.0     12    6       1427   %5D %5B1        881f1a8d91fffff      195  10.80  0.00   ...%5D" isContainer="True" shape="(2547158, 17)" />
<var name="exit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7f93a6e96910&gt;" isContainer="True" isIPythonHidden="True" />
<var name="expected_y" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="f" type="function" qualifier="builtins" value="%3Cfunction f at 0x7f9345087f70&gt;" isContainer="True" />
<var name="feature_imp" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" />
<xml><var name="ConfusionMatrixDisplay" type="type" qualifier="builtins" value="%3Cclass %27sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay%27&gt;" isContainer="True" />
<var name="DataFrame" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.frame.DataFrame%27&gt;" isContainer="True" />
<var name="GridSearchCV" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._search.GridSearchCV%27&gt;" isContainer="True" />
<var name="In" type="list" qualifier="builtins" value="%5B%27%27%2C %22def importdata%28%29%3A%5Cn    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%5Cn    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %22%23 event del Index Column%5Cndf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%5Cndf.head%28%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29%22%2C %22%23add classification target%5Cndef f%28row%29%3A%5Cn    if row%5B%27idle_time%27%5D %3C 56%3A%5Cn        val = 1%5Cn    elif row%5B%27idle_time%27%5D %3C 195%3A%5Cn        val = 2%5Cn    elif row%5B%27idle_time%27%5D %3C 488%3A%5Cn        val = 3%5Cn    else%3A%5Cn        val = 4%5Cn    return val%5Cn%5Cndf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29%22%2C %27df..." isContainer="True" shape="38" isIPythonHidden="True" />
<var name="MLPClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.neural_network._multilayer_perceptron.MLPClassifier%27&gt;" isContainer="True" />
<var name="MultiIndex" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.indexes.multi.MultiIndex%27&gt;" isContainer="True" />
<var name="Out" type="dict" qualifier="builtins" value="%7B4%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %0A2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %0A3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %0A4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80   0.0   0.0     12    6       1427           1   %0A1      195  10.80   0.0   0.0     12    6       1427           1   %0A2       81  10.80   0.0   0.0     12    6       1437           1   %0A3       81  10.86   0.0   0.0      1    0          0           1   %0A4      195  10.86   0.0   0.0      1    0          0           0   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                1439         12  %0A2                14..." isContainer="True" shape="6" isIPythonHidden="True" />
<var name="PredictorScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="PredictorScalerFit" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="Predictors" type="list" qualifier="builtins" value="%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C %27hex_enc%27%2C %27start_min%27%2C %27month%27%2C %27day%27%5D" isContainer="True" shape="11" />
<var name="RandomForestClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._forest.RandomForestClassifier%27&gt;" isContainer="True" />
<var name="RandomForestRegressor" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._forest.RandomForestRegressor%27&gt;" isContainer="True" />
<var name="StandardScaler" type="type" qualifier="builtins" value="%3Cclass %27sklearn.preprocessing._data.StandardScaler%27&gt;" isContainer="True" />
<var name="TargetVarScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="TargetVariable" type="list" qualifier="builtins" value="%5B%27idle_time_class%27%5D" isContainer="True" shape="1" />
<var name="TimeSeriesSplit" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._split.TimeSeriesSplit%27&gt;" isContainer="True" />
<var name="X" type="ndarray" qualifier="numpy" value="%5B%5B-3.48291031  0.05221204  0.00831509 ...  1.74586868  1.62198697%2C   1.52004291%5D%2C %5B-3.53864896  0.05221204  0.00831509 ...  1.74586868  1.62198697%2C   1.52004291%5D%2C %5B-1.68963911  0.05525741  0.0933678  ...  1.7676273   1.62198697%2C   1.52004291%5D%2C ...%2C %5B-3.50067524  0.05965731  0.03911388 ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%2C %5B-3.42209597  0.05545353 -0.0107677  ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%2C %5B-3.51129661  0.05743199  0.04654993 ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%5D" isContainer="True" shape="(2547158, 11)" />
<var name="X_test" type="ndarray" qualifier="numpy" value="%5B%5B 1.05071915  0.04889693  0.11413728 ...  0.63617885  0.62918419%2C  -1.0372361 %5D%2C %5B-0.27530614  0.06483141  0.04634295 ...  0.68187196 -0.36361858%2C  -0.01432449%5D%2C %5B 1.05175309  0.04263701  0.08134823 ... -0.14495576 -0.36361858%2C   1.00858711%5D%2C ...%2C %5B-1.69631271  0.05545353 -0.0107677  ...  0.93209614 -0.36361858%2C  -0.52578029%5D%2C %5B 0.73480414  0.05847147  0.11548136 ... -1.35908699  0.29824993%2C  -0.01432449%5D%2C %5B-0.26548373  0.05469059  0.00189398 ... -0.02963505 -0.03268432%2C   0.49713131%5D%5D" isContainer="True" shape="(509432, 11)" />
<var name="X_train" type="ndarray" qualifier="numpy" value="%5B%5B-1.70087144  0.05915032  0.06987419 ... -0.46480754  0.96011845%2C  -0.52578029%5D%2C %5B 0.73973884  0.05925821  0.07617097 ... -0.16889025  0.96011845%2C   1.00858711%5D%2C %5B-1.69678268  0.05520917  0.10957407 ...  0.92339269  1.29105271%2C  -1.5486919 %5D%2C ...%2C %5B 0.74420358  0.05981332  0.10904473 ... -1.35908699 -0.69455284%2C   1.52004291%5D%2C %5B 0.74425057  0.07199308  0.1287628  ... -1.35908699 -0.69455284%2C  -1.0372361 %5D%2C %5B-0.27666906  0.05176837  0.06976643 ...  1.27805826 -0.36361858%2C  -1.0372361 %5D%5D" isContainer="True" shape="(2037726, 11)" />
<var name="_" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7f8d53de0100&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_16" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" isIPythonHidden="True" />
<var name="_33" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7f8d53de0100&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_4" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  %5D %5B0                 821         12  %5D %5B1                1439         12  %5D %5B2                1439  ...%5D" isContainer="True" shape="(5, 16)" isIPythonHidden="True" />
<var name="_6" type="Series" qualifier="pandas.core.series" value="%280.25%2C 56.0%29 %280.5%2C 195.0%29 %280.75%2C 488.0%29" isContainer="True" shape="(3,)" isIPythonHidden="True" />
<var name="_7" type="Series" qualifier="pandas.core.series" value="%280.25%2C 56.0%29 %280.5%2C 195.0%29 %280.75%2C 488.0%29 %281.0%2C 1439.0%29" isContainer="True" shape="(4,)" isIPythonHidden="True" />
<var name="_9" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  idle_time_class  %5D %5B0                 821         12                1  %5D %5B1                1439   ...%5D" isContainer="True" shape="(5, 17)" isIPythonHidden="True" />
<var name="__" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" isIPythonHidden="True" />
<var name="___" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  idle_time_class  %5D %5B0                 821         12                1  %5D %5B1                1439   ...%5D" isContainer="True" shape="(5, 17)" isIPythonHidden="True" />
<var name="__builtin__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtins__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__doc__" type="str" qualifier="builtins" value="Automatically created module for IPython interactive environment" isIPythonHidden="True" />
<var name="__loader__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__name__" type="str" qualifier="builtins" value="__main__" isIPythonHidden="True" />
<var name="__package__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__spec__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="_dh" type="list" qualifier="builtins" value="%5B%27/Users/jonweske/devment/BA_nextbike/scripts%27%5D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_i" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_i1" type="str" qualifier="builtins" value="def importdata%28%29%3A%0A    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%0A    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29" isIPythonHidden="True" />
<var name="_i10" type="str" qualifier="builtins" value="TargetVariable=%5B%27idle_time_class%27%5D%0APredictors=%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C%27hex_enc%27%2C%27start_min%27%2C %27month%27%2C %27day%27%2C%5D" isIPythonHidden="True" />
<var name="_i11" type="str" qualifier="builtins" value="X=df%5BPredictors%5D.values%0Ay=df%5BTargetVariable%5D.values%0A%0A%23%23%23 Sandardization of data %23%23%23%0Afrom sklearn.preprocessing import StandardScaler%0APredictorScaler=StandardScaler%28%29%0ATargetVarScaler=StandardScaler%28%29%0A%0A%23 Storing the fit object for later reference%0APredictorScalerFit=PredictorScaler.fit%28X%29%0A%23TargetVarScalerFit=TargetVarScaler.fit%28y%29%0A%0A%23 Generating the standardized values of X and y%0AX=PredictorScalerFit.transform%28X%29%0A%23y=TargetVarScalerFit.transform%28y%29%0A%0A%0A%23 Split the data into training and testing set%0Afrom sklearn.model_selection import train_test_split%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28X%2C y%2C test_size=0.2%2C random_state=42%29%0A%0A%23 Quick sanity check with the shapes of Training and testing datasets%0Aprint%28X_train.shape%29%0Aprint%28y_train.shape%29%0Aprint%28X_test.shape%29%0Aprint%28y_test.shape%29" isIPythonHidden="True" />
<var name="_i12" type="str" qualifier="builtins" value="from sklearn.neural_network import MLPClassifier%0Aimport matplotlib.pyplot as plt%0Afrom sklearn.metrics import ConfusionMatrixDisplay%0A%0Acls = MLPClassifier%28hidden_layer_sizes=%28100%2C50%2C100%29%2C activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=1%2C early_stopping=True%29%0Acls.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Aexpected_y = y_test%0Apredicted_y = cls.predict%28X_test%29%0A%0Aprint%28cls.score%28X_test%2C y_test%29%29%0A%0Afig = ConfusionMatrixDisplay.from_predictions%28predicted_y%2Cexpected_y%2Ccmap=plt.cm.Blues%29%0Afig.figure_.suptitle%28%22Confusion Matrix%22%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i13" type="str" qualifier="builtins" value="def regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29%0A%0Aregression_results%28expected_y%2C predicted_y%29" isIPythonHidden="True" />
<var name="_i14" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29%0A%0Aregression_results%28expected_y%2C predicted_y%29" isIPythonHidden="True" />
<var name="_i15" type="str" qualifier="builtins" value="from sklearn.ensemble import RandomForestClassifier%0A%0Arfc = RandomForestClassifier%28n_estimators=100%29%0A%0Arfc.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Arf_y_pred = rfc.predict%28X_test%29%0A%0Arfc.score%28X_test%2Cy_test%29%0A%0Afig = ConfusionMatrixDisplay.from_predictions%28rf_y_pred%2Cexpected_y%2Ccmap=plt.cm.Blues%29%0Afig.figure_.suptitle%28%22Confusion Matrix RandomForestClassifier%22%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i16" type="str" qualifier="builtins" value="import pandas as pd%0A%0Afeature_imp = pd.Series%28rfc.feature_importances_%2Cindex=Predictors%29.sort_values%28ascending=False%29%0Afeature_imp" isIPythonHidden="True" />
<var name="_i17" type="str" qualifier="builtins" value="import matplotlib.pyplot as plt%0Aimport seaborn as sns%0A%25matplotlib inline%0A%23 Creating a bar plot%0Asns.barplot%28x=feature_imp%2C y=feature_imp.index%29%0A%23 Add labels to your graph%0Aplt.xlabel%28%27Feature Importance Score%27%29%0Aplt.ylabel%28%27Features%27%29%0Aplt.title%28%22Visualizing Important Features%22%29%0Aplt.legend%28%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i18" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i19" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i2" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0A%0A%23 read CSV%0Adf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29" isIPythonHidden="True" />
<var name="_i20" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i21" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i22" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i23" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i24" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0Afrom sklearn.ensemble import RandomForestRegressor%0Afrom sklearn.model_selection import TimeSeriesSplit%0A%0Amodel = MLPClassifier%28activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=0%2C early_stopping=True%29%0Aparam_search = %7B%0A    %27hidden_layer_sizes%27%3A %5B%2810%2C10%29%2C %2810%2C10%2C10%29%2C %2810%2C10%2C10%2C10%29%2C%0A                           %2850%2C50%29%2C %2850%2C50%2C50%29%2C %2850%2C50%2C50%2C50%29%2C%0A                           %28100%2C100%29%2C %28100%2C100%2C100%29%2C %28100%2C100%2C100%2C100%29%5D%7D%0Atscv = TimeSeriesSplit%28n_splits=10%29%0Agsearch = GridSearchCV%28estimator=model%2C cv=tscv%2C param_grid=param_search%2C scoring = rmse_score%29%0Agsearch.fit%28X_train%2C y_train.ravel%28%29%29%0Abest_score = gsearch.best_score_%0Abest_model = gsearch.best_estimator_" isIPythonHidden="True" />
<var name="_i25" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i26" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i27" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0Afrom sklearn.ensemble import RandomForestRegressor%0Afrom sklearn.model_selection import TimeSeriesSplit%0A%0Amodel = MLPClassifier%28activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=1%2C early_stopping=True%29%0Aparam_search = %7B%0A    %27hidden_layer_sizes%27%3A %5B%2810%2C10%29%2C %2810%2C10%2C10%29%2C %2810%2C10%2C10%2C10%29%2C%0A                           %2850%2C50%29%2C %2850%2C50%2C50%29%2C %2850%2C50%2C50%2C50%29%2C%0A                           %28100%2C100%29%2C %28100%2C100%2C100%29%2C %28100%2C100%2C100%2C100%29%5D%7D%0Atscv = TimeSeriesSplit%28n_splits=10%29%0Agsearch = GridSearchCV%28estimator=model%2C cv=tscv%2C param_grid=param_search%2C scoring = rmse_score%29%0Agsearch.fit%28X_train%2C y_train.ravel%28%29%29%0Abest_score = gsearch.best_score_%0Abest_model = gsearch.best_estimator_" isIPythonHidden="True" />
<var name="_i28" type="str" qualifier="builtins" value="y_true = y_test%0Ay_pred = best_model.predict%28X_test%29%0A%0Aregression_results%28y_true%2C y_pred%29" isIPythonHidden="True" />
<var name="_i29" type="str" qualifier="builtins" value="imp = best_model.feature_importances_%0AX_train = pd.DataFrame%28X_train%2Ccolumns=Predictors%29%0Afeatures = X_train.columns%0Aindices = np.argsort%28imp%29%0Aplt.title%28%27Feature Importances%27%29%0Aplt.barh%28range%28len%28indices%29%29%2C imp%5Bindices%5D%2C color=%27b%27%2C align=%27center%27%29%0Aplt.yticks%28range%28len%28indices%29%29%2C %5Bfeatures%5Bi%5D for i in indices%5D%29%0Aplt.xlabel%28%27Relative Importance%27%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i3" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0A%0A%23 read CSV%0Adf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29" isIPythonHidden="True" />
<var name="_i30" type="str" qualifier="builtins" value="best_model.get%28%29" isIPythonHidden="True" />
<var name="_i31" type="str" qualifier="builtins" value="best_model.__getattribute__%28%29" isIPythonHidden="True" />
<var name="_i32" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_i33" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22visualize-sklearn%22%29" isIPythonHidden="True" />
<var name="_i34" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i35" type="str" qualifier="builtins" value="y_true_mlp = y_test%0Ay_pred_mlp = best_model.predict%28X_test%29%0A%0Aregression_results%28y_true_mlp%2C y_pred_mlp%29" isIPythonHidden="True" />
<var name="_i36" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_i37" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i4" type="str" qualifier="builtins" value="%23 event del Index Column%0Adf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%0Adf.head%28%29" isIPythonHidden="True" />
<var name="_i5" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29" isIPythonHidden="True" />
<var name="_i6" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%0Adf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29" isIPythonHidden="True" />
<var name="_i7" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%0Adf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29" isIPythonHidden="True" />
<var name="_i8" type="str" qualifier="builtins" value="%23add classification target%0Adef f%28row%29%3A%0A    if row%5B%27idle_time%27%5D %3C 56%3A%0A        val = 1%0A    elif row%5B%27idle_time%27%5D %3C 195%3A%0A        val = 2%0A    elif row%5B%27idle_time%27%5D %3C 488%3A%0A        val = 3%0A    else%3A%0A        val = 4%0A    return val%0A%0Adf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29" isIPythonHidden="True" />
<var name="_i9" type="str" qualifier="builtins" value="df.head%28%29" isIPythonHidden="True" />
<var name="_ih" type="list" qualifier="builtins" value="%5B%27%27%2C %22def importdata%28%29%3A%5Cn    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%5Cn    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %22%23 event del Index Column%5Cndf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%5Cndf.head%28%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29%22%2C %22%23add classification target%5Cndef f%28row%29%3A%5Cn    if row%5B%27idle_time%27%5D %3C 56%3A%5Cn        val = 1%5Cn    elif row%5B%27idle_time%27%5D %3C 195%3A%5Cn        val = 2%5Cn    elif row%5B%27idle_time%27%5D %3C 488%3A%5Cn        val = 3%5Cn    else%3A%5Cn        val = 4%5Cn    return val%5Cn%5Cndf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29%22%2C %27df..." isContainer="True" shape="38" isIPythonHidden="True" />
<var name="_ii" type="str" qualifier="builtins" value="y_true_mlp = y_test%0Ay_pred_mlp = best_model.predict%28X_test%29%0A%0Aregression_results%28y_true_mlp%2C y_pred_mlp%29" isIPythonHidden="True" />
<var name="_iii" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_oh" type="dict" qualifier="builtins" value="%7B4%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %0A2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %0A3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %0A4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80   0.0   0.0     12    6       1427           1   %0A1      195  10.80   0.0   0.0     12    6       1427           1   %0A2       81  10.80   0.0   0.0     12    6       1437           1   %0A3       81  10.86   0.0   0.0      1    0          0           1   %0A4      195  10.86   0.0   0.0      1    0          0           0   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                1439         12  %0A2                14..." isContainer="True" shape="6" isIPythonHidden="True" />
<var name="_pydevd_bundle" type="module" qualifier="builtins" value="%3Cmodule %27_pydevd_bundle%27 from %27/Applications/PyCharm.app/Contents/plugins/python/helpers/pydev/_pydevd_bundle/__init__.py%27&gt;" isContainer="True" />
<var name="best_model" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C hidden_layer_sizes=%2850%2C 50%2C 50%2C 50%29%2C%0A              max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="best_score" type="float64" qualifier="numpy" value="-1.0336816581459078" shape="()" />
<var name="boxplot" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.775x0.755%29" isContainer="True" />
<var name="cls" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C hidden_layer_sizes=%28100%2C 50%2C 100%29%2C%0A              max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="df" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end  %5C %5B0           3694  51.323619  12.335887  1514764029  1514764799   %5D %5B1           2508  51.323619  12.335887  1514764035  1514764799   %5D %5B2          41851  51.332415  12.395158  1514764638  1514764799   %5D %5B3          41851  51.332415  12.395158  1514764800  1514851199   %5D %5B4           3694  51.323619  12.335887  1514764800  1514814103   %5D %5B...          ...        ...        ...         ...         ...   %5D %5B2547153    72243  51.367222  12.369617  1640897552  1640903562   %5D %5B2547154    72058  51.317569  12.382730  1640897593  1640904368   %5D %5B2547155    71949  51.334711  12.356763  1640897835  1640899343   %5D %5B2547156    97785  51.367276  12.369792  1640898086  1640900985   %5D %5B2547157    41738  51.366942  12.370322  1640900918  1640903516   %5D %5B%5D %5B                  hex_id  hex_enc   temp  rain  snow  month  day  start_min  %5C%5D %5B0        881f1a8d91fffff      195  10.80  0.00   0.0     12    6       1427   %5D %5B1        881f1a8d91fffff      195  10.80  0.00   ...%5D" isContainer="True" shape="(2547158, 17)" />
<var name="exit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7f93a6e96910&gt;" isContainer="True" isIPythonHidden="True" />
<var name="expected_y" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="f" type="function" qualifier="builtins" value="%3Cfunction f at 0x7f9345087f70&gt;" isContainer="True" />
<var name="feature_imp" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" />
<var name="fig" type="ConfusionMatrixDisplay" qualifier="sklearn.metrics._plot.confusion_matrix" value="%3Csklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay object at 0x7f9344523eb0&gt;" isContainer="True" />
<var name="get_ipython" type="method" qualifier="builtins" value="%3Cbound method InteractiveShell.get_ipython of %3Cipykernel.zmqshell.ZMQInteractiveShell object at 0x7f93a6e7d610&gt;&gt;" isContainer="True" isIPythonHidden="True" />
<var name="gsearch" type="GridSearchCV" qualifier="sklearn.model_selection._search" value="GridSearchCV%28cv=TimeSeriesSplit%28gap=0%2C max_train_size=None%2C n_splits=10%2C test_size=None%29%2C%0A             estimator=MLPClassifier%28early_stopping=True%2C max_iter=1000%2C%0A                                     verbose=1%29%2C%0A             param_grid=%7B%27hidden_layer_sizes%27%3A %5B%2810%2C 10%29%2C %2810%2C 10%2C 10%29%2C%0A                                                %2810%2C 10%2C 10%2C 10%29%2C %2850%2C 50%29%2C%0A                                                %2850%2C 50%2C 50%29%2C %2850%2C 50%2C 50%2C 50%29%2C%0A                                                %28100%2C 100%29%2C %28100%2C 100%2C 100%29%2C%0A                                                %28100%2C 100%2C 100%2C 100%29%5D%7D%2C%0A             scoring=make_scorer%28rmse%2C greater_is_better=False%29%29" isContainer="True" />
<var name="importdata" type="function" qualifier="builtins" value="%3Cfunction importdata at 0x7f93a6eef5e0&gt;" isContainer="True" />
<var name="make_scorer" type="function" qualifier="builtins" value="%3Cfunction make_scorer at 0x7f9345aead30&gt;" isContainer="True" />
<var name="metrics" type="module" qualifier="builtins" value="%3Cmodule %27sklearn.metrics%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/sklearn/metrics/__init__.py%27&gt;" isContainer="True" />
<var name="model" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="np" type="module" qualifier="builtins" value="%3Cmodule %27numpy%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/numpy/__init__.py%27&gt;" isContainer="True" />
<var name="param_search" type="dict" qualifier="builtins" value="%7B%27hidden_layer_sizes%27%3A %5B%2810%2C 10%29%2C %2810%2C 10%2C 10%29%2C %2810%2C 10%2C 10%2C 10%29%2C %2850%2C 50%29%2C %2850%2C 50%2C 50%29%2C %2850%2C 50%2C 50%2C 50%29%2C %28100%2C 100%29%2C %28100%2C 100%2C 100%29%2C %28100%2C 100%2C 100%2C 100%29%5D%7D" isContainer="True" shape="1" />
<var name="pd" type="module" qualifier="builtins" value="%3Cmodule %27pandas%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/pandas/__init__.py%27&gt;" isContainer="True" />
<var name="plt" type="module" qualifier="builtins" value="%3Cmodule %27matplotlib.pyplot%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/matplotlib/pyplot.py%27&gt;" isContainer="True" />
<var name="predicted_y" type="ndarray" qualifier="numpy" value="%5B1 2 2 2 4 3 1 3 3 4 1 2 2 4 1 2 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 2 1 1 4 4%2C 1 2 1 4 4 1 3 1 1 1 1 2 2 3 4 1 4 1 1 1 1 3 4 4 3 2 1 3 3 3 1 4 4 3 4 1 2%2C 1 2 3 3 4 3 3 1 3 1 3 4 2 4 3 4 2 2 4 2 3 2 1 3 3 2%5D" isContainer="True" shape="(509432,)" />
<var name="print_columns" type="function" qualifier="builtins" value="%3Cfunction print_columns at 0x7f8d54ae4700&gt;" isContainer="True" />
<var name="pydev_jupyter_vars" type="module" qualifier="builtins" value="%3Cmodule %27pydev_jupyter_vars%27 from %27/Applications/PyCharm.app/Contents/plugins/python/helpers-pro/jupyter_debug/pydev_jupyter_vars.py%27&gt;" isContainer="True" />
<var name="quit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7f93a6e96910&gt;" isContainer="True" isIPythonHidden="True" />
<var name="regression_results" type="function" qualifier="builtins" value="%3Cfunction regression_results at 0x7f9343f18ee0&gt;" isContainer="True" />
<var name="remove_imported_pydev_package" type="function" qualifier="builtins" value="%3Cfunction remove_imported_pydev_package at 0x7f93a6eef280&gt;" isContainer="True" />
<var name="rf_y_pred" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 4 4 1 2 2 4 3 1 4 1 1 3 4 3 4 1 2 4 2 1 3 3 4 1 3 1 1 4 4%2C 1 1 2 4 4 1 3 1 2 1 1 4 3 3 4 1 4 2 1 1 2 1 4 4 3 1 1 3 3 4 1 1 4 3 4 1 3%2C 1 1 3 3 4 3 3 1 2 2 3 4 1 3 2 2 2 2 4 2 3 2 3 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="rfc" type="RandomForestClassifier" qualifier="sklearn.ensemble._forest" value="RandomForestClassifier%28%29" isContainer="True" shape="100" />
<var name="rmse" type="function" qualifier="builtins" value="%3Cfunction rmse at 0x7f9343f18ca0&gt;" isContainer="True" />
<var name="rmse_score" type="_PredictScorer" qualifier="sklearn.metrics._scorer" value="make_scorer%28rmse%2C greater_is_better=False%29" isContainer="True" />
<var name="sns" type="module" qualifier="builtins" value="%3Cmodule %27seaborn%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/seaborn/__init__.py%27&gt;" isContainer="True" />
<var name="sys" type="module" qualifier="builtins" value="%3Cmodule %27sys%27 %28built-in%29&gt;" isContainer="True" />
<var name="train_test_split" type="function" qualifier="builtins" value="%3Cfunction train_test_split at 0x7f9344c24820&gt;" isContainer="True" />
<var name="tscv" type="TimeSeriesSplit" qualifier="sklearn.model_selection._split" value="TimeSeriesSplit%28gap=0%2C max_train_size=None%2C n_splits=10%2C test_size=None%29" isContainer="True" />
<var name="wandb" type="module" qualifier="builtins" value="%3Cmodule %27wandb%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/wandb/__init__.py%27&gt;" isContainer="True" />
<var name="y" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(2547158, 1)" />
<var name="y_pred" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 3 4 1 2 2 4 1 1 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 3 1 1 3 4%2C 1 1 1 4 4 1 3 1 1 2 1 4 2 3 3 1 4 1 1 1 1 1 4 4 3 2 1 2 3 4 1 4 4 3 4 1 2%2C 2 3 3 3 4 3 3 1 2 1 3 4 2 4 1 4 2 2 4 2 3 2 2 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="y_pred_mlp" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 3 4 1 2 2 4 1 1 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 3 1 1 3 4%2C 1 1 1 4 4 1 3 1 1 2 1 4 2 3 3 1 4 1 1 1 1 1 4 4 3 2 1 2 3 4 1 4 4 3 4 1 2%2C 2 3 3 3 4 3 3 1 2 1 3 4 2 4 1 4 2 2 4 2 3 2 2 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="y_test" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="y_train" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(2037726, 1)" />
<var name="y_true" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="y_true_mlp" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
</xml>
<xml><var name="ConfusionMatrixDisplay" type="type" qualifier="builtins" value="%3Cclass %27sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay%27&gt;" isContainer="True" />
<var name="DataFrame" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.frame.DataFrame%27&gt;" isContainer="True" />
<var name="GridSearchCV" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._search.GridSearchCV%27&gt;" isContainer="True" />
<var name="In" type="list" qualifier="builtins" value="%5B%27%27%2C %22def importdata%28%29%3A%5Cn    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%5Cn    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %22%23 event del Index Column%5Cndf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%5Cndf.head%28%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29%22%2C %22%23add classification target%5Cndef f%28row%29%3A%5Cn    if row%5B%27idle_time%27%5D %3C 56%3A%5Cn        val = 1%5Cn    elif row%5B%27idle_time%27%5D %3C 195%3A%5Cn        val = 2%5Cn    elif row%5B%27idle_time%27%5D %3C 488%3A%5Cn        val = 3%5Cn    else%3A%5Cn        val = 4%5Cn    return val%5Cn%5Cndf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29%22%2C %27df..." isContainer="True" shape="39" isIPythonHidden="True" />
<var name="MLPClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.neural_network._multilayer_perceptron.MLPClassifier%27&gt;" isContainer="True" />
<var name="MultiIndex" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.indexes.multi.MultiIndex%27&gt;" isContainer="True" />
<var name="Out" type="dict" qualifier="builtins" value="%7B4%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %0A2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %0A3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %0A4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80   0.0   0.0     12    6       1427           1   %0A1      195  10.80   0.0   0.0     12    6       1427           1   %0A2       81  10.80   0.0   0.0     12    6       1437           1   %0A3       81  10.86   0.0   0.0      1    0          0           1   %0A4      195  10.86   0.0   0.0      1    0          0           0   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                1439         12  %0A2                14..." isContainer="True" shape="6" isIPythonHidden="True" />
<var name="PredictorScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="PredictorScalerFit" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="Predictors" type="list" qualifier="builtins" value="%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C %27hex_enc%27%2C %27start_min%27%2C %27month%27%2C %27day%27%5D" isContainer="True" shape="11" />
<var name="RandomForestClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._forest.RandomForestClassifier%27&gt;" isContainer="True" />
<var name="RandomForestRegressor" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._forest.RandomForestRegressor%27&gt;" isContainer="True" />
<var name="StandardScaler" type="type" qualifier="builtins" value="%3Cclass %27sklearn.preprocessing._data.StandardScaler%27&gt;" isContainer="True" />
<var name="TargetVarScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="TargetVariable" type="list" qualifier="builtins" value="%5B%27idle_time_class%27%5D" isContainer="True" shape="1" />
<var name="TimeSeriesSplit" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._split.TimeSeriesSplit%27&gt;" isContainer="True" />
<var name="X" type="ndarray" qualifier="numpy" value="%5B%5B-3.48291031  0.05221204  0.00831509 ...  1.74586868  1.62198697%2C   1.52004291%5D%2C %5B-3.53864896  0.05221204  0.00831509 ...  1.74586868  1.62198697%2C   1.52004291%5D%2C %5B-1.68963911  0.05525741  0.0933678  ...  1.7676273   1.62198697%2C   1.52004291%5D%2C ...%2C %5B-3.50067524  0.05965731  0.03911388 ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%2C %5B-3.42209597  0.05545353 -0.0107677  ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%2C %5B-3.51129661  0.05743199  0.04654993 ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%5D" isContainer="True" shape="(2547158, 11)" />
<var name="X_test" type="ndarray" qualifier="numpy" value="%5B%5B 1.05071915  0.04889693  0.11413728 ...  0.63617885  0.62918419%2C  -1.0372361 %5D%2C %5B-0.27530614  0.06483141  0.04634295 ...  0.68187196 -0.36361858%2C  -0.01432449%5D%2C %5B 1.05175309  0.04263701  0.08134823 ... -0.14495576 -0.36361858%2C   1.00858711%5D%2C ...%2C %5B-1.69631271  0.05545353 -0.0107677  ...  0.93209614 -0.36361858%2C  -0.52578029%5D%2C %5B 0.73480414  0.05847147  0.11548136 ... -1.35908699  0.29824993%2C  -0.01432449%5D%2C %5B-0.26548373  0.05469059  0.00189398 ... -0.02963505 -0.03268432%2C   0.49713131%5D%5D" isContainer="True" shape="(509432, 11)" />
<var name="X_train" type="ndarray" qualifier="numpy" value="%5B%5B-1.70087144  0.05915032  0.06987419 ... -0.46480754  0.96011845%2C  -0.52578029%5D%2C %5B 0.73973884  0.05925821  0.07617097 ... -0.16889025  0.96011845%2C   1.00858711%5D%2C %5B-1.69678268  0.05520917  0.10957407 ...  0.92339269  1.29105271%2C  -1.5486919 %5D%2C ...%2C %5B 0.74420358  0.05981332  0.10904473 ... -1.35908699 -0.69455284%2C   1.52004291%5D%2C %5B 0.74425057  0.07199308  0.1287628  ... -1.35908699 -0.69455284%2C  -1.0372361 %5D%2C %5B-0.27666906  0.05176837  0.06976643 ...  1.27805826 -0.36361858%2C  -1.0372361 %5D%5D" isContainer="True" shape="(2037726, 11)" />
<var name="_" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7f8d53de0100&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_16" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" isIPythonHidden="True" />
<var name="_33" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7f8d53de0100&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_4" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  %5D %5B0                 821         12  %5D %5B1                1439         12  %5D %5B2                1439  ...%5D" isContainer="True" shape="(5, 16)" isIPythonHidden="True" />
<var name="_6" type="Series" qualifier="pandas.core.series" value="%280.25%2C 56.0%29 %280.5%2C 195.0%29 %280.75%2C 488.0%29" isContainer="True" shape="(3,)" isIPythonHidden="True" />
<var name="_7" type="Series" qualifier="pandas.core.series" value="%280.25%2C 56.0%29 %280.5%2C 195.0%29 %280.75%2C 488.0%29 %281.0%2C 1439.0%29" isContainer="True" shape="(4,)" isIPythonHidden="True" />
<var name="_9" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  idle_time_class  %5D %5B0                 821         12                1  %5D %5B1                1439   ...%5D" isContainer="True" shape="(5, 17)" isIPythonHidden="True" />
<var name="__" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" isIPythonHidden="True" />
<var name="___" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  idle_time_class  %5D %5B0                 821         12                1  %5D %5B1                1439   ...%5D" isContainer="True" shape="(5, 17)" isIPythonHidden="True" />
<var name="__builtin__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtins__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__doc__" type="str" qualifier="builtins" value="Automatically created module for IPython interactive environment" isIPythonHidden="True" />
<var name="__loader__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__name__" type="str" qualifier="builtins" value="__main__" isIPythonHidden="True" />
<var name="__package__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__spec__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="_dh" type="list" qualifier="builtins" value="%5B%27/Users/jonweske/devment/BA_nextbike/scripts%27%5D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_i" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i1" type="str" qualifier="builtins" value="def importdata%28%29%3A%0A    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%0A    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29" isIPythonHidden="True" />
<var name="_i10" type="str" qualifier="builtins" value="TargetVariable=%5B%27idle_time_class%27%5D%0APredictors=%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C%27hex_enc%27%2C%27start_min%27%2C %27month%27%2C %27day%27%2C%5D" isIPythonHidden="True" />
<var name="_i11" type="str" qualifier="builtins" value="X=df%5BPredictors%5D.values%0Ay=df%5BTargetVariable%5D.values%0A%0A%23%23%23 Sandardization of data %23%23%23%0Afrom sklearn.preprocessing import StandardScaler%0APredictorScaler=StandardScaler%28%29%0ATargetVarScaler=StandardScaler%28%29%0A%0A%23 Storing the fit object for later reference%0APredictorScalerFit=PredictorScaler.fit%28X%29%0A%23TargetVarScalerFit=TargetVarScaler.fit%28y%29%0A%0A%23 Generating the standardized values of X and y%0AX=PredictorScalerFit.transform%28X%29%0A%23y=TargetVarScalerFit.transform%28y%29%0A%0A%0A%23 Split the data into training and testing set%0Afrom sklearn.model_selection import train_test_split%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28X%2C y%2C test_size=0.2%2C random_state=42%29%0A%0A%23 Quick sanity check with the shapes of Training and testing datasets%0Aprint%28X_train.shape%29%0Aprint%28y_train.shape%29%0Aprint%28X_test.shape%29%0Aprint%28y_test.shape%29" isIPythonHidden="True" />
<var name="_i12" type="str" qualifier="builtins" value="from sklearn.neural_network import MLPClassifier%0Aimport matplotlib.pyplot as plt%0Afrom sklearn.metrics import ConfusionMatrixDisplay%0A%0Acls = MLPClassifier%28hidden_layer_sizes=%28100%2C50%2C100%29%2C activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=1%2C early_stopping=True%29%0Acls.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Aexpected_y = y_test%0Apredicted_y = cls.predict%28X_test%29%0A%0Aprint%28cls.score%28X_test%2C y_test%29%29%0A%0Afig = ConfusionMatrixDisplay.from_predictions%28predicted_y%2Cexpected_y%2Ccmap=plt.cm.Blues%29%0Afig.figure_.suptitle%28%22Confusion Matrix%22%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i13" type="str" qualifier="builtins" value="def regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29%0A%0Aregression_results%28expected_y%2C predicted_y%29" isIPythonHidden="True" />
<var name="_i14" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29%0A%0Aregression_results%28expected_y%2C predicted_y%29" isIPythonHidden="True" />
<var name="_i15" type="str" qualifier="builtins" value="from sklearn.ensemble import RandomForestClassifier%0A%0Arfc = RandomForestClassifier%28n_estimators=100%29%0A%0Arfc.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Arf_y_pred = rfc.predict%28X_test%29%0A%0Arfc.score%28X_test%2Cy_test%29%0A%0Afig = ConfusionMatrixDisplay.from_predictions%28rf_y_pred%2Cexpected_y%2Ccmap=plt.cm.Blues%29%0Afig.figure_.suptitle%28%22Confusion Matrix RandomForestClassifier%22%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i16" type="str" qualifier="builtins" value="import pandas as pd%0A%0Afeature_imp = pd.Series%28rfc.feature_importances_%2Cindex=Predictors%29.sort_values%28ascending=False%29%0Afeature_imp" isIPythonHidden="True" />
<var name="_i17" type="str" qualifier="builtins" value="import matplotlib.pyplot as plt%0Aimport seaborn as sns%0A%25matplotlib inline%0A%23 Creating a bar plot%0Asns.barplot%28x=feature_imp%2C y=feature_imp.index%29%0A%23 Add labels to your graph%0Aplt.xlabel%28%27Feature Importance Score%27%29%0Aplt.ylabel%28%27Features%27%29%0Aplt.title%28%22Visualizing Important Features%22%29%0Aplt.legend%28%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i18" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i19" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i2" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0A%0A%23 read CSV%0Adf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29" isIPythonHidden="True" />
<var name="_i20" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i21" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i22" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i23" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i24" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0Afrom sklearn.ensemble import RandomForestRegressor%0Afrom sklearn.model_selection import TimeSeriesSplit%0A%0Amodel = MLPClassifier%28activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=0%2C early_stopping=True%29%0Aparam_search = %7B%0A    %27hidden_layer_sizes%27%3A %5B%2810%2C10%29%2C %2810%2C10%2C10%29%2C %2810%2C10%2C10%2C10%29%2C%0A                           %2850%2C50%29%2C %2850%2C50%2C50%29%2C %2850%2C50%2C50%2C50%29%2C%0A                           %28100%2C100%29%2C %28100%2C100%2C100%29%2C %28100%2C100%2C100%2C100%29%5D%7D%0Atscv = TimeSeriesSplit%28n_splits=10%29%0Agsearch = GridSearchCV%28estimator=model%2C cv=tscv%2C param_grid=param_search%2C scoring = rmse_score%29%0Agsearch.fit%28X_train%2C y_train.ravel%28%29%29%0Abest_score = gsearch.best_score_%0Abest_model = gsearch.best_estimator_" isIPythonHidden="True" />
<var name="_i25" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i26" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i27" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0Afrom sklearn.ensemble import RandomForestRegressor%0Afrom sklearn.model_selection import TimeSeriesSplit%0A%0Amodel = MLPClassifier%28activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=1%2C early_stopping=True%29%0Aparam_search = %7B%0A    %27hidden_layer_sizes%27%3A %5B%2810%2C10%29%2C %2810%2C10%2C10%29%2C %2810%2C10%2C10%2C10%29%2C%0A                           %2850%2C50%29%2C %2850%2C50%2C50%29%2C %2850%2C50%2C50%2C50%29%2C%0A                           %28100%2C100%29%2C %28100%2C100%2C100%29%2C %28100%2C100%2C100%2C100%29%5D%7D%0Atscv = TimeSeriesSplit%28n_splits=10%29%0Agsearch = GridSearchCV%28estimator=model%2C cv=tscv%2C param_grid=param_search%2C scoring = rmse_score%29%0Agsearch.fit%28X_train%2C y_train.ravel%28%29%29%0Abest_score = gsearch.best_score_%0Abest_model = gsearch.best_estimator_" isIPythonHidden="True" />
<var name="_i28" type="str" qualifier="builtins" value="y_true = y_test%0Ay_pred = best_model.predict%28X_test%29%0A%0Aregression_results%28y_true%2C y_pred%29" isIPythonHidden="True" />
<var name="_i29" type="str" qualifier="builtins" value="imp = best_model.feature_importances_%0AX_train = pd.DataFrame%28X_train%2Ccolumns=Predictors%29%0Afeatures = X_train.columns%0Aindices = np.argsort%28imp%29%0Aplt.title%28%27Feature Importances%27%29%0Aplt.barh%28range%28len%28indices%29%29%2C imp%5Bindices%5D%2C color=%27b%27%2C align=%27center%27%29%0Aplt.yticks%28range%28len%28indices%29%29%2C %5Bfeatures%5Bi%5D for i in indices%5D%29%0Aplt.xlabel%28%27Relative Importance%27%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i3" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0A%0A%23 read CSV%0Adf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29" isIPythonHidden="True" />
<var name="_i30" type="str" qualifier="builtins" value="best_model.get%28%29" isIPythonHidden="True" />
<var name="_i31" type="str" qualifier="builtins" value="best_model.__getattribute__%28%29" isIPythonHidden="True" />
<var name="_i32" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_i33" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22visualize-sklearn%22%29" isIPythonHidden="True" />
<var name="_i34" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i35" type="str" qualifier="builtins" value="y_true_mlp = y_test%0Ay_pred_mlp = best_model.predict%28X_test%29%0A%0Aregression_results%28y_true_mlp%2C y_pred_mlp%29" isIPythonHidden="True" />
<var name="_i36" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_i37" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i38" type="str" qualifier="builtins" value="%23 Visualize all classifier plots%0Awandb.sklearn.plot_classifier%28best_model%2C X_train%2C X_test%2C y_train%2C y_test%2C y_pred_mlp%2C Predictors%2Cmodel_name=%27SVC%27%2C feature_names=None%29" isIPythonHidden="True" />
<var name="_i4" type="str" qualifier="builtins" value="%23 event del Index Column%0Adf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%0Adf.head%28%29" isIPythonHidden="True" />
<var name="_i5" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29" isIPythonHidden="True" />
<var name="_i6" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%0Adf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29" isIPythonHidden="True" />
<var name="_i7" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%0Adf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29" isIPythonHidden="True" />
<var name="_i8" type="str" qualifier="builtins" value="%23add classification target%0Adef f%28row%29%3A%0A    if row%5B%27idle_time%27%5D %3C 56%3A%0A        val = 1%0A    elif row%5B%27idle_time%27%5D %3C 195%3A%0A        val = 2%0A    elif row%5B%27idle_time%27%5D %3C 488%3A%0A        val = 3%0A    else%3A%0A        val = 4%0A    return val%0A%0Adf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29" isIPythonHidden="True" />
<var name="_i9" type="str" qualifier="builtins" value="df.head%28%29" isIPythonHidden="True" />
<var name="_ih" type="list" qualifier="builtins" value="%5B%27%27%2C %22def importdata%28%29%3A%5Cn    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%5Cn    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %22%23 event del Index Column%5Cndf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%5Cndf.head%28%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29%22%2C %22%23add classification target%5Cndef f%28row%29%3A%5Cn    if row%5B%27idle_time%27%5D %3C 56%3A%5Cn        val = 1%5Cn    elif row%5B%27idle_time%27%5D %3C 195%3A%5Cn        val = 2%5Cn    elif row%5B%27idle_time%27%5D %3C 488%3A%5Cn        val = 3%5Cn    else%3A%5Cn        val = 4%5Cn    return val%5Cn%5Cndf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29%22%2C %27df..." isContainer="True" shape="39" isIPythonHidden="True" />
<var name="_ii" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_iii" type="str" qualifier="builtins" value="y_true_mlp = y_test%0Ay_pred_mlp = best_model.predict%28X_test%29%0A%0Aregression_results%28y_true_mlp%2C y_pred_mlp%29" isIPythonHidden="True" />
<var name="_oh" type="dict" qualifier="builtins" value="%7B4%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %0A2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %0A3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %0A4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80   0.0   0.0     12    6       1427           1   %0A1      195  10.80   0.0   0.0     12    6       1427           1   %0A2       81  10.80   0.0   0.0     12    6       1437           1   %0A3       81  10.86   0.0   0.0      1    0          0           1   %0A4      195  10.86   0.0   0.0      1    0          0           0   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                1439         12  %0A2                14..." isContainer="True" shape="6" isIPythonHidden="True" />
<var name="_pydevd_bundle" type="module" qualifier="builtins" value="%3Cmodule %27_pydevd_bundle%27 from %27/Applications/PyCharm.app/Contents/plugins/python/helpers/pydev/_pydevd_bundle/__init__.py%27&gt;" isContainer="True" />
<var name="best_model" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C hidden_layer_sizes=%2850%2C 50%2C 50%2C 50%29%2C%0A              max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="best_score" type="float64" qualifier="numpy" value="-1.0336816581459078" shape="()" />
<var name="boxplot" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.775x0.755%29" isContainer="True" />
<var name="cls" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C hidden_layer_sizes=%28100%2C 50%2C 100%29%2C%0A              max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="df" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end  %5C %5B0           3694  51.323619  12.335887  1514764029  1514764799   %5D %5B1           2508  51.323619  12.335887  1514764035  1514764799   %5D %5B2          41851  51.332415  12.395158  1514764638  1514764799   %5D %5B3          41851  51.332415  12.395158  1514764800  1514851199   %5D %5B4           3694  51.323619  12.335887  1514764800  1514814103   %5D %5B...          ...        ...        ...         ...         ...   %5D %5B2547153    72243  51.367222  12.369617  1640897552  1640903562   %5D %5B2547154    72058  51.317569  12.382730  1640897593  1640904368   %5D %5B2547155    71949  51.334711  12.356763  1640897835  1640899343   %5D %5B2547156    97785  51.367276  12.369792  1640898086  1640900985   %5D %5B2547157    41738  51.366942  12.370322  1640900918  1640903516   %5D %5B%5D %5B                  hex_id  hex_enc   temp  rain  snow  month  day  start_min  %5C%5D %5B0        881f1a8d91fffff      195  10.80  0.00   0.0     12    6       1427   %5D %5B1        881f1a8d91fffff      195  10.80  0.00   ...%5D" isContainer="True" shape="(2547158, 17)" />
<var name="exit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7f93a6e96910&gt;" isContainer="True" isIPythonHidden="True" />
<var name="expected_y" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="f" type="function" qualifier="builtins" value="%3Cfunction f at 0x7f9345087f70&gt;" isContainer="True" />
<var name="feature_imp" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" />
<var name="fig" type="ConfusionMatrixDisplay" qualifier="sklearn.metrics._plot.confusion_matrix" value="%3Csklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay object at 0x7f9344523eb0&gt;" isContainer="True" />
<var name="get_ipython" type="method" qualifier="builtins" value="%3Cbound method InteractiveShell.get_ipython of %3Cipykernel.zmqshell.ZMQInteractiveShell object at 0x7f93a6e7d610&gt;&gt;" isContainer="True" isIPythonHidden="True" />
<var name="gsearch" type="GridSearchCV" qualifier="sklearn.model_selection._search" value="GridSearchCV%28cv=TimeSeriesSplit%28gap=0%2C max_train_size=None%2C n_splits=10%2C test_size=None%29%2C%0A             estimator=MLPClassifier%28early_stopping=True%2C max_iter=1000%2C%0A                                     verbose=1%29%2C%0A             param_grid=%7B%27hidden_layer_sizes%27%3A %5B%2810%2C 10%29%2C %2810%2C 10%2C 10%29%2C%0A                                                %2810%2C 10%2C 10%2C 10%29%2C %2850%2C 50%29%2C%0A                                                %2850%2C 50%2C 50%29%2C %2850%2C 50%2C 50%2C 50%29%2C%0A                                                %28100%2C 100%29%2C %28100%2C 100%2C 100%29%2C%0A                                                %28100%2C 100%2C 100%2C 100%29%5D%7D%2C%0A             scoring=make_scorer%28rmse%2C greater_is_better=False%29%29" isContainer="True" />
<var name="importdata" type="function" qualifier="builtins" value="%3Cfunction importdata at 0x7f93a6eef5e0&gt;" isContainer="True" />
<var name="make_scorer" type="function" qualifier="builtins" value="%3Cfunction make_scorer at 0x7f9345aead30&gt;" isContainer="True" />
<var name="metrics" type="module" qualifier="builtins" value="%3Cmodule %27sklearn.metrics%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/sklearn/metrics/__init__.py%27&gt;" isContainer="True" />
<var name="model" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="np" type="module" qualifier="builtins" value="%3Cmodule %27numpy%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/numpy/__init__.py%27&gt;" isContainer="True" />
<var name="param_search" type="dict" qualifier="builtins" value="%7B%27hidden_layer_sizes%27%3A %5B%2810%2C 10%29%2C %2810%2C 10%2C 10%29%2C %2810%2C 10%2C 10%2C 10%29%2C %2850%2C 50%29%2C %2850%2C 50%2C 50%29%2C %2850%2C 50%2C 50%2C 50%29%2C %28100%2C 100%29%2C %28100%2C 100%2C 100%29%2C %28100%2C 100%2C 100%2C 100%29%5D%7D" isContainer="True" shape="1" />
<var name="pd" type="module" qualifier="builtins" value="%3Cmodule %27pandas%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/pandas/__init__.py%27&gt;" isContainer="True" />
<var name="plt" type="module" qualifier="builtins" value="%3Cmodule %27matplotlib.pyplot%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/matplotlib/pyplot.py%27&gt;" isContainer="True" />
<var name="predicted_y" type="ndarray" qualifier="numpy" value="%5B1 2 2 2 4 3 1 3 3 4 1 2 2 4 1 2 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 2 1 1 4 4%2C 1 2 1 4 4 1 3 1 1 1 1 2 2 3 4 1 4 1 1 1 1 3 4 4 3 2 1 3 3 3 1 4 4 3 4 1 2%2C 1 2 3 3 4 3 3 1 3 1 3 4 2 4 3 4 2 2 4 2 3 2 1 3 3 2%5D" isContainer="True" shape="(509432,)" />
<var name="print_columns" type="function" qualifier="builtins" value="%3Cfunction print_columns at 0x7f8d54ae4700&gt;" isContainer="True" />
<var name="pydev_jupyter_vars" type="module" qualifier="builtins" value="%3Cmodule %27pydev_jupyter_vars%27 from %27/Applications/PyCharm.app/Contents/plugins/python/helpers-pro/jupyter_debug/pydev_jupyter_vars.py%27&gt;" isContainer="True" />
<var name="quit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7f93a6e96910&gt;" isContainer="True" isIPythonHidden="True" />
<var name="regression_results" type="function" qualifier="builtins" value="%3Cfunction regression_results at 0x7f9343f18ee0&gt;" isContainer="True" />
<var name="remove_imported_pydev_package" type="function" qualifier="builtins" value="%3Cfunction remove_imported_pydev_package at 0x7f93a6eef280&gt;" isContainer="True" />
<var name="rf_y_pred" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 4 4 1 2 2 4 3 1 4 1 1 3 4 3 4 1 2 4 2 1 3 3 4 1 3 1 1 4 4%2C 1 1 2 4 4 1 3 1 2 1 1 4 3 3 4 1 4 2 1 1 2 1 4 4 3 1 1 3 3 4 1 1 4 3 4 1 3%2C 1 1 3 3 4 3 3 1 2 2 3 4 1 3 2 2 2 2 4 2 3 2 3 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="rfc" type="RandomForestClassifier" qualifier="sklearn.ensemble._forest" value="RandomForestClassifier%28%29" isContainer="True" shape="100" />
<var name="rmse" type="function" qualifier="builtins" value="%3Cfunction rmse at 0x7f9343f18ca0&gt;" isContainer="True" />
<var name="rmse_score" type="_PredictScorer" qualifier="sklearn.metrics._scorer" value="make_scorer%28rmse%2C greater_is_better=False%29" isContainer="True" />
<var name="sns" type="module" qualifier="builtins" value="%3Cmodule %27seaborn%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/seaborn/__init__.py%27&gt;" isContainer="True" />
<var name="sys" type="module" qualifier="builtins" value="%3Cmodule %27sys%27 %28built-in%29&gt;" isContainer="True" />
<var name="train_test_split" type="function" qualifier="builtins" value="%3Cfunction train_test_split at 0x7f9344c24820&gt;" isContainer="True" />
<var name="tscv" type="TimeSeriesSplit" qualifier="sklearn.model_selection._split" value="TimeSeriesSplit%28gap=0%2C max_train_size=None%2C n_splits=10%2C test_size=None%29" isContainer="True" />
<var name="wandb" type="module" qualifier="builtins" value="%3Cmodule %27wandb%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/wandb/__init__.py%27&gt;" isContainer="True" />
<var name="y" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(2547158, 1)" />
<var name="y_pred" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 3 4 1 2 2 4 1 1 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 3 1 1 3 4%2C 1 1 1 4 4 1 3 1 1 2 1 4 2 3 3 1 4 1 1 1 1 1 4 4 3 2 1 2 3 4 1 4 4 3 4 1 2%2C 2 3 3 3 4 3 3 1 2 1 3 4 2 4 1 4 2 2 4 2 3 2 2 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="y_pred_mlp" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 3 4 1 2 2 4 1 1 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 3 1 1 3 4%2C 1 1 1 4 4 1 3 1 1 2 1 4 2 3 3 1 4 1 1 1 1 1 4 4 3 2 1 2 3 4 1 4 4 3 4 1 2%2C 2 3 3 3 4 3 3 1 2 1 3 4 2 4 1 4 2 2 4 2 3 2 2 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="y_test" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="y_train" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(2037726, 1)" />
<var name="y_true" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="y_true_mlp" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
</xml>
<xml><var name="ConfusionMatrixDisplay" type="type" qualifier="builtins" value="%3Cclass %27sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay%27&gt;" isContainer="True" />
<var name="DataFrame" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.frame.DataFrame%27&gt;" isContainer="True" />
<var name="GridSearchCV" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._search.GridSearchCV%27&gt;" isContainer="True" />
<var name="In" type="list" qualifier="builtins" value="%5B%27%27%2C %22def importdata%28%29%3A%5Cn    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%5Cn    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %22%23 event del Index Column%5Cndf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%5Cndf.head%28%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29%22%2C %22%23add classification target%5Cndef f%28row%29%3A%5Cn    if row%5B%27idle_time%27%5D %3C 56%3A%5Cn        val = 1%5Cn    elif row%5B%27idle_time%27%5D %3C 195%3A%5Cn        val = 2%5Cn    elif row%5B%27idle_time%27%5D %3C 488%3A%5Cn        val = 3%5Cn    else%3A%5Cn        val = 4%5Cn    return val%5Cn%5Cndf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29%22%2C %27df..." isContainer="True" shape="40" isIPythonHidden="True" />
<var name="MLPClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.neural_network._multilayer_perceptron.MLPClassifier%27&gt;" isContainer="True" />
<var name="MultiIndex" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.indexes.multi.MultiIndex%27&gt;" isContainer="True" />
<var name="Out" type="dict" qualifier="builtins" value="%7B4%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %0A2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %0A3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %0A4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80   0.0   0.0     12    6       1427           1   %0A1      195  10.80   0.0   0.0     12    6       1427           1   %0A2       81  10.80   0.0   0.0     12    6       1437           1   %0A3       81  10.86   0.0   0.0      1    0          0           1   %0A4      195  10.86   0.0   0.0      1    0          0           0   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                1439         12  %0A2                14..." isContainer="True" shape="6" isIPythonHidden="True" />
<var name="PredictorScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="PredictorScalerFit" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="Predictors" type="list" qualifier="builtins" value="%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C %27hex_enc%27%2C %27start_min%27%2C %27month%27%2C %27day%27%5D" isContainer="True" shape="11" />
<var name="RandomForestClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._forest.RandomForestClassifier%27&gt;" isContainer="True" />
<var name="RandomForestRegressor" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._forest.RandomForestRegressor%27&gt;" isContainer="True" />
<var name="StandardScaler" type="type" qualifier="builtins" value="%3Cclass %27sklearn.preprocessing._data.StandardScaler%27&gt;" isContainer="True" />
<var name="TargetVarScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="TargetVariable" type="list" qualifier="builtins" value="%5B%27idle_time_class%27%5D" isContainer="True" shape="1" />
<var name="TimeSeriesSplit" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._split.TimeSeriesSplit%27&gt;" isContainer="True" />
<var name="X" type="ndarray" qualifier="numpy" value="%5B%5B-3.48291031  0.05221204  0.00831509 ...  1.74586868  1.62198697%2C   1.52004291%5D%2C %5B-3.53864896  0.05221204  0.00831509 ...  1.74586868  1.62198697%2C   1.52004291%5D%2C %5B-1.68963911  0.05525741  0.0933678  ...  1.7676273   1.62198697%2C   1.52004291%5D%2C ...%2C %5B-3.50067524  0.05965731  0.03911388 ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%2C %5B-3.42209597  0.05545353 -0.0107677  ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%2C %5B-3.51129661  0.05743199  0.04654993 ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%5D" isContainer="True" shape="(2547158, 11)" />
<var name="X_test" type="ndarray" qualifier="numpy" value="%5B%5B 1.05071915  0.04889693  0.11413728 ...  0.63617885  0.62918419%2C  -1.0372361 %5D%2C %5B-0.27530614  0.06483141  0.04634295 ...  0.68187196 -0.36361858%2C  -0.01432449%5D%2C %5B 1.05175309  0.04263701  0.08134823 ... -0.14495576 -0.36361858%2C   1.00858711%5D%2C ...%2C %5B-1.69631271  0.05545353 -0.0107677  ...  0.93209614 -0.36361858%2C  -0.52578029%5D%2C %5B 0.73480414  0.05847147  0.11548136 ... -1.35908699  0.29824993%2C  -0.01432449%5D%2C %5B-0.26548373  0.05469059  0.00189398 ... -0.02963505 -0.03268432%2C   0.49713131%5D%5D" isContainer="True" shape="(509432, 11)" />
<var name="X_train" type="ndarray" qualifier="numpy" value="%5B%5B-1.70087144  0.05915032  0.06987419 ... -0.46480754  0.96011845%2C  -0.52578029%5D%2C %5B 0.73973884  0.05925821  0.07617097 ... -0.16889025  0.96011845%2C   1.00858711%5D%2C %5B-1.69678268  0.05520917  0.10957407 ...  0.92339269  1.29105271%2C  -1.5486919 %5D%2C ...%2C %5B 0.74420358  0.05981332  0.10904473 ... -1.35908699 -0.69455284%2C   1.52004291%5D%2C %5B 0.74425057  0.07199308  0.1287628  ... -1.35908699 -0.69455284%2C  -1.0372361 %5D%2C %5B-0.27666906  0.05176837  0.06976643 ...  1.27805826 -0.36361858%2C  -1.0372361 %5D%5D" isContainer="True" shape="(2037726, 11)" />
<var name="_" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7f8d53de0100&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_16" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" isIPythonHidden="True" />
<var name="_33" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7f8d53de0100&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_4" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  %5D %5B0                 821         12  %5D %5B1                1439         12  %5D %5B2                1439  ...%5D" isContainer="True" shape="(5, 16)" isIPythonHidden="True" />
<var name="_6" type="Series" qualifier="pandas.core.series" value="%280.25%2C 56.0%29 %280.5%2C 195.0%29 %280.75%2C 488.0%29" isContainer="True" shape="(3,)" isIPythonHidden="True" />
<var name="_7" type="Series" qualifier="pandas.core.series" value="%280.25%2C 56.0%29 %280.5%2C 195.0%29 %280.75%2C 488.0%29 %281.0%2C 1439.0%29" isContainer="True" shape="(4,)" isIPythonHidden="True" />
<var name="_9" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  idle_time_class  %5D %5B0                 821         12                1  %5D %5B1                1439   ...%5D" isContainer="True" shape="(5, 17)" isIPythonHidden="True" />
<var name="__" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" isIPythonHidden="True" />
<var name="___" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  idle_time_class  %5D %5B0                 821         12                1  %5D %5B1                1439   ...%5D" isContainer="True" shape="(5, 17)" isIPythonHidden="True" />
<var name="__builtin__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtins__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__doc__" type="str" qualifier="builtins" value="Automatically created module for IPython interactive environment" isIPythonHidden="True" />
<var name="__loader__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__name__" type="str" qualifier="builtins" value="__main__" isIPythonHidden="True" />
<var name="__package__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__spec__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="_dh" type="list" qualifier="builtins" value="%5B%27/Users/jonweske/devment/BA_nextbike/scripts%27%5D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_i" type="str" qualifier="builtins" value="%23 Visualize all classifier plots%0Awandb.sklearn.plot_classifier%28best_model%2C X_train%2C X_test%2C y_train%2C y_test%2C y_pred_mlp%2C Predictors%2Cmodel_name=%27SVC%27%2C feature_names=None%29" isIPythonHidden="True" />
<var name="_i1" type="str" qualifier="builtins" value="def importdata%28%29%3A%0A    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%0A    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29" isIPythonHidden="True" />
<var name="_i10" type="str" qualifier="builtins" value="TargetVariable=%5B%27idle_time_class%27%5D%0APredictors=%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C%27hex_enc%27%2C%27start_min%27%2C %27month%27%2C %27day%27%2C%5D" isIPythonHidden="True" />
<var name="_i11" type="str" qualifier="builtins" value="X=df%5BPredictors%5D.values%0Ay=df%5BTargetVariable%5D.values%0A%0A%23%23%23 Sandardization of data %23%23%23%0Afrom sklearn.preprocessing import StandardScaler%0APredictorScaler=StandardScaler%28%29%0ATargetVarScaler=StandardScaler%28%29%0A%0A%23 Storing the fit object for later reference%0APredictorScalerFit=PredictorScaler.fit%28X%29%0A%23TargetVarScalerFit=TargetVarScaler.fit%28y%29%0A%0A%23 Generating the standardized values of X and y%0AX=PredictorScalerFit.transform%28X%29%0A%23y=TargetVarScalerFit.transform%28y%29%0A%0A%0A%23 Split the data into training and testing set%0Afrom sklearn.model_selection import train_test_split%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28X%2C y%2C test_size=0.2%2C random_state=42%29%0A%0A%23 Quick sanity check with the shapes of Training and testing datasets%0Aprint%28X_train.shape%29%0Aprint%28y_train.shape%29%0Aprint%28X_test.shape%29%0Aprint%28y_test.shape%29" isIPythonHidden="True" />
<var name="_i12" type="str" qualifier="builtins" value="from sklearn.neural_network import MLPClassifier%0Aimport matplotlib.pyplot as plt%0Afrom sklearn.metrics import ConfusionMatrixDisplay%0A%0Acls = MLPClassifier%28hidden_layer_sizes=%28100%2C50%2C100%29%2C activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=1%2C early_stopping=True%29%0Acls.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Aexpected_y = y_test%0Apredicted_y = cls.predict%28X_test%29%0A%0Aprint%28cls.score%28X_test%2C y_test%29%29%0A%0Afig = ConfusionMatrixDisplay.from_predictions%28predicted_y%2Cexpected_y%2Ccmap=plt.cm.Blues%29%0Afig.figure_.suptitle%28%22Confusion Matrix%22%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i13" type="str" qualifier="builtins" value="def regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29%0A%0Aregression_results%28expected_y%2C predicted_y%29" isIPythonHidden="True" />
<var name="_i14" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29%0A%0Aregression_results%28expected_y%2C predicted_y%29" isIPythonHidden="True" />
<var name="_i15" type="str" qualifier="builtins" value="from sklearn.ensemble import RandomForestClassifier%0A%0Arfc = RandomForestClassifier%28n_estimators=100%29%0A%0Arfc.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Arf_y_pred = rfc.predict%28X_test%29%0A%0Arfc.score%28X_test%2Cy_test%29%0A%0Afig = ConfusionMatrixDisplay.from_predictions%28rf_y_pred%2Cexpected_y%2Ccmap=plt.cm.Blues%29%0Afig.figure_.suptitle%28%22Confusion Matrix RandomForestClassifier%22%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i16" type="str" qualifier="builtins" value="import pandas as pd%0A%0Afeature_imp = pd.Series%28rfc.feature_importances_%2Cindex=Predictors%29.sort_values%28ascending=False%29%0Afeature_imp" isIPythonHidden="True" />
<var name="_i17" type="str" qualifier="builtins" value="import matplotlib.pyplot as plt%0Aimport seaborn as sns%0A%25matplotlib inline%0A%23 Creating a bar plot%0Asns.barplot%28x=feature_imp%2C y=feature_imp.index%29%0A%23 Add labels to your graph%0Aplt.xlabel%28%27Feature Importance Score%27%29%0Aplt.ylabel%28%27Features%27%29%0Aplt.title%28%22Visualizing Important Features%22%29%0Aplt.legend%28%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i18" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i19" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i2" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0A%0A%23 read CSV%0Adf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29" isIPythonHidden="True" />
<var name="_i20" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i21" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i22" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i23" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i24" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0Afrom sklearn.ensemble import RandomForestRegressor%0Afrom sklearn.model_selection import TimeSeriesSplit%0A%0Amodel = MLPClassifier%28activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=0%2C early_stopping=True%29%0Aparam_search = %7B%0A    %27hidden_layer_sizes%27%3A %5B%2810%2C10%29%2C %2810%2C10%2C10%29%2C %2810%2C10%2C10%2C10%29%2C%0A                           %2850%2C50%29%2C %2850%2C50%2C50%29%2C %2850%2C50%2C50%2C50%29%2C%0A                           %28100%2C100%29%2C %28100%2C100%2C100%29%2C %28100%2C100%2C100%2C100%29%5D%7D%0Atscv = TimeSeriesSplit%28n_splits=10%29%0Agsearch = GridSearchCV%28estimator=model%2C cv=tscv%2C param_grid=param_search%2C scoring = rmse_score%29%0Agsearch.fit%28X_train%2C y_train.ravel%28%29%29%0Abest_score = gsearch.best_score_%0Abest_model = gsearch.best_estimator_" isIPythonHidden="True" />
<var name="_i25" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i26" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i27" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0Afrom sklearn.ensemble import RandomForestRegressor%0Afrom sklearn.model_selection import TimeSeriesSplit%0A%0Amodel = MLPClassifier%28activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=1%2C early_stopping=True%29%0Aparam_search = %7B%0A    %27hidden_layer_sizes%27%3A %5B%2810%2C10%29%2C %2810%2C10%2C10%29%2C %2810%2C10%2C10%2C10%29%2C%0A                           %2850%2C50%29%2C %2850%2C50%2C50%29%2C %2850%2C50%2C50%2C50%29%2C%0A                           %28100%2C100%29%2C %28100%2C100%2C100%29%2C %28100%2C100%2C100%2C100%29%5D%7D%0Atscv = TimeSeriesSplit%28n_splits=10%29%0Agsearch = GridSearchCV%28estimator=model%2C cv=tscv%2C param_grid=param_search%2C scoring = rmse_score%29%0Agsearch.fit%28X_train%2C y_train.ravel%28%29%29%0Abest_score = gsearch.best_score_%0Abest_model = gsearch.best_estimator_" isIPythonHidden="True" />
<var name="_i28" type="str" qualifier="builtins" value="y_true = y_test%0Ay_pred = best_model.predict%28X_test%29%0A%0Aregression_results%28y_true%2C y_pred%29" isIPythonHidden="True" />
<var name="_i29" type="str" qualifier="builtins" value="imp = best_model.feature_importances_%0AX_train = pd.DataFrame%28X_train%2Ccolumns=Predictors%29%0Afeatures = X_train.columns%0Aindices = np.argsort%28imp%29%0Aplt.title%28%27Feature Importances%27%29%0Aplt.barh%28range%28len%28indices%29%29%2C imp%5Bindices%5D%2C color=%27b%27%2C align=%27center%27%29%0Aplt.yticks%28range%28len%28indices%29%29%2C %5Bfeatures%5Bi%5D for i in indices%5D%29%0Aplt.xlabel%28%27Relative Importance%27%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i3" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0A%0A%23 read CSV%0Adf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29" isIPythonHidden="True" />
<var name="_i30" type="str" qualifier="builtins" value="best_model.get%28%29" isIPythonHidden="True" />
<var name="_i31" type="str" qualifier="builtins" value="best_model.__getattribute__%28%29" isIPythonHidden="True" />
<var name="_i32" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_i33" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22visualize-sklearn%22%29" isIPythonHidden="True" />
<var name="_i34" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i35" type="str" qualifier="builtins" value="y_true_mlp = y_test%0Ay_pred_mlp = best_model.predict%28X_test%29%0A%0Aregression_results%28y_true_mlp%2C y_pred_mlp%29" isIPythonHidden="True" />
<var name="_i36" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_i37" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i38" type="str" qualifier="builtins" value="%23 Visualize all classifier plots%0Awandb.sklearn.plot_classifier%28best_model%2C X_train%2C X_test%2C y_train%2C y_test%2C y_pred_mlp%2C Predictors%2Cmodel_name=%27SVC%27%2C feature_names=None%29" isIPythonHidden="True" />
<var name="_i39" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i4" type="str" qualifier="builtins" value="%23 event del Index Column%0Adf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%0Adf.head%28%29" isIPythonHidden="True" />
<var name="_i5" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29" isIPythonHidden="True" />
<var name="_i6" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%0Adf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29" isIPythonHidden="True" />
<var name="_i7" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%0Adf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29" isIPythonHidden="True" />
<var name="_i8" type="str" qualifier="builtins" value="%23add classification target%0Adef f%28row%29%3A%0A    if row%5B%27idle_time%27%5D %3C 56%3A%0A        val = 1%0A    elif row%5B%27idle_time%27%5D %3C 195%3A%0A        val = 2%0A    elif row%5B%27idle_time%27%5D %3C 488%3A%0A        val = 3%0A    else%3A%0A        val = 4%0A    return val%0A%0Adf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29" isIPythonHidden="True" />
<var name="_i9" type="str" qualifier="builtins" value="df.head%28%29" isIPythonHidden="True" />
<var name="_ih" type="list" qualifier="builtins" value="%5B%27%27%2C %22def importdata%28%29%3A%5Cn    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%5Cn    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %22%23 event del Index Column%5Cndf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%5Cndf.head%28%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29%22%2C %22%23add classification target%5Cndef f%28row%29%3A%5Cn    if row%5B%27idle_time%27%5D %3C 56%3A%5Cn        val = 1%5Cn    elif row%5B%27idle_time%27%5D %3C 195%3A%5Cn        val = 2%5Cn    elif row%5B%27idle_time%27%5D %3C 488%3A%5Cn        val = 3%5Cn    else%3A%5Cn        val = 4%5Cn    return val%5Cn%5Cndf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29%22%2C %27df..." isContainer="True" shape="40" isIPythonHidden="True" />
<var name="_ii" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_iii" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_oh" type="dict" qualifier="builtins" value="%7B4%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %0A2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %0A3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %0A4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80   0.0   0.0     12    6       1427           1   %0A1      195  10.80   0.0   0.0     12    6       1427           1   %0A2       81  10.80   0.0   0.0     12    6       1437           1   %0A3       81  10.86   0.0   0.0      1    0          0           1   %0A4      195  10.86   0.0   0.0      1    0          0           0   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                1439         12  %0A2                14..." isContainer="True" shape="6" isIPythonHidden="True" />
<var name="_pydevd_bundle" type="module" qualifier="builtins" value="%3Cmodule %27_pydevd_bundle%27 from %27/Applications/PyCharm.app/Contents/plugins/python/helpers/pydev/_pydevd_bundle/__init__.py%27&gt;" isContainer="True" />
<var name="best_model" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C hidden_layer_sizes=%2850%2C 50%2C 50%2C 50%29%2C%0A              max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="best_score" type="float64" qualifier="numpy" value="-1.0336816581459078" shape="()" />
<var name="boxplot" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.775x0.755%29" isContainer="True" />
<var name="cls" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C hidden_layer_sizes=%28100%2C 50%2C 100%29%2C%0A              max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="df" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end  %5C %5B0           3694  51.323619  12.335887  1514764029  1514764799   %5D %5B1           2508  51.323619  12.335887  1514764035  1514764799   %5D %5B2          41851  51.332415  12.395158  1514764638  1514764799   %5D %5B3          41851  51.332415  12.395158  1514764800  1514851199   %5D %5B4           3694  51.323619  12.335887  1514764800  1514814103   %5D %5B...          ...        ...        ...         ...         ...   %5D %5B2547153    72243  51.367222  12.369617  1640897552  1640903562   %5D %5B2547154    72058  51.317569  12.382730  1640897593  1640904368   %5D %5B2547155    71949  51.334711  12.356763  1640897835  1640899343   %5D %5B2547156    97785  51.367276  12.369792  1640898086  1640900985   %5D %5B2547157    41738  51.366942  12.370322  1640900918  1640903516   %5D %5B%5D %5B                  hex_id  hex_enc   temp  rain  snow  month  day  start_min  %5C%5D %5B0        881f1a8d91fffff      195  10.80  0.00   0.0     12    6       1427   %5D %5B1        881f1a8d91fffff      195  10.80  0.00   ...%5D" isContainer="True" shape="(2547158, 17)" />
<var name="exit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7f93a6e96910&gt;" isContainer="True" isIPythonHidden="True" />
<var name="expected_y" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="f" type="function" qualifier="builtins" value="%3Cfunction f at 0x7f9345087f70&gt;" isContainer="True" />
<var name="feature_imp" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" />
<var name="fig" type="ConfusionMatrixDisplay" qualifier="sklearn.metrics._plot.confusion_matrix" value="%3Csklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay object at 0x7f9344523eb0&gt;" isContainer="True" />
<var name="get_ipython" type="method" qualifier="builtins" value="%3Cbound method InteractiveShell.get_ipython of %3Cipykernel.zmqshell.ZMQInteractiveShell object at 0x7f93a6e7d610&gt;&gt;" isContainer="True" isIPythonHidden="True" />
<var name="gsearch" type="GridSearchCV" qualifier="sklearn.model_selection._search" value="GridSearchCV%28cv=TimeSeriesSplit%28gap=0%2C max_train_size=None%2C n_splits=10%2C test_size=None%29%2C%0A             estimator=MLPClassifier%28early_stopping=True%2C max_iter=1000%2C%0A                                     verbose=1%29%2C%0A             param_grid=%7B%27hidden_layer_sizes%27%3A %5B%2810%2C 10%29%2C %2810%2C 10%2C 10%29%2C%0A                                                %2810%2C 10%2C 10%2C 10%29%2C %2850%2C 50%29%2C%0A                                                %2850%2C 50%2C 50%29%2C %2850%2C 50%2C 50%2C 50%29%2C%0A                                                %28100%2C 100%29%2C %28100%2C 100%2C 100%29%2C%0A                                                %28100%2C 100%2C 100%2C 100%29%5D%7D%2C%0A             scoring=make_scorer%28rmse%2C greater_is_better=False%29%29" isContainer="True" />
<var name="importdata" type="function" qualifier="builtins" value="%3Cfunction importdata at 0x7f93a6eef5e0&gt;" isContainer="True" />
<var name="make_scorer" type="function" qualifier="builtins" value="%3Cfunction make_scorer at 0x7f9345aead30&gt;" isContainer="True" />
<var name="metrics" type="module" qualifier="builtins" value="%3Cmodule %27sklearn.metrics%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/sklearn/metrics/__init__.py%27&gt;" isContainer="True" />
<var name="model" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="np" type="module" qualifier="builtins" value="%3Cmodule %27numpy%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/numpy/__init__.py%27&gt;" isContainer="True" />
<var name="param_search" type="dict" qualifier="builtins" value="%7B%27hidden_layer_sizes%27%3A %5B%2810%2C 10%29%2C %2810%2C 10%2C 10%29%2C %2810%2C 10%2C 10%2C 10%29%2C %2850%2C 50%29%2C %2850%2C 50%2C 50%29%2C %2850%2C 50%2C 50%2C 50%29%2C %28100%2C 100%29%2C %28100%2C 100%2C 100%29%2C %28100%2C 100%2C 100%2C 100%29%5D%7D" isContainer="True" shape="1" />
<var name="pd" type="module" qualifier="builtins" value="%3Cmodule %27pandas%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/pandas/__init__.py%27&gt;" isContainer="True" />
<var name="plt" type="module" qualifier="builtins" value="%3Cmodule %27matplotlib.pyplot%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/matplotlib/pyplot.py%27&gt;" isContainer="True" />
<var name="predicted_y" type="ndarray" qualifier="numpy" value="%5B1 2 2 2 4 3 1 3 3 4 1 2 2 4 1 2 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 2 1 1 4 4%2C 1 2 1 4 4 1 3 1 1 1 1 2 2 3 4 1 4 1 1 1 1 3 4 4 3 2 1 3 3 3 1 4 4 3 4 1 2%2C 1 2 3 3 4 3 3 1 3 1 3 4 2 4 3 4 2 2 4 2 3 2 1 3 3 2%5D" isContainer="True" shape="(509432,)" />
<var name="print_columns" type="function" qualifier="builtins" value="%3Cfunction print_columns at 0x7f8d54ae4700&gt;" isContainer="True" />
<var name="pydev_jupyter_vars" type="module" qualifier="builtins" value="%3Cmodule %27pydev_jupyter_vars%27 from %27/Applications/PyCharm.app/Contents/plugins/python/helpers-pro/jupyter_debug/pydev_jupyter_vars.py%27&gt;" isContainer="True" />
<var name="quit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7f93a6e96910&gt;" isContainer="True" isIPythonHidden="True" />
<var name="regression_results" type="function" qualifier="builtins" value="%3Cfunction regression_results at 0x7f9343f18ee0&gt;" isContainer="True" />
<var name="remove_imported_pydev_package" type="function" qualifier="builtins" value="%3Cfunction remove_imported_pydev_package at 0x7f93a6eef280&gt;" isContainer="True" />
<var name="rf_y_pred" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 4 4 1 2 2 4 3 1 4 1 1 3 4 3 4 1 2 4 2 1 3 3 4 1 3 1 1 4 4%2C 1 1 2 4 4 1 3 1 2 1 1 4 3 3 4 1 4 2 1 1 2 1 4 4 3 1 1 3 3 4 1 1 4 3 4 1 3%2C 1 1 3 3 4 3 3 1 2 2 3 4 1 3 2 2 2 2 4 2 3 2 3 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="rfc" type="RandomForestClassifier" qualifier="sklearn.ensemble._forest" value="RandomForestClassifier%28%29" isContainer="True" shape="100" />
<var name="rmse" type="function" qualifier="builtins" value="%3Cfunction rmse at 0x7f9343f18ca0&gt;" isContainer="True" />
<var name="rmse_score" type="_PredictScorer" qualifier="sklearn.metrics._scorer" value="make_scorer%28rmse%2C greater_is_better=False%29" isContainer="True" />
<var name="sns" type="module" qualifier="builtins" value="%3Cmodule %27seaborn%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/seaborn/__init__.py%27&gt;" isContainer="True" />
<var name="sys" type="module" qualifier="builtins" value="%3Cmodule %27sys%27 %28built-in%29&gt;" isContainer="True" />
<var name="train_test_split" type="function" qualifier="builtins" value="%3Cfunction train_test_split at 0x7f9344c24820&gt;" isContainer="True" />
<var name="tscv" type="TimeSeriesSplit" qualifier="sklearn.model_selection._split" value="TimeSeriesSplit%28gap=0%2C max_train_size=None%2C n_splits=10%2C test_size=None%29" isContainer="True" />
<var name="wandb" type="module" qualifier="builtins" value="%3Cmodule %27wandb%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/wandb/__init__.py%27&gt;" isContainer="True" />
<var name="y" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(2547158, 1)" />
<var name="y_pred" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 3 4 1 2 2 4 1 1 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 3 1 1 3 4%2C 1 1 1 4 4 1 3 1 1 2 1 4 2 3 3 1 4 1 1 1 1 1 4 4 3 2 1 2 3 4 1 4 4 3 4 1 2%2C 2 3 3 3 4 3 3 1 2 1 3 4 2 4 1 4 2 2 4 2 3 2 2 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="y_pred_mlp" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 3 4 1 2 2 4 1 1 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 3 1 1 3 4%2C 1 1 1 4 4 1 3 1 1 2 1 4 2 3 3 1 4 1 1 1 1 1 4 4 3 2 1 2 3 4 1 4 4 3 4 1 2%2C 2 3 3 3 4 3 3 1 2 1 3 4 2 4 1 4 2 2 4 2 3 2 2 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="y_test" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="y_train" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(2037726, 1)" />
<var name="y_true" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="y_true_mlp" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
</xml>
<xml><var name="ConfusionMatrixDisplay" type="type" qualifier="builtins" value="%3Cclass %27sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay%27&gt;" isContainer="True" />
<var name="DataFrame" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.frame.DataFrame%27&gt;" isContainer="True" />
<var name="GridSearchCV" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._search.GridSearchCV%27&gt;" isContainer="True" />
<var name="In" type="list" qualifier="builtins" value="%5B%27%27%2C %22def importdata%28%29%3A%5Cn    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%5Cn    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %22%23 event del Index Column%5Cndf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%5Cndf.head%28%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29%22%2C %22%23add classification target%5Cndef f%28row%29%3A%5Cn    if row%5B%27idle_time%27%5D %3C 56%3A%5Cn        val = 1%5Cn    elif row%5B%27idle_time%27%5D %3C 195%3A%5Cn        val = 2%5Cn    elif row%5B%27idle_time%27%5D %3C 488%3A%5Cn        val = 3%5Cn    else%3A%5Cn        val = 4%5Cn    return val%5Cn%5Cndf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29%22%2C %27df..." isContainer="True" shape="41" isIPythonHidden="True" />
<var name="MLPClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.neural_network._multilayer_perceptron.MLPClassifier%27&gt;" isContainer="True" />
<var name="MultiIndex" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.indexes.multi.MultiIndex%27&gt;" isContainer="True" />
<var name="Out" type="dict" qualifier="builtins" value="%7B4%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %0A2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %0A3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %0A4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80   0.0   0.0     12    6       1427           1   %0A1      195  10.80   0.0   0.0     12    6       1427           1   %0A2       81  10.80   0.0   0.0     12    6       1437           1   %0A3       81  10.86   0.0   0.0      1    0          0           1   %0A4      195  10.86   0.0   0.0      1    0          0           0   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                1439         12  %0A2                14..." isContainer="True" shape="6" isIPythonHidden="True" />
<var name="PredictorScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="PredictorScalerFit" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="Predictors" type="list" qualifier="builtins" value="%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C %27hex_enc%27%2C %27start_min%27%2C %27month%27%2C %27day%27%5D" isContainer="True" shape="11" />
<var name="RandomForestClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._forest.RandomForestClassifier%27&gt;" isContainer="True" />
<var name="RandomForestRegressor" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._forest.RandomForestRegressor%27&gt;" isContainer="True" />
<var name="StandardScaler" type="type" qualifier="builtins" value="%3Cclass %27sklearn.preprocessing._data.StandardScaler%27&gt;" isContainer="True" />
<var name="TargetVarScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="TargetVariable" type="list" qualifier="builtins" value="%5B%27idle_time_class%27%5D" isContainer="True" shape="1" />
<var name="TimeSeriesSplit" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._split.TimeSeriesSplit%27&gt;" isContainer="True" />
<var name="X" type="ndarray" qualifier="numpy" value="%5B%5B-3.48291031  0.05221204  0.00831509 ...  1.74586868  1.62198697%2C   1.52004291%5D%2C %5B-3.53864896  0.05221204  0.00831509 ...  1.74586868  1.62198697%2C   1.52004291%5D%2C %5B-1.68963911  0.05525741  0.0933678  ...  1.7676273   1.62198697%2C   1.52004291%5D%2C ...%2C %5B-3.50067524  0.05965731  0.03911388 ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%2C %5B-3.42209597  0.05545353 -0.0107677  ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%2C %5B-3.51129661  0.05743199  0.04654993 ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%5D" isContainer="True" shape="(2547158, 11)" />
<var name="X_test" type="ndarray" qualifier="numpy" value="%5B%5B 1.05071915  0.04889693  0.11413728 ...  0.63617885  0.62918419%2C  -1.0372361 %5D%2C %5B-0.27530614  0.06483141  0.04634295 ...  0.68187196 -0.36361858%2C  -0.01432449%5D%2C %5B 1.05175309  0.04263701  0.08134823 ... -0.14495576 -0.36361858%2C   1.00858711%5D%2C ...%2C %5B-1.69631271  0.05545353 -0.0107677  ...  0.93209614 -0.36361858%2C  -0.52578029%5D%2C %5B 0.73480414  0.05847147  0.11548136 ... -1.35908699  0.29824993%2C  -0.01432449%5D%2C %5B-0.26548373  0.05469059  0.00189398 ... -0.02963505 -0.03268432%2C   0.49713131%5D%5D" isContainer="True" shape="(509432, 11)" />
<var name="X_train" type="ndarray" qualifier="numpy" value="%5B%5B-1.70087144  0.05915032  0.06987419 ... -0.46480754  0.96011845%2C  -0.52578029%5D%2C %5B 0.73973884  0.05925821  0.07617097 ... -0.16889025  0.96011845%2C   1.00858711%5D%2C %5B-1.69678268  0.05520917  0.10957407 ...  0.92339269  1.29105271%2C  -1.5486919 %5D%2C ...%2C %5B 0.74420358  0.05981332  0.10904473 ... -1.35908699 -0.69455284%2C   1.52004291%5D%2C %5B 0.74425057  0.07199308  0.1287628  ... -1.35908699 -0.69455284%2C  -1.0372361 %5D%2C %5B-0.27666906  0.05176837  0.06976643 ...  1.27805826 -0.36361858%2C  -1.0372361 %5D%5D" isContainer="True" shape="(2037726, 11)" />
<var name="_" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7f8d53de0100&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_16" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" isIPythonHidden="True" />
<var name="_33" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7f8d53de0100&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_4" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  %5D %5B0                 821         12  %5D %5B1                1439         12  %5D %5B2                1439  ...%5D" isContainer="True" shape="(5, 16)" isIPythonHidden="True" />
<var name="_6" type="Series" qualifier="pandas.core.series" value="%280.25%2C 56.0%29 %280.5%2C 195.0%29 %280.75%2C 488.0%29" isContainer="True" shape="(3,)" isIPythonHidden="True" />
<var name="_7" type="Series" qualifier="pandas.core.series" value="%280.25%2C 56.0%29 %280.5%2C 195.0%29 %280.75%2C 488.0%29 %281.0%2C 1439.0%29" isContainer="True" shape="(4,)" isIPythonHidden="True" />
<var name="_9" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  idle_time_class  %5D %5B0                 821         12                1  %5D %5B1                1439   ...%5D" isContainer="True" shape="(5, 17)" isIPythonHidden="True" />
<var name="__" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" isIPythonHidden="True" />
<var name="___" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  idle_time_class  %5D %5B0                 821         12                1  %5D %5B1                1439   ...%5D" isContainer="True" shape="(5, 17)" isIPythonHidden="True" />
<var name="__builtin__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtins__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__doc__" type="str" qualifier="builtins" value="Automatically created module for IPython interactive environment" isIPythonHidden="True" />
<var name="__loader__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__name__" type="str" qualifier="builtins" value="__main__" isIPythonHidden="True" />
<var name="__package__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__spec__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="_dh" type="list" qualifier="builtins" value="%5B%27/Users/jonweske/devment/BA_nextbike/scripts%27%5D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_i" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i1" type="str" qualifier="builtins" value="def importdata%28%29%3A%0A    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%0A    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29" isIPythonHidden="True" />
<var name="_i10" type="str" qualifier="builtins" value="TargetVariable=%5B%27idle_time_class%27%5D%0APredictors=%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C%27hex_enc%27%2C%27start_min%27%2C %27month%27%2C %27day%27%2C%5D" isIPythonHidden="True" />
<var name="_i11" type="str" qualifier="builtins" value="X=df%5BPredictors%5D.values%0Ay=df%5BTargetVariable%5D.values%0A%0A%23%23%23 Sandardization of data %23%23%23%0Afrom sklearn.preprocessing import StandardScaler%0APredictorScaler=StandardScaler%28%29%0ATargetVarScaler=StandardScaler%28%29%0A%0A%23 Storing the fit object for later reference%0APredictorScalerFit=PredictorScaler.fit%28X%29%0A%23TargetVarScalerFit=TargetVarScaler.fit%28y%29%0A%0A%23 Generating the standardized values of X and y%0AX=PredictorScalerFit.transform%28X%29%0A%23y=TargetVarScalerFit.transform%28y%29%0A%0A%0A%23 Split the data into training and testing set%0Afrom sklearn.model_selection import train_test_split%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28X%2C y%2C test_size=0.2%2C random_state=42%29%0A%0A%23 Quick sanity check with the shapes of Training and testing datasets%0Aprint%28X_train.shape%29%0Aprint%28y_train.shape%29%0Aprint%28X_test.shape%29%0Aprint%28y_test.shape%29" isIPythonHidden="True" />
<var name="_i12" type="str" qualifier="builtins" value="from sklearn.neural_network import MLPClassifier%0Aimport matplotlib.pyplot as plt%0Afrom sklearn.metrics import ConfusionMatrixDisplay%0A%0Acls = MLPClassifier%28hidden_layer_sizes=%28100%2C50%2C100%29%2C activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=1%2C early_stopping=True%29%0Acls.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Aexpected_y = y_test%0Apredicted_y = cls.predict%28X_test%29%0A%0Aprint%28cls.score%28X_test%2C y_test%29%29%0A%0Afig = ConfusionMatrixDisplay.from_predictions%28predicted_y%2Cexpected_y%2Ccmap=plt.cm.Blues%29%0Afig.figure_.suptitle%28%22Confusion Matrix%22%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i13" type="str" qualifier="builtins" value="def regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29%0A%0Aregression_results%28expected_y%2C predicted_y%29" isIPythonHidden="True" />
<var name="_i14" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29%0A%0Aregression_results%28expected_y%2C predicted_y%29" isIPythonHidden="True" />
<var name="_i15" type="str" qualifier="builtins" value="from sklearn.ensemble import RandomForestClassifier%0A%0Arfc = RandomForestClassifier%28n_estimators=100%29%0A%0Arfc.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Arf_y_pred = rfc.predict%28X_test%29%0A%0Arfc.score%28X_test%2Cy_test%29%0A%0Afig = ConfusionMatrixDisplay.from_predictions%28rf_y_pred%2Cexpected_y%2Ccmap=plt.cm.Blues%29%0Afig.figure_.suptitle%28%22Confusion Matrix RandomForestClassifier%22%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i16" type="str" qualifier="builtins" value="import pandas as pd%0A%0Afeature_imp = pd.Series%28rfc.feature_importances_%2Cindex=Predictors%29.sort_values%28ascending=False%29%0Afeature_imp" isIPythonHidden="True" />
<var name="_i17" type="str" qualifier="builtins" value="import matplotlib.pyplot as plt%0Aimport seaborn as sns%0A%25matplotlib inline%0A%23 Creating a bar plot%0Asns.barplot%28x=feature_imp%2C y=feature_imp.index%29%0A%23 Add labels to your graph%0Aplt.xlabel%28%27Feature Importance Score%27%29%0Aplt.ylabel%28%27Features%27%29%0Aplt.title%28%22Visualizing Important Features%22%29%0Aplt.legend%28%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i18" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i21" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i22" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i23" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i24" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0Afrom sklearn.ensemble import RandomForestRegressor%0Afrom sklearn.model_selection import TimeSeriesSplit%0A%0Amodel = MLPClassifier%28activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=0%2C early_stopping=True%29%0Aparam_search = %7B%0A    %27hidden_layer_sizes%27%3A %5B%2810%2C10%29%2C %2810%2C10%2C10%29%2C %2810%2C10%2C10%2C10%29%2C%0A                           %2850%2C50%29%2C %2850%2C50%2C50%29%2C %2850%2C50%2C50%2C50%29%2C%0A                           %28100%2C100%29%2C %28100%2C100%2C100%29%2C %28100%2C100%2C100%2C100%29%5D%7D%0Atscv = TimeSeriesSplit%28n_splits=10%29%0Agsearch = GridSearchCV%28estimator=model%2C cv=tscv%2C param_grid=param_search%2C scoring = rmse_score%29%0Agsearch.fit%28X_train%2C y_train.ravel%28%29%29%0Abest_score = gsearch.best_score_%0Abest_model = gsearch.best_estimator_" isIPythonHidden="True" />
<var name="_i25" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i26" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i27" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0Afrom sklearn.ensemble import RandomForestRegressor%0Afrom sklearn.model_selection import TimeSeriesSplit%0A%0Amodel = MLPClassifier%28activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=1%2C early_stopping=True%29%0Aparam_search = %7B%0A    %27hidden_layer_sizes%27%3A %5B%2810%2C10%29%2C %2810%2C10%2C10%29%2C %2810%2C10%2C10%2C10%29%2C%0A                           %2850%2C50%29%2C %2850%2C50%2C50%29%2C %2850%2C50%2C50%2C50%29%2C%0A                           %28100%2C100%29%2C %28100%2C100%2C100%29%2C %28100%2C100%2C100%2C100%29%5D%7D%0Atscv = TimeSeriesSplit%28n_splits=10%29%0Agsearch = GridSearchCV%28estimator=model%2C cv=tscv%2C param_grid=param_search%2C scoring = rmse_score%29%0Agsearch.fit%28X_train%2C y_train.ravel%28%29%29%0Abest_score = gsearch.best_score_%0Abest_model = gsearch.best_estimator_" isIPythonHidden="True" />
<var name="_i28" type="str" qualifier="builtins" value="y_true = y_test%0Ay_pred = best_model.predict%28X_test%29%0A%0Aregression_results%28y_true%2C y_pred%29" isIPythonHidden="True" />
<var name="_i29" type="str" qualifier="builtins" value="imp = best_model.feature_importances_%0AX_train = pd.DataFrame%28X_train%2Ccolumns=Predictors%29%0Afeatures = X_train.columns%0Aindices = np.argsort%28imp%29%0Aplt.title%28%27Feature Importances%27%29%0Aplt.barh%28range%28len%28indices%29%29%2C imp%5Bindices%5D%2C color=%27b%27%2C align=%27center%27%29%0Aplt.yticks%28range%28len%28indices%29%29%2C %5Bfeatures%5Bi%5D for i in indices%5D%29%0Aplt.xlabel%28%27Relative Importance%27%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i3" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0A%0A%23 read CSV%0Adf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29" isIPythonHidden="True" />
<var name="_i30" type="str" qualifier="builtins" value="best_model.get%28%29" isIPythonHidden="True" />
<var name="_i31" type="str" qualifier="builtins" value="best_model.__getattribute__%28%29" isIPythonHidden="True" />
<var name="_i32" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_i33" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22visualize-sklearn%22%29" isIPythonHidden="True" />
<var name="_i34" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i35" type="str" qualifier="builtins" value="y_true_mlp = y_test%0Ay_pred_mlp = best_model.predict%28X_test%29%0A%0Aregression_results%28y_true_mlp%2C y_pred_mlp%29" isIPythonHidden="True" />
<var name="_i36" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_i37" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i38" type="str" qualifier="builtins" value="%23 Visualize all classifier plots%0Awandb.sklearn.plot_classifier%28best_model%2C X_train%2C X_test%2C y_train%2C y_test%2C y_pred_mlp%2C Predictors%2Cmodel_name=%27SVC%27%2C feature_names=None%29" isIPythonHidden="True" />
<var name="_i39" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i4" type="str" qualifier="builtins" value="%23 event del Index Column%0Adf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%0Adf.head%28%29" isIPythonHidden="True" />
<var name="_i40" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C TargetVariable%29" isIPythonHidden="True" />
<var name="_i5" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29" isIPythonHidden="True" />
<var name="_i6" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%0Adf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29" isIPythonHidden="True" />
<var name="_i7" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%0Adf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29" isIPythonHidden="True" />
<var name="_i8" type="str" qualifier="builtins" value="%23add classification target%0Adef f%28row%29%3A%0A    if row%5B%27idle_time%27%5D %3C 56%3A%0A        val = 1%0A    elif row%5B%27idle_time%27%5D %3C 195%3A%0A        val = 2%0A    elif row%5B%27idle_time%27%5D %3C 488%3A%0A        val = 3%0A    else%3A%0A        val = 4%0A    return val%0A%0Adf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29" isIPythonHidden="True" />
<var name="_i9" type="str" qualifier="builtins" value="df.head%28%29" isIPythonHidden="True" />
<var name="_ih" type="list" qualifier="builtins" value="%5B%27%27%2C %22def importdata%28%29%3A%5Cn    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%5Cn    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %22%23 event del Index Column%5Cndf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%5Cndf.head%28%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29%22%2C %22%23add classification target%5Cndef f%28row%29%3A%5Cn    if row%5B%27idle_time%27%5D %3C 56%3A%5Cn        val = 1%5Cn    elif row%5B%27idle_time%27%5D %3C 195%3A%5Cn        val = 2%5Cn    elif row%5B%27idle_time%27%5D %3C 488%3A%5Cn        val = 3%5Cn    else%3A%5Cn        val = 4%5Cn    return val%5Cn%5Cndf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29%22%2C %27df..." isContainer="True" shape="41" isIPythonHidden="True" />
<var name="_ii" type="str" qualifier="builtins" value="%23 Visualize all classifier plots%0Awandb.sklearn.plot_classifier%28best_model%2C X_train%2C X_test%2C y_train%2C y_test%2C y_pred_mlp%2C Predictors%2Cmodel_name=%27SVC%27%2C feature_names=None%29" isIPythonHidden="True" />
<var name="_iii" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_oh" type="dict" qualifier="builtins" value="%7B4%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %0A2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %0A3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %0A4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80   0.0   0.0     12    6       1427           1   %0A1      195  10.80   0.0   0.0     12    6       1427           1   %0A2       81  10.80   0.0   0.0     12    6       1437           1   %0A3       81  10.86   0.0   0.0      1    0          0           1   %0A4      195  10.86   0.0   0.0      1    0          0           0   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                1439         12  %0A2                14..." isContainer="True" shape="6" isIPythonHidden="True" />
<var name="_pydevd_bundle" type="module" qualifier="builtins" value="%3Cmodule %27_pydevd_bundle%27 from %27/Applications/PyCharm.app/Contents/plugins/python/helpers/pydev/_pydevd_bundle/__init__.py%27&gt;" isContainer="True" />
<var name="best_model" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C hidden_layer_sizes=%2850%2C 50%2C 50%2C 50%29%2C%0A              max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="best_score" type="float64" qualifier="numpy" value="-1.0336816581459078" shape="()" />
<var name="boxplot" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.775x0.755%29" isContainer="True" />
<var name="cls" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C hidden_layer_sizes=%28100%2C 50%2C 100%29%2C%0A              max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="df" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end  %5C %5B0           3694  51.323619  12.335887  1514764029  1514764799   %5D %5B1           2508  51.323619  12.335887  1514764035  1514764799   %5D %5B2          41851  51.332415  12.395158  1514764638  1514764799   %5D %5B3          41851  51.332415  12.395158  1514764800  1514851199   %5D %5B4           3694  51.323619  12.335887  1514764800  1514814103   %5D %5B...          ...        ...        ...         ...         ...   %5D %5B2547153    72243  51.367222  12.369617  1640897552  1640903562   %5D %5B2547154    72058  51.317569  12.382730  1640897593  1640904368   %5D %5B2547155    71949  51.334711  12.356763  1640897835  1640899343   %5D %5B2547156    97785  51.367276  12.369792  1640898086  1640900985   %5D %5B2547157    41738  51.366942  12.370322  1640900918  1640903516   %5D %5B%5D %5B                  hex_id  hex_enc   temp  rain  snow  month  day  start_min  %5C%5D %5B0        881f1a8d91fffff      195  10.80  0.00   0.0     12    6       1427   %5D %5B1        881f1a8d91fffff      195  10.80  0.00   ...%5D" isContainer="True" shape="(2547158, 17)" />
<var name="exit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7f93a6e96910&gt;" isContainer="True" isIPythonHidden="True" />
<var name="expected_y" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="f" type="function" qualifier="builtins" value="%3Cfunction f at 0x7f9345087f70&gt;" isContainer="True" />
<var name="feature_imp" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" />
<var name="fig" type="ConfusionMatrixDisplay" qualifier="sklearn.metrics._plot.confusion_matrix" value="%3Csklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay object at 0x7f9344523eb0&gt;" isContainer="True" />
<var name="get_ipython" type="method" qualifier="builtins" value="%3Cbound method InteractiveShell.get_ipython of %3Cipykernel.zmqshell.ZMQInteractiveShell object at 0x7f93a6e7d610&gt;&gt;" isContainer="True" isIPythonHidden="True" />
<var name="gsearch" type="GridSearchCV" qualifier="sklearn.model_selection._search" value="GridSearchCV%28cv=TimeSeriesSplit%28gap=0%2C max_train_size=None%2C n_splits=10%2C test_size=None%29%2C%0A             estimator=MLPClassifier%28early_stopping=True%2C max_iter=1000%2C%0A                                     verbose=1%29%2C%0A             param_grid=%7B%27hidden_layer_sizes%27%3A %5B%2810%2C 10%29%2C %2810%2C 10%2C 10%29%2C%0A                                                %2810%2C 10%2C 10%2C 10%29%2C %2850%2C 50%29%2C%0A                                                %2850%2C 50%2C 50%29%2C %2850%2C 50%2C 50%2C 50%29%2C%0A                                                %28100%2C 100%29%2C %28100%2C 100%2C 100%29%2C%0A                                                %28100%2C 100%2C 100%2C 100%29%5D%7D%2C%0A             scoring=make_scorer%28rmse%2C greater_is_better=False%29%29" isContainer="True" />
<var name="importdata" type="function" qualifier="builtins" value="%3Cfunction importdata at 0x7f93a6eef5e0&gt;" isContainer="True" />
<var name="make_scorer" type="function" qualifier="builtins" value="%3Cfunction make_scorer at 0x7f9345aead30&gt;" isContainer="True" />
<var name="metrics" type="module" qualifier="builtins" value="%3Cmodule %27sklearn.metrics%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/sklearn/metrics/__init__.py%27&gt;" isContainer="True" />
<var name="model" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="np" type="module" qualifier="builtins" value="%3Cmodule %27numpy%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/numpy/__init__.py%27&gt;" isContainer="True" />
<var name="param_search" type="dict" qualifier="builtins" value="%7B%27hidden_layer_sizes%27%3A %5B%2810%2C 10%29%2C %2810%2C 10%2C 10%29%2C %2810%2C 10%2C 10%2C 10%29%2C %2850%2C 50%29%2C %2850%2C 50%2C 50%29%2C %2850%2C 50%2C 50%2C 50%29%2C %28100%2C 100%29%2C %28100%2C 100%2C 100%29%2C %28100%2C 100%2C 100%2C 100%29%5D%7D" isContainer="True" shape="1" />
<var name="pd" type="module" qualifier="builtins" value="%3Cmodule %27pandas%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/pandas/__init__.py%27&gt;" isContainer="True" />
<var name="plt" type="module" qualifier="builtins" value="%3Cmodule %27matplotlib.pyplot%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/matplotlib/pyplot.py%27&gt;" isContainer="True" />
<var name="predicted_y" type="ndarray" qualifier="numpy" value="%5B1 2 2 2 4 3 1 3 3 4 1 2 2 4 1 2 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 2 1 1 4 4%2C 1 2 1 4 4 1 3 1 1 1 1 2 2 3 4 1 4 1 1 1 1 3 4 4 3 2 1 3 3 3 1 4 4 3 4 1 2%2C 1 2 3 3 4 3 3 1 3 1 3 4 2 4 3 4 2 2 4 2 3 2 1 3 3 2%5D" isContainer="True" shape="(509432,)" />
<var name="print_columns" type="function" qualifier="builtins" value="%3Cfunction print_columns at 0x7f8d54ae4700&gt;" isContainer="True" />
<var name="pydev_jupyter_vars" type="module" qualifier="builtins" value="%3Cmodule %27pydev_jupyter_vars%27 from %27/Applications/PyCharm.app/Contents/plugins/python/helpers-pro/jupyter_debug/pydev_jupyter_vars.py%27&gt;" isContainer="True" />
<var name="quit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7f93a6e96910&gt;" isContainer="True" isIPythonHidden="True" />
<var name="regression_results" type="function" qualifier="builtins" value="%3Cfunction regression_results at 0x7f9343f18ee0&gt;" isContainer="True" />
<var name="remove_imported_pydev_package" type="function" qualifier="builtins" value="%3Cfunction remove_imported_pydev_package at 0x7f93a6eef280&gt;" isContainer="True" />
<var name="rf_y_pred" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 4 4 1 2 2 4 3 1 4 1 1 3 4 3 4 1 2 4 2 1 3 3 4 1 3 1 1 4 4%2C 1 1 2 4 4 1 3 1 2 1 1 4 3 3 4 1 4 2 1 1 2 1 4 4 3 1 1 3 3 4 1 1 4 3 4 1 3%2C 1 1 3 3 4 3 3 1 2 2 3 4 1 3 2 2 2 2 4 2 3 2 3 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="rfc" type="RandomForestClassifier" qualifier="sklearn.ensemble._forest" value="RandomForestClassifier%28%29" isContainer="True" shape="100" />
<var name="rmse" type="function" qualifier="builtins" value="%3Cfunction rmse at 0x7f9343f18ca0&gt;" isContainer="True" />
<var name="rmse_score" type="_PredictScorer" qualifier="sklearn.metrics._scorer" value="make_scorer%28rmse%2C greater_is_better=False%29" isContainer="True" />
<var name="sns" type="module" qualifier="builtins" value="%3Cmodule %27seaborn%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/seaborn/__init__.py%27&gt;" isContainer="True" />
<var name="sys" type="module" qualifier="builtins" value="%3Cmodule %27sys%27 %28built-in%29&gt;" isContainer="True" />
<var name="train_test_split" type="function" qualifier="builtins" value="%3Cfunction train_test_split at 0x7f9344c24820&gt;" isContainer="True" />
<var name="tscv" type="TimeSeriesSplit" qualifier="sklearn.model_selection._split" value="TimeSeriesSplit%28gap=0%2C max_train_size=None%2C n_splits=10%2C test_size=None%29" isContainer="True" />
<var name="wandb" type="module" qualifier="builtins" value="%3Cmodule %27wandb%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/wandb/__init__.py%27&gt;" isContainer="True" />
<var name="y" type="ndarray" qualifier="numpy" value="%5B%5B1%5D%2C %5B1%5D%2C %5B1%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B1%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B2%5D%2C %5B4%5D%2C %5B4%5D%2C %5B2%5D%2C %5B1%5D%2C %5B1%5D%2C %5B1%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B3%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B2%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B3%5D%2C %5B3%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B2%5D%2C %5B4%5D%2C %5B4%5D%2C %5B2%5D%2C %5B2%5D%2C %5B4%5D%2C %5B1%5D%2C %5B3%5D%2C %5B2%5D%2C %5B4%5D%2C %5B2%5D%2C %5B4%5D%2C %5B4%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B4%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B2%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B2%5D%2C %5B1%5D%2C %5B4%5D%2C %5B4%5D%2C %5B3%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B2%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B2%5D%2C %5B2%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%5D" isContainer="True" shape="(2547158, 1)" />
<var name="y_pred" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 3 4 1 2 2 4 1 1 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 3 1 1 3 4%2C 1 1 1 4 4 1 3 1 1 2 1 4 2 3 3 1 4 1 1 1 1 1 4 4 3 2 1 2 3 4 1 4 4 3 4 1 2%2C 2 3 3 3 4 3 3 1 2 1 3 4 2 4 1 4 2 2 4 2 3 2 2 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="y_pred_mlp" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 3 4 1 2 2 4 1 1 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 3 1 1 3 4%2C 1 1 1 4 4 1 3 1 1 2 1 4 2 3 3 1 4 1 1 1 1 1 4 4 3 2 1 2 3 4 1 4 4 3 4 1 2%2C 2 3 3 3 4 3 3 1 2 1 3 4 2 4 1 4 2 2 4 2 3 2 2 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="y_test" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="y_train" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(2037726, 1)" />
<var name="y_true" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="y_true_mlp" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
</xml>
<xml><var name="ConfusionMatrixDisplay" type="type" qualifier="builtins" value="%3Cclass %27sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay%27&gt;" isContainer="True" />
<var name="DataFrame" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.frame.DataFrame%27&gt;" isContainer="True" />
<var name="GridSearchCV" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._search.GridSearchCV%27&gt;" isContainer="True" />
<var name="In" type="list" qualifier="builtins" value="%5B%27%27%2C %22def importdata%28%29%3A%5Cn    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%5Cn    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %22%23 event del Index Column%5Cndf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%5Cndf.head%28%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29%22%2C %22%23add classification target%5Cndef f%28row%29%3A%5Cn    if row%5B%27idle_time%27%5D %3C 56%3A%5Cn        val = 1%5Cn    elif row%5B%27idle_time%27%5D %3C 195%3A%5Cn        val = 2%5Cn    elif row%5B%27idle_time%27%5D %3C 488%3A%5Cn        val = 3%5Cn    else%3A%5Cn        val = 4%5Cn    return val%5Cn%5Cndf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29%22%2C %27df..." isContainer="True" shape="42" isIPythonHidden="True" />
<var name="MLPClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.neural_network._multilayer_perceptron.MLPClassifier%27&gt;" isContainer="True" />
<var name="MultiIndex" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.indexes.multi.MultiIndex%27&gt;" isContainer="True" />
<var name="Out" type="dict" qualifier="builtins" value="%7B4%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %0A2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %0A3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %0A4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80   0.0   0.0     12    6       1427           1   %0A1      195  10.80   0.0   0.0     12    6       1427           1   %0A2       81  10.80   0.0   0.0     12    6       1437           1   %0A3       81  10.86   0.0   0.0      1    0          0           1   %0A4      195  10.86   0.0   0.0      1    0          0           0   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                1439         12  %0A2                14..." isContainer="True" shape="6" isIPythonHidden="True" />
<var name="PredictorScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="PredictorScalerFit" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="Predictors" type="list" qualifier="builtins" value="%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C %27hex_enc%27%2C %27start_min%27%2C %27month%27%2C %27day%27%5D" isContainer="True" shape="11" />
<var name="RandomForestClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._forest.RandomForestClassifier%27&gt;" isContainer="True" />
<var name="RandomForestRegressor" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._forest.RandomForestRegressor%27&gt;" isContainer="True" />
<var name="StandardScaler" type="type" qualifier="builtins" value="%3Cclass %27sklearn.preprocessing._data.StandardScaler%27&gt;" isContainer="True" />
<var name="TargetVarScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="TargetVariable" type="list" qualifier="builtins" value="%5B%27idle_time_class%27%5D" isContainer="True" shape="1" />
<var name="TimeSeriesSplit" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._split.TimeSeriesSplit%27&gt;" isContainer="True" />
<var name="X" type="ndarray" qualifier="numpy" value="%5B%5B-3.48291031  0.05221204  0.00831509 ...  1.74586868  1.62198697%2C   1.52004291%5D%2C %5B-3.53864896  0.05221204  0.00831509 ...  1.74586868  1.62198697%2C   1.52004291%5D%2C %5B-1.68963911  0.05525741  0.0933678  ...  1.7676273   1.62198697%2C   1.52004291%5D%2C ...%2C %5B-3.50067524  0.05965731  0.03911388 ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%2C %5B-3.42209597  0.05545353 -0.0107677  ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%2C %5B-3.51129661  0.05743199  0.04654993 ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%5D" isContainer="True" shape="(2547158, 11)" />
<var name="X_test" type="ndarray" qualifier="numpy" value="%5B%5B 1.05071915  0.04889693  0.11413728 ...  0.63617885  0.62918419%2C  -1.0372361 %5D%2C %5B-0.27530614  0.06483141  0.04634295 ...  0.68187196 -0.36361858%2C  -0.01432449%5D%2C %5B 1.05175309  0.04263701  0.08134823 ... -0.14495576 -0.36361858%2C   1.00858711%5D%2C ...%2C %5B-1.69631271  0.05545353 -0.0107677  ...  0.93209614 -0.36361858%2C  -0.52578029%5D%2C %5B 0.73480414  0.05847147  0.11548136 ... -1.35908699  0.29824993%2C  -0.01432449%5D%2C %5B-0.26548373  0.05469059  0.00189398 ... -0.02963505 -0.03268432%2C   0.49713131%5D%5D" isContainer="True" shape="(509432, 11)" />
<var name="X_train" type="ndarray" qualifier="numpy" value="%5B%5B-1.70087144  0.05915032  0.06987419 ... -0.46480754  0.96011845%2C  -0.52578029%5D%2C %5B 0.73973884  0.05925821  0.07617097 ... -0.16889025  0.96011845%2C   1.00858711%5D%2C %5B-1.69678268  0.05520917  0.10957407 ...  0.92339269  1.29105271%2C  -1.5486919 %5D%2C ...%2C %5B 0.74420358  0.05981332  0.10904473 ... -1.35908699 -0.69455284%2C   1.52004291%5D%2C %5B 0.74425057  0.07199308  0.1287628  ... -1.35908699 -0.69455284%2C  -1.0372361 %5D%2C %5B-0.27666906  0.05176837  0.06976643 ...  1.27805826 -0.36361858%2C  -1.0372361 %5D%5D" isContainer="True" shape="(2037726, 11)" />
<var name="_" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7f8d53de0100&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_16" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" isIPythonHidden="True" />
<var name="_33" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7f8d53de0100&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_4" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  %5D %5B0                 821         12  %5D %5B1                1439         12  %5D %5B2                1439  ...%5D" isContainer="True" shape="(5, 16)" isIPythonHidden="True" />
<var name="_6" type="Series" qualifier="pandas.core.series" value="%280.25%2C 56.0%29 %280.5%2C 195.0%29 %280.75%2C 488.0%29" isContainer="True" shape="(3,)" isIPythonHidden="True" />
<var name="_7" type="Series" qualifier="pandas.core.series" value="%280.25%2C 56.0%29 %280.5%2C 195.0%29 %280.75%2C 488.0%29 %281.0%2C 1439.0%29" isContainer="True" shape="(4,)" isIPythonHidden="True" />
<var name="_9" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  idle_time_class  %5D %5B0                 821         12                1  %5D %5B1                1439   ...%5D" isContainer="True" shape="(5, 17)" isIPythonHidden="True" />
<var name="__" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" isIPythonHidden="True" />
<var name="___" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  idle_time_class  %5D %5B0                 821         12                1  %5D %5B1                1439   ...%5D" isContainer="True" shape="(5, 17)" isIPythonHidden="True" />
<var name="__builtin__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtins__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__doc__" type="str" qualifier="builtins" value="Automatically created module for IPython interactive environment" isIPythonHidden="True" />
<var name="__loader__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__name__" type="str" qualifier="builtins" value="__main__" isIPythonHidden="True" />
<var name="__package__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__spec__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="_dh" type="list" qualifier="builtins" value="%5B%27/Users/jonweske/devment/BA_nextbike/scripts%27%5D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_i" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C TargetVariable%29" isIPythonHidden="True" />
<var name="_i1" type="str" qualifier="builtins" value="def importdata%28%29%3A%0A    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%0A    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29" isIPythonHidden="True" />
<var name="_i10" type="str" qualifier="builtins" value="TargetVariable=%5B%27idle_time_class%27%5D%0APredictors=%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C%27hex_enc%27%2C%27start_min%27%2C %27month%27%2C %27day%27%2C%5D" isIPythonHidden="True" />
<var name="_i11" type="str" qualifier="builtins" value="X=df%5BPredictors%5D.values%0Ay=df%5BTargetVariable%5D.values%0A%0A%23%23%23 Sandardization of data %23%23%23%0Afrom sklearn.preprocessing import StandardScaler%0APredictorScaler=StandardScaler%28%29%0ATargetVarScaler=StandardScaler%28%29%0A%0A%23 Storing the fit object for later reference%0APredictorScalerFit=PredictorScaler.fit%28X%29%0A%23TargetVarScalerFit=TargetVarScaler.fit%28y%29%0A%0A%23 Generating the standardized values of X and y%0AX=PredictorScalerFit.transform%28X%29%0A%23y=TargetVarScalerFit.transform%28y%29%0A%0A%0A%23 Split the data into training and testing set%0Afrom sklearn.model_selection import train_test_split%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28X%2C y%2C test_size=0.2%2C random_state=42%29%0A%0A%23 Quick sanity check with the shapes of Training and testing datasets%0Aprint%28X_train.shape%29%0Aprint%28y_train.shape%29%0Aprint%28X_test.shape%29%0Aprint%28y_test.shape%29" isIPythonHidden="True" />
<var name="_i12" type="str" qualifier="builtins" value="from sklearn.neural_network import MLPClassifier%0Aimport matplotlib.pyplot as plt%0Afrom sklearn.metrics import ConfusionMatrixDisplay%0A%0Acls = MLPClassifier%28hidden_layer_sizes=%28100%2C50%2C100%29%2C activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=1%2C early_stopping=True%29%0Acls.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Aexpected_y = y_test%0Apredicted_y = cls.predict%28X_test%29%0A%0Aprint%28cls.score%28X_test%2C y_test%29%29%0A%0Afig = ConfusionMatrixDisplay.from_predictions%28predicted_y%2Cexpected_y%2Ccmap=plt.cm.Blues%29%0Afig.figure_.suptitle%28%22Confusion Matrix%22%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i13" type="str" qualifier="builtins" value="def regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29%0A%0Aregression_results%28expected_y%2C predicted_y%29" isIPythonHidden="True" />
<var name="_i14" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29%0A%0Aregression_results%28expected_y%2C predicted_y%29" isIPythonHidden="True" />
<var name="_i15" type="str" qualifier="builtins" value="from sklearn.ensemble import RandomForestClassifier%0A%0Arfc = RandomForestClassifier%28n_estimators=100%29%0A%0Arfc.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Arf_y_pred = rfc.predict%28X_test%29%0A%0Arfc.score%28X_test%2Cy_test%29%0A%0Afig = ConfusionMatrixDisplay.from_predictions%28rf_y_pred%2Cexpected_y%2Ccmap=plt.cm.Blues%29%0Afig.figure_.suptitle%28%22Confusion Matrix RandomForestClassifier%22%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i16" type="str" qualifier="builtins" value="import pandas as pd%0A%0Afeature_imp = pd.Series%28rfc.feature_importances_%2Cindex=Predictors%29.sort_values%28ascending=False%29%0Afeature_imp" isIPythonHidden="True" />
<var name="_i17" type="str" qualifier="builtins" value="import matplotlib.pyplot as plt%0Aimport seaborn as sns%0A%25matplotlib inline%0A%23 Creating a bar plot%0Asns.barplot%28x=feature_imp%2C y=feature_imp.index%29%0A%23 Add labels to your graph%0Aplt.xlabel%28%27Feature Importance Score%27%29%0Aplt.ylabel%28%27Features%27%29%0Aplt.title%28%22Visualizing Important Features%22%29%0Aplt.legend%28%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i18" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i19" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i2" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0A%0A%23 read CSV%0Adf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29" isIPythonHidden="True" />
<var name="_i20" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i21" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i22" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i23" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i24" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0Afrom sklearn.ensemble import RandomForestRegressor%0Afrom sklearn.model_selection import TimeSeriesSplit%0A%0Amodel = MLPClassifier%28activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=0%2C early_stopping=True%29%0Aparam_search = %7B%0A    %27hidden_layer_sizes%27%3A %5B%2810%2C10%29%2C %2810%2C10%2C10%29%2C %2810%2C10%2C10%2C10%29%2C%0A                           %2850%2C50%29%2C %2850%2C50%2C50%29%2C %2850%2C50%2C50%2C50%29%2C%0A                           %28100%2C100%29%2C %28100%2C100%2C100%29%2C %28100%2C100%2C100%2C100%29%5D%7D%0Atscv = TimeSeriesSplit%28n_splits=10%29%0Agsearch = GridSearchCV%28estimator=model%2C cv=tscv%2C param_grid=param_search%2C scoring = rmse_score%29%0Agsearch.fit%28X_train%2C y_train.ravel%28%29%29%0Abest_score = gsearch.best_score_%0Abest_model = gsearch.best_estimator_" isIPythonHidden="True" />
<var name="_i25" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i26" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i27" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0Afrom sklearn.ensemble import RandomForestRegressor%0Afrom sklearn.model_selection import TimeSeriesSplit%0A%0Amodel = MLPClassifier%28activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=1%2C early_stopping=True%29%0Aparam_search = %7B%0A    %27hidden_layer_sizes%27%3A %5B%2810%2C10%29%2C %2810%2C10%2C10%29%2C %2810%2C10%2C10%2C10%29%2C%0A                           %2850%2C50%29%2C %2850%2C50%2C50%29%2C %2850%2C50%2C50%2C50%29%2C%0A                           %28100%2C100%29%2C %28100%2C100%2C100%29%2C %28100%2C100%2C100%2C100%29%5D%7D%0Atscv = TimeSeriesSplit%28n_splits=10%29%0Agsearch = GridSearchCV%28estimator=model%2C cv=tscv%2C param_grid=param_search%2C scoring = rmse_score%29%0Agsearch.fit%28X_train%2C y_train.ravel%28%29%29%0Abest_score = gsearch.best_score_%0Abest_model = gsearch.best_estimator_" isIPythonHidden="True" />
<var name="_i28" type="str" qualifier="builtins" value="y_true = y_test%0Ay_pred = best_model.predict%28X_test%29%0A%0Aregression_results%28y_true%2C y_pred%29" isIPythonHidden="True" />
<var name="_i29" type="str" qualifier="builtins" value="imp = best_model.feature_importances_%0AX_train = pd.DataFrame%28X_train%2Ccolumns=Predictors%29%0Afeatures = X_train.columns%0Aindices = np.argsort%28imp%29%0Aplt.title%28%27Feature Importances%27%29%0Aplt.barh%28range%28len%28indices%29%29%2C imp%5Bindices%5D%2C color=%27b%27%2C align=%27center%27%29%0Aplt.yticks%28range%28len%28indices%29%29%2C %5Bfeatures%5Bi%5D for i in indices%5D%29%0Aplt.xlabel%28%27Relative Importance%27%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i3" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0A%0A%23 read CSV%0Adf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29" isIPythonHidden="True" />
<var name="_i30" type="str" qualifier="builtins" value="best_model.get%28%29" isIPythonHidden="True" />
<var name="_i31" type="str" qualifier="builtins" value="best_model.__getattribute__%28%29" isIPythonHidden="True" />
<var name="_i32" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_i33" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22visualize-sklearn%22%29" isIPythonHidden="True" />
<var name="_i34" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i35" type="str" qualifier="builtins" value="y_true_mlp = y_test%0Ay_pred_mlp = best_model.predict%28X_test%29%0A%0Aregression_results%28y_true_mlp%2C y_pred_mlp%29" isIPythonHidden="True" />
<var name="_i36" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_i37" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i38" type="str" qualifier="builtins" value="%23 Visualize all classifier plots%0Awandb.sklearn.plot_classifier%28best_model%2C X_train%2C X_test%2C y_train%2C y_test%2C y_pred_mlp%2C Predictors%2Cmodel_name=%27SVC%27%2C feature_names=None%29" isIPythonHidden="True" />
<var name="_i39" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i4" type="str" qualifier="builtins" value="%23 event del Index Column%0Adf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%0Adf.head%28%29" isIPythonHidden="True" />
<var name="_i40" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C TargetVariable%29" isIPythonHidden="True" />
<var name="_i41" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C TargetVariable%29" isIPythonHidden="True" />
<var name="_i5" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29" isIPythonHidden="True" />
<var name="_i6" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%0Adf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29" isIPythonHidden="True" />
<var name="_i7" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%0Adf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29" isIPythonHidden="True" />
<var name="_i8" type="str" qualifier="builtins" value="%23add classification target%0Adef f%28row%29%3A%0A    if row%5B%27idle_time%27%5D %3C 56%3A%0A        val = 1%0A    elif row%5B%27idle_time%27%5D %3C 195%3A%0A        val = 2%0A    elif row%5B%27idle_time%27%5D %3C 488%3A%0A        val = 3%0A    else%3A%0A        val = 4%0A    return val%0A%0Adf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29" isIPythonHidden="True" />
<var name="_i9" type="str" qualifier="builtins" value="df.head%28%29" isIPythonHidden="True" />
<var name="_ih" type="list" qualifier="builtins" value="%5B%27%27%2C %22def importdata%28%29%3A%5Cn    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%5Cn    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %22%23 event del Index Column%5Cndf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%5Cndf.head%28%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29%22%2C %22%23add classification target%5Cndef f%28row%29%3A%5Cn    if row%5B%27idle_time%27%5D %3C 56%3A%5Cn        val = 1%5Cn    elif row%5B%27idle_time%27%5D %3C 195%3A%5Cn        val = 2%5Cn    elif row%5B%27idle_time%27%5D %3C 488%3A%5Cn        val = 3%5Cn    else%3A%5Cn        val = 4%5Cn    return val%5Cn%5Cndf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29%22%2C %27df..." isContainer="True" shape="42" isIPythonHidden="True" />
<var name="_ii" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_iii" type="str" qualifier="builtins" value="%23 Visualize all classifier plots%0Awandb.sklearn.plot_classifier%28best_model%2C X_train%2C X_test%2C y_train%2C y_test%2C y_pred_mlp%2C Predictors%2Cmodel_name=%27SVC%27%2C feature_names=None%29" isIPythonHidden="True" />
<var name="_oh" type="dict" qualifier="builtins" value="%7B4%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %0A2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %0A3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %0A4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80   0.0   0.0     12    6       1427           1   %0A1      195  10.80   0.0   0.0     12    6       1427           1   %0A2       81  10.80   0.0   0.0     12    6       1437           1   %0A3       81  10.86   0.0   0.0      1    0          0           1   %0A4      195  10.86   0.0   0.0      1    0          0           0   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                1439         12  %0A2                14..." isContainer="True" shape="6" isIPythonHidden="True" />
<var name="_pydevd_bundle" type="module" qualifier="builtins" value="%3Cmodule %27_pydevd_bundle%27 from %27/Applications/PyCharm.app/Contents/plugins/python/helpers/pydev/_pydevd_bundle/__init__.py%27&gt;" isContainer="True" />
<var name="best_model" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C hidden_layer_sizes=%2850%2C 50%2C 50%2C 50%29%2C%0A              max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="best_score" type="float64" qualifier="numpy" value="-1.0336816581459078" shape="()" />
<var name="boxplot" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.775x0.755%29" isContainer="True" />
<var name="cls" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C hidden_layer_sizes=%28100%2C 50%2C 100%29%2C%0A              max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="df" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end  %5C %5B0           3694  51.323619  12.335887  1514764029  1514764799   %5D %5B1           2508  51.323619  12.335887  1514764035  1514764799   %5D %5B2          41851  51.332415  12.395158  1514764638  1514764799   %5D %5B3          41851  51.332415  12.395158  1514764800  1514851199   %5D %5B4           3694  51.323619  12.335887  1514764800  1514814103   %5D %5B...          ...        ...        ...         ...         ...   %5D %5B2547153    72243  51.367222  12.369617  1640897552  1640903562   %5D %5B2547154    72058  51.317569  12.382730  1640897593  1640904368   %5D %5B2547155    71949  51.334711  12.356763  1640897835  1640899343   %5D %5B2547156    97785  51.367276  12.369792  1640898086  1640900985   %5D %5B2547157    41738  51.366942  12.370322  1640900918  1640903516   %5D %5B%5D %5B                  hex_id  hex_enc   temp  rain  snow  month  day  start_min  %5C%5D %5B0        881f1a8d91fffff      195  10.80  0.00   0.0     12    6       1427   %5D %5B1        881f1a8d91fffff      195  10.80  0.00   ...%5D" isContainer="True" shape="(2547158, 17)" />
<var name="exit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7f93a6e96910&gt;" isContainer="True" isIPythonHidden="True" />
<var name="expected_y" type="ndarray" qualifier="numpy" value="%5B%5B1%5D%2C %5B4%5D%2C %5B4%5D%2C %5B3%5D%2C %5B4%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B4%5D%2C %5B3%5D%2C %5B1%5D%2C %5B4%5D%2C %5B3%5D%2C %5B4%5D%2C %5B3%5D%2C %5B1%5D%2C %5B4%5D%2C %5B3%5D%2C %5B2%5D%2C %5B3%5D%2C %5B4%5D%2C %5B3%5D%2C %5B4%5D%2C %5B1%5D%2C %5B1%5D%2C %5B3%5D%2C %5B1%5D%2C %5B1%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B4%5D%2C %5B1%5D%2C %5B3%5D%2C %5B1%5D%2C %5B4%5D%2C %5B1%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B4%5D%2C %5B4%5D%2C %5B1%5D%2C %5B3%5D%2C %5B1%5D%2C %5B1%5D%2C %5B3%5D%2C %5B1%5D%2C %5B1%5D%2C %5B2%5D%2C %5B1%5D%2C %5B3%5D%2C %5B2%5D%2C %5B3%5D%2C %5B1%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B3%5D%2C %5B1%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B3%5D%2C %5B4%5D%2C %5B1%5D%2C %5B4%5D%2C %5B4%5D%2C %5B3%5D%2C %5B4%5D%2C %5B1%5D%2C %5B3%5D%2C %5B2%5D%2C %5B3%5D%2C %5B4%5D%2C %5B1%5D%2C %5B3%5D%2C %5B3%5D%2C %5B1%5D%2C %5B1%5D%2C %5B2%5D%2C %5B3%5D%2C %5B1%5D%2C %5B4%5D%2C %5B1%5D%2C %5B3%5D%2C %5B3%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B4%5D%2C %5B1%5D%2C %5B4%5D%2C %5B2%5D%2C %5B1%5D%2C %5B3%5D%2C %5B4%5D%2C %5B2%5D%5D" isContainer="True" shape="(509432, 1)" />
<var name="f" type="function" qualifier="builtins" value="%3Cfunction f at 0x7f9345087f70&gt;" isContainer="True" />
<var name="feature_imp" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" />
<var name="fig" type="ConfusionMatrixDisplay" qualifier="sklearn.metrics._plot.confusion_matrix" value="%3Csklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay object at 0x7f9344523eb0&gt;" isContainer="True" />
<var name="get_ipython" type="method" qualifier="builtins" value="%3Cbound method InteractiveShell.get_ipython of %3Cipykernel.zmqshell.ZMQInteractiveShell object at 0x7f93a6e7d610&gt;&gt;" isContainer="True" isIPythonHidden="True" />
<var name="gsearch" type="GridSearchCV" qualifier="sklearn.model_selection._search" value="GridSearchCV%28cv=TimeSeriesSplit%28gap=0%2C max_train_size=None%2C n_splits=10%2C test_size=None%29%2C%0A             estimator=MLPClassifier%28early_stopping=True%2C max_iter=1000%2C%0A                                     verbose=1%29%2C%0A             param_grid=%7B%27hidden_layer_sizes%27%3A %5B%2810%2C 10%29%2C %2810%2C 10%2C 10%29%2C%0A                                                %2810%2C 10%2C 10%2C 10%29%2C %2850%2C 50%29%2C%0A                                                %2850%2C 50%2C 50%29%2C %2850%2C 50%2C 50%2C 50%29%2C%0A                                                %28100%2C 100%29%2C %28100%2C 100%2C 100%29%2C%0A                                                %28100%2C 100%2C 100%2C 100%29%5D%7D%2C%0A             scoring=make_scorer%28rmse%2C greater_is_better=False%29%29" isContainer="True" />
<var name="importdata" type="function" qualifier="builtins" value="%3Cfunction importdata at 0x7f93a6eef5e0&gt;" isContainer="True" />
<var name="make_scorer" type="function" qualifier="builtins" value="%3Cfunction make_scorer at 0x7f9345aead30&gt;" isContainer="True" />
<var name="metrics" type="module" qualifier="builtins" value="%3Cmodule %27sklearn.metrics%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/sklearn/metrics/__init__.py%27&gt;" isContainer="True" />
<var name="model" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="np" type="module" qualifier="builtins" value="%3Cmodule %27numpy%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/numpy/__init__.py%27&gt;" isContainer="True" />
<var name="param_search" type="dict" qualifier="builtins" value="%7B%27hidden_layer_sizes%27%3A %5B%2810%2C 10%29%2C %2810%2C 10%2C 10%29%2C %2810%2C 10%2C 10%2C 10%29%2C %2850%2C 50%29%2C %2850%2C 50%2C 50%29%2C %2850%2C 50%2C 50%2C 50%29%2C %28100%2C 100%29%2C %28100%2C 100%2C 100%29%2C %28100%2C 100%2C 100%2C 100%29%5D%7D" isContainer="True" shape="1" />
<var name="pd" type="module" qualifier="builtins" value="%3Cmodule %27pandas%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/pandas/__init__.py%27&gt;" isContainer="True" />
<var name="plt" type="module" qualifier="builtins" value="%3Cmodule %27matplotlib.pyplot%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/matplotlib/pyplot.py%27&gt;" isContainer="True" />
<var name="predicted_y" type="ndarray" qualifier="numpy" value="%5B1 2 2 2 4 3 1 3 3 4 1 2 2 4 1 2 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 2 1 1 4 4%2C 1 2 1 4 4 1 3 1 1 1 1 2 2 3 4 1 4 1 1 1 1 3 4 4 3 2 1 3 3 3 1 4 4 3 4 1 2%2C 1 2 3 3 4 3 3 1 3 1 3 4 2 4 3 4 2 2 4 2 3 2 1 3 3 2%5D" isContainer="True" shape="(509432,)" />
<var name="print_columns" type="function" qualifier="builtins" value="%3Cfunction print_columns at 0x7f8d54ae4700&gt;" isContainer="True" />
<var name="pydev_jupyter_vars" type="module" qualifier="builtins" value="%3Cmodule %27pydev_jupyter_vars%27 from %27/Applications/PyCharm.app/Contents/plugins/python/helpers-pro/jupyter_debug/pydev_jupyter_vars.py%27&gt;" isContainer="True" />
<var name="quit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7f93a6e96910&gt;" isContainer="True" isIPythonHidden="True" />
<var name="regression_results" type="function" qualifier="builtins" value="%3Cfunction regression_results at 0x7f9343f18ee0&gt;" isContainer="True" />
<var name="remove_imported_pydev_package" type="function" qualifier="builtins" value="%3Cfunction remove_imported_pydev_package at 0x7f93a6eef280&gt;" isContainer="True" />
<var name="rf_y_pred" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 4 4 1 2 2 4 3 1 4 1 1 3 4 3 4 1 2 4 2 1 3 3 4 1 3 1 1 4 4%2C 1 1 2 4 4 1 3 1 2 1 1 4 3 3 4 1 4 2 1 1 2 1 4 4 3 1 1 3 3 4 1 1 4 3 4 1 3%2C 1 1 3 3 4 3 3 1 2 2 3 4 1 3 2 2 2 2 4 2 3 2 3 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="rfc" type="RandomForestClassifier" qualifier="sklearn.ensemble._forest" value="RandomForestClassifier%28%29" isContainer="True" shape="100" />
<var name="rmse" type="function" qualifier="builtins" value="%3Cfunction rmse at 0x7f9343f18ca0&gt;" isContainer="True" />
<var name="rmse_score" type="_PredictScorer" qualifier="sklearn.metrics._scorer" value="make_scorer%28rmse%2C greater_is_better=False%29" isContainer="True" />
<var name="sns" type="module" qualifier="builtins" value="%3Cmodule %27seaborn%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/seaborn/__init__.py%27&gt;" isContainer="True" />
<var name="sys" type="module" qualifier="builtins" value="%3Cmodule %27sys%27 %28built-in%29&gt;" isContainer="True" />
<var name="train_test_split" type="function" qualifier="builtins" value="%3Cfunction train_test_split at 0x7f9344c24820&gt;" isContainer="True" />
<var name="tscv" type="TimeSeriesSplit" qualifier="sklearn.model_selection._split" value="TimeSeriesSplit%28gap=0%2C max_train_size=None%2C n_splits=10%2C test_size=None%29" isContainer="True" />
<var name="wandb" type="module" qualifier="builtins" value="%3Cmodule %27wandb%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/wandb/__init__.py%27&gt;" isContainer="True" />
<var name="y" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(2547158, 1)" />
<var name="y_pred" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 3 4 1 2 2 4 1 1 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 3 1 1 3 4%2C 1 1 1 4 4 1 3 1 1 2 1 4 2 3 3 1 4 1 1 1 1 1 4 4 3 2 1 2 3 4 1 4 4 3 4 1 2%2C 2 3 3 3 4 3 3 1 2 1 3 4 2 4 1 4 2 2 4 2 3 2 2 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="y_pred_mlp" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 3 4 1 2 2 4 1 1 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 3 1 1 3 4%2C 1 1 1 4 4 1 3 1 1 2 1 4 2 3 3 1 4 1 1 1 1 1 4 4 3 2 1 2 3 4 1 4 4 3 4 1 2%2C 2 3 3 3 4 3 3 1 2 1 3 4 2 4 1 4 2 2 4 2 3 2 2 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="y_test" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="y_train" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(2037726, 1)" />
<var name="y_true" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="y_true_mlp" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
</xml>
<xml><var name="ConfusionMatrixDisplay" type="type" qualifier="builtins" value="%3Cclass %27sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay%27&gt;" isContainer="True" />
<var name="DataFrame" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.frame.DataFrame%27&gt;" isContainer="True" />
<var name="GridSearchCV" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._search.GridSearchCV%27&gt;" isContainer="True" />
<var name="In" type="list" qualifier="builtins" value="%5B%27%27%2C %22def importdata%28%29%3A%5Cn    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%5Cn    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %22%23 event del Index Column%5Cndf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%5Cndf.head%28%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29%22%2C %22%23add classification target%5Cndef f%28row%29%3A%5Cn    if row%5B%27idle_time%27%5D %3C 56%3A%5Cn        val = 1%5Cn    elif row%5B%27idle_time%27%5D %3C 195%3A%5Cn        val = 2%5Cn    elif row%5B%27idle_time%27%5D %3C 488%3A%5Cn        val = 3%5Cn    else%3A%5Cn        val = 4%5Cn    return val%5Cn%5Cndf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29%22%2C %27df..." isContainer="True" shape="43" isIPythonHidden="True" />
<var name="MLPClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.neural_network._multilayer_perceptron.MLPClassifier%27&gt;" isContainer="True" />
<var name="MultiIndex" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.indexes.multi.MultiIndex%27&gt;" isContainer="True" />
<var name="Out" type="dict" qualifier="builtins" value="%7B4%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %0A2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %0A3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %0A4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80   0.0   0.0     12    6       1427           1   %0A1      195  10.80   0.0   0.0     12    6       1427           1   %0A2       81  10.80   0.0   0.0     12    6       1437           1   %0A3       81  10.86   0.0   0.0      1    0          0           1   %0A4      195  10.86   0.0   0.0      1    0          0           0   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                1439         12  %0A2                14..." isContainer="True" shape="6" isIPythonHidden="True" />
<var name="PredictorScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="PredictorScalerFit" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="Predictors" type="list" qualifier="builtins" value="%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C %27hex_enc%27%2C %27start_min%27%2C %27month%27%2C %27day%27%5D" isContainer="True" shape="11" />
<var name="RandomForestClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._forest.RandomForestClassifier%27&gt;" isContainer="True" />
<var name="RandomForestRegressor" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._forest.RandomForestRegressor%27&gt;" isContainer="True" />
<var name="StandardScaler" type="type" qualifier="builtins" value="%3Cclass %27sklearn.preprocessing._data.StandardScaler%27&gt;" isContainer="True" />
<var name="TargetVarScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="TargetVariable" type="list" qualifier="builtins" value="%5B%27idle_time_class%27%5D" isContainer="True" shape="1" />
<var name="TimeSeriesSplit" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._split.TimeSeriesSplit%27&gt;" isContainer="True" />
<var name="X" type="ndarray" qualifier="numpy" value="%5B%5B-3.48291031  0.05221204  0.00831509 ...  1.74586868  1.62198697%2C   1.52004291%5D%2C %5B-3.53864896  0.05221204  0.00831509 ...  1.74586868  1.62198697%2C   1.52004291%5D%2C %5B-1.68963911  0.05525741  0.0933678  ...  1.7676273   1.62198697%2C   1.52004291%5D%2C ...%2C %5B-3.50067524  0.05965731  0.03911388 ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%2C %5B-3.42209597  0.05545353 -0.0107677  ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%2C %5B-3.51129661  0.05743199  0.04654993 ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%5D" isContainer="True" shape="(2547158, 11)" />
<var name="X_test" type="ndarray" qualifier="numpy" value="%5B%5B 1.05071915  0.04889693  0.11413728 ...  0.63617885  0.62918419%2C  -1.0372361 %5D%2C %5B-0.27530614  0.06483141  0.04634295 ...  0.68187196 -0.36361858%2C  -0.01432449%5D%2C %5B 1.05175309  0.04263701  0.08134823 ... -0.14495576 -0.36361858%2C   1.00858711%5D%2C ...%2C %5B-1.69631271  0.05545353 -0.0107677  ...  0.93209614 -0.36361858%2C  -0.52578029%5D%2C %5B 0.73480414  0.05847147  0.11548136 ... -1.35908699  0.29824993%2C  -0.01432449%5D%2C %5B-0.26548373  0.05469059  0.00189398 ... -0.02963505 -0.03268432%2C   0.49713131%5D%5D" isContainer="True" shape="(509432, 11)" />
<var name="X_train" type="ndarray" qualifier="numpy" value="%5B%5B-1.70087144  0.05915032  0.06987419 ... -0.46480754  0.96011845%2C  -0.52578029%5D%2C %5B 0.73973884  0.05925821  0.07617097 ... -0.16889025  0.96011845%2C   1.00858711%5D%2C %5B-1.69678268  0.05520917  0.10957407 ...  0.92339269  1.29105271%2C  -1.5486919 %5D%2C ...%2C %5B 0.74420358  0.05981332  0.10904473 ... -1.35908699 -0.69455284%2C   1.52004291%5D%2C %5B 0.74425057  0.07199308  0.1287628  ... -1.35908699 -0.69455284%2C  -1.0372361 %5D%2C %5B-0.27666906  0.05176837  0.06976643 ...  1.27805826 -0.36361858%2C  -1.0372361 %5D%5D" isContainer="True" shape="(2037726, 11)" />
<var name="_" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7f8d53de0100&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_16" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" isIPythonHidden="True" />
<var name="_33" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7f8d53de0100&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_4" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  %5D %5B0                 821         12  %5D %5B1                1439         12  %5D %5B2                1439  ...%5D" isContainer="True" shape="(5, 16)" isIPythonHidden="True" />
<var name="_6" type="Series" qualifier="pandas.core.series" value="%280.25%2C 56.0%29 %280.5%2C 195.0%29 %280.75%2C 488.0%29" isContainer="True" shape="(3,)" isIPythonHidden="True" />
<var name="_7" type="Series" qualifier="pandas.core.series" value="%280.25%2C 56.0%29 %280.5%2C 195.0%29 %280.75%2C 488.0%29 %281.0%2C 1439.0%29" isContainer="True" shape="(4,)" isIPythonHidden="True" />
<var name="_9" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  idle_time_class  %5D %5B0                 821         12                1  %5D %5B1                1439   ...%5D" isContainer="True" shape="(5, 17)" isIPythonHidden="True" />
<var name="__" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" isIPythonHidden="True" />
<var name="___" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  idle_time_class  %5D %5B0                 821         12                1  %5D %5B1                1439   ...%5D" isContainer="True" shape="(5, 17)" isIPythonHidden="True" />
<var name="__builtin__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtins__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__doc__" type="str" qualifier="builtins" value="Automatically created module for IPython interactive environment" isIPythonHidden="True" />
<var name="__loader__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__name__" type="str" qualifier="builtins" value="__main__" isIPythonHidden="True" />
<var name="__package__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__spec__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="_dh" type="list" qualifier="builtins" value="%5B%27/Users/jonweske/devment/BA_nextbike/scripts%27%5D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_i" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C TargetVariable%29" isIPythonHidden="True" />
<var name="_i1" type="str" qualifier="builtins" value="def importdata%28%29%3A%0A    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%0A    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29" isIPythonHidden="True" />
<var name="_i10" type="str" qualifier="builtins" value="TargetVariable=%5B%27idle_time_class%27%5D%0APredictors=%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C%27hex_enc%27%2C%27start_min%27%2C %27month%27%2C %27day%27%2C%5D" isIPythonHidden="True" />
<var name="_i11" type="str" qualifier="builtins" value="X=df%5BPredictors%5D.values%0Ay=df%5BTargetVariable%5D.values%0A%0A%23%23%23 Sandardization of data %23%23%23%0Afrom sklearn.preprocessing import StandardScaler%0APredictorScaler=StandardScaler%28%29%0ATargetVarScaler=StandardScaler%28%29%0A%0A%23 Storing the fit object for later reference%0APredictorScalerFit=PredictorScaler.fit%28X%29%0A%23TargetVarScalerFit=TargetVarScaler.fit%28y%29%0A%0A%23 Generating the standardized values of X and y%0AX=PredictorScalerFit.transform%28X%29%0A%23y=TargetVarScalerFit.transform%28y%29%0A%0A%0A%23 Split the data into training and testing set%0Afrom sklearn.model_selection import train_test_split%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28X%2C y%2C test_size=0.2%2C random_state=42%29%0A%0A%23 Quick sanity check with the shapes of Training and testing datasets%0Aprint%28X_train.shape%29%0Aprint%28y_train.shape%29%0Aprint%28X_test.shape%29%0Aprint%28y_test.shape%29" isIPythonHidden="True" />
<var name="_i12" type="str" qualifier="builtins" value="from sklearn.neural_network import MLPClassifier%0Aimport matplotlib.pyplot as plt%0Afrom sklearn.metrics import ConfusionMatrixDisplay%0A%0Acls = MLPClassifier%28hidden_layer_sizes=%28100%2C50%2C100%29%2C activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=1%2C early_stopping=True%29%0Acls.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Aexpected_y = y_test%0Apredicted_y = cls.predict%28X_test%29%0A%0Aprint%28cls.score%28X_test%2C y_test%29%29%0A%0Afig = ConfusionMatrixDisplay.from_predictions%28predicted_y%2Cexpected_y%2Ccmap=plt.cm.Blues%29%0Afig.figure_.suptitle%28%22Confusion Matrix%22%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i13" type="str" qualifier="builtins" value="def regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29%0A%0Aregression_results%28expected_y%2C predicted_y%29" isIPythonHidden="True" />
<var name="_i14" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29%0A%0Aregression_results%28expected_y%2C predicted_y%29" isIPythonHidden="True" />
<var name="_i15" type="str" qualifier="builtins" value="from sklearn.ensemble import RandomForestClassifier%0A%0Arfc = RandomForestClassifier%28n_estimators=100%29%0A%0Arfc.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Arf_y_pred = rfc.predict%28X_test%29%0A%0Arfc.score%28X_test%2Cy_test%29%0A%0Afig = ConfusionMatrixDisplay.from_predictions%28rf_y_pred%2Cexpected_y%2Ccmap=plt.cm.Blues%29%0Afig.figure_.suptitle%28%22Confusion Matrix RandomForestClassifier%22%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i16" type="str" qualifier="builtins" value="import pandas as pd%0A%0Afeature_imp = pd.Series%28rfc.feature_importances_%2Cindex=Predictors%29.sort_values%28ascending=False%29%0Afeature_imp" isIPythonHidden="True" />
<var name="_i17" type="str" qualifier="builtins" value="import matplotlib.pyplot as plt%0Aimport seaborn as sns%0A%25matplotlib inline%0A%23 Creating a bar plot%0Asns.barplot%28x=feature_imp%2C y=feature_imp.index%29%0A%23 Add labels to your graph%0Aplt.xlabel%28%27Feature Importance Score%27%29%0Aplt.ylabel%28%27Features%27%29%0Aplt.title%28%22Visualizing Important Features%22%29%0Aplt.legend%28%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i18" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i19" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i2" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0A%0A%23 read CSV%0Adf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29" isIPythonHidden="True" />
<var name="_i20" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i21" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i22" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i23" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i24" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0Afrom sklearn.ensemble import RandomForestRegressor%0Afrom sklearn.model_selection import TimeSeriesSplit%0A%0Amodel = MLPClassifier%28activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=0%2C early_stopping=True%29%0Aparam_search = %7B%0A    %27hidden_layer_sizes%27%3A %5B%2810%2C10%29%2C %2810%2C10%2C10%29%2C %2810%2C10%2C10%2C10%29%2C%0A                           %2850%2C50%29%2C %2850%2C50%2C50%29%2C %2850%2C50%2C50%2C50%29%2C%0A                           %28100%2C100%29%2C %28100%2C100%2C100%29%2C %28100%2C100%2C100%2C100%29%5D%7D%0Atscv = TimeSeriesSplit%28n_splits=10%29%0Agsearch = GridSearchCV%28estimator=model%2C cv=tscv%2C param_grid=param_search%2C scoring = rmse_score%29%0Agsearch.fit%28X_train%2C y_train.ravel%28%29%29%0Abest_score = gsearch.best_score_%0Abest_model = gsearch.best_estimator_" isIPythonHidden="True" />
<var name="_i25" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i26" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i27" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0Afrom sklearn.ensemble import RandomForestRegressor%0Afrom sklearn.model_selection import TimeSeriesSplit%0A%0Amodel = MLPClassifier%28activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=1%2C early_stopping=True%29%0Aparam_search = %7B%0A    %27hidden_layer_sizes%27%3A %5B%2810%2C10%29%2C %2810%2C10%2C10%29%2C %2810%2C10%2C10%2C10%29%2C%0A                           %2850%2C50%29%2C %2850%2C50%2C50%29%2C %2850%2C50%2C50%2C50%29%2C%0A                           %28100%2C100%29%2C %28100%2C100%2C100%29%2C %28100%2C100%2C100%2C100%29%5D%7D%0Atscv = TimeSeriesSplit%28n_splits=10%29%0Agsearch = GridSearchCV%28estimator=model%2C cv=tscv%2C param_grid=param_search%2C scoring = rmse_score%29%0Agsearch.fit%28X_train%2C y_train.ravel%28%29%29%0Abest_score = gsearch.best_score_%0Abest_model = gsearch.best_estimator_" isIPythonHidden="True" />
<var name="_i28" type="str" qualifier="builtins" value="y_true = y_test%0Ay_pred = best_model.predict%28X_test%29%0A%0Aregression_results%28y_true%2C y_pred%29" isIPythonHidden="True" />
<var name="_i29" type="str" qualifier="builtins" value="imp = best_model.feature_importances_%0AX_train = pd.DataFrame%28X_train%2Ccolumns=Predictors%29%0Afeatures = X_train.columns%0Aindices = np.argsort%28imp%29%0Aplt.title%28%27Feature Importances%27%29%0Aplt.barh%28range%28len%28indices%29%29%2C imp%5Bindices%5D%2C color=%27b%27%2C align=%27center%27%29%0Aplt.yticks%28range%28len%28indices%29%29%2C %5Bfeatures%5Bi%5D for i in indices%5D%29%0Aplt.xlabel%28%27Relative Importance%27%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i3" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0A%0A%23 read CSV%0Adf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29" isIPythonHidden="True" />
<var name="_i30" type="str" qualifier="builtins" value="best_model.get%28%29" isIPythonHidden="True" />
<var name="_i31" type="str" qualifier="builtins" value="best_model.__getattribute__%28%29" isIPythonHidden="True" />
<var name="_i32" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_i33" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22visualize-sklearn%22%29" isIPythonHidden="True" />
<var name="_i34" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i35" type="str" qualifier="builtins" value="y_true_mlp = y_test%0Ay_pred_mlp = best_model.predict%28X_test%29%0A%0Aregression_results%28y_true_mlp%2C y_pred_mlp%29" isIPythonHidden="True" />
<var name="_i36" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_i37" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i38" type="str" qualifier="builtins" value="%23 Visualize all classifier plots%0Awandb.sklearn.plot_classifier%28best_model%2C X_train%2C X_test%2C y_train%2C y_test%2C y_pred_mlp%2C Predictors%2Cmodel_name=%27SVC%27%2C feature_names=None%29" isIPythonHidden="True" />
<var name="_i39" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i4" type="str" qualifier="builtins" value="%23 event del Index Column%0Adf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%0Adf.head%28%29" isIPythonHidden="True" />
<var name="_i40" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C TargetVariable%29" isIPythonHidden="True" />
<var name="_i41" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C TargetVariable%29" isIPythonHidden="True" />
<var name="_i42" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C TargetVariable%29" isIPythonHidden="True" />
<var name="_i5" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29" isIPythonHidden="True" />
<var name="_i6" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%0Adf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29" isIPythonHidden="True" />
<var name="_i7" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%0Adf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29" isIPythonHidden="True" />
<var name="_i8" type="str" qualifier="builtins" value="%23add classification target%0Adef f%28row%29%3A%0A    if row%5B%27idle_time%27%5D %3C 56%3A%0A        val = 1%0A    elif row%5B%27idle_time%27%5D %3C 195%3A%0A        val = 2%0A    elif row%5B%27idle_time%27%5D %3C 488%3A%0A        val = 3%0A    else%3A%0A        val = 4%0A    return val%0A%0Adf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29" isIPythonHidden="True" />
<var name="_i9" type="str" qualifier="builtins" value="df.head%28%29" isIPythonHidden="True" />
<var name="_ih" type="list" qualifier="builtins" value="%5B%27%27%2C %22def importdata%28%29%3A%5Cn    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%5Cn    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %22%23 event del Index Column%5Cndf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%5Cndf.head%28%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29%22%2C %22%23add classification target%5Cndef f%28row%29%3A%5Cn    if row%5B%27idle_time%27%5D %3C 56%3A%5Cn        val = 1%5Cn    elif row%5B%27idle_time%27%5D %3C 195%3A%5Cn        val = 2%5Cn    elif row%5B%27idle_time%27%5D %3C 488%3A%5Cn        val = 3%5Cn    else%3A%5Cn        val = 4%5Cn    return val%5Cn%5Cndf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29%22%2C %27df..." isContainer="True" shape="43" isIPythonHidden="True" />
<var name="_ii" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C TargetVariable%29" isIPythonHidden="True" />
<var name="_iii" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_oh" type="dict" qualifier="builtins" value="%7B4%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %0A2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %0A3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %0A4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80   0.0   0.0     12    6       1427           1   %0A1      195  10.80   0.0   0.0     12    6       1427           1   %0A2       81  10.80   0.0   0.0     12    6       1437           1   %0A3       81  10.86   0.0   0.0      1    0          0           1   %0A4      195  10.86   0.0   0.0      1    0          0           0   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                1439         12  %0A2                14..." isContainer="True" shape="6" isIPythonHidden="True" />
<var name="_pydevd_bundle" type="module" qualifier="builtins" value="%3Cmodule %27_pydevd_bundle%27 from %27/Applications/PyCharm.app/Contents/plugins/python/helpers/pydev/_pydevd_bundle/__init__.py%27&gt;" isContainer="True" />
<var name="best_model" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C hidden_layer_sizes=%2850%2C 50%2C 50%2C 50%29%2C%0A              max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="best_score" type="float64" qualifier="numpy" value="-1.0336816581459078" shape="()" />
<var name="boxplot" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.775x0.755%29" isContainer="True" />
<var name="cls" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C hidden_layer_sizes=%28100%2C 50%2C 100%29%2C%0A              max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="df" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end  %5C %5B0           3694  51.323619  12.335887  1514764029  1514764799   %5D %5B1           2508  51.323619  12.335887  1514764035  1514764799   %5D %5B2          41851  51.332415  12.395158  1514764638  1514764799   %5D %5B3          41851  51.332415  12.395158  1514764800  1514851199   %5D %5B4           3694  51.323619  12.335887  1514764800  1514814103   %5D %5B...          ...        ...        ...         ...         ...   %5D %5B2547153    72243  51.367222  12.369617  1640897552  1640903562   %5D %5B2547154    72058  51.317569  12.382730  1640897593  1640904368   %5D %5B2547155    71949  51.334711  12.356763  1640897835  1640899343   %5D %5B2547156    97785  51.367276  12.369792  1640898086  1640900985   %5D %5B2547157    41738  51.366942  12.370322  1640900918  1640903516   %5D %5B%5D %5B                  hex_id  hex_enc   temp  rain  snow  month  day  start_min  %5C%5D %5B0        881f1a8d91fffff      195  10.80  0.00   0.0     12    6       1427   %5D %5B1        881f1a8d91fffff      195  10.80  0.00   ...%5D" isContainer="True" shape="(2547158, 17)" />
<var name="exit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7f93a6e96910&gt;" isContainer="True" isIPythonHidden="True" />
<var name="expected_y" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="f" type="function" qualifier="builtins" value="%3Cfunction f at 0x7f9345087f70&gt;" isContainer="True" />
<var name="feature_imp" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" />
<var name="fig" type="ConfusionMatrixDisplay" qualifier="sklearn.metrics._plot.confusion_matrix" value="%3Csklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay object at 0x7f9344523eb0&gt;" isContainer="True" />
<var name="get_ipython" type="method" qualifier="builtins" value="%3Cbound method InteractiveShell.get_ipython of %3Cipykernel.zmqshell.ZMQInteractiveShell object at 0x7f93a6e7d610&gt;&gt;" isContainer="True" isIPythonHidden="True" />
<var name="gsearch" type="GridSearchCV" qualifier="sklearn.model_selection._search" value="GridSearchCV%28cv=TimeSeriesSplit%28gap=0%2C max_train_size=None%2C n_splits=10%2C test_size=None%29%2C%0A             estimator=MLPClassifier%28early_stopping=True%2C max_iter=1000%2C%0A                                     verbose=1%29%2C%0A             param_grid=%7B%27hidden_layer_sizes%27%3A %5B%2810%2C 10%29%2C %2810%2C 10%2C 10%29%2C%0A                                                %2810%2C 10%2C 10%2C 10%29%2C %2850%2C 50%29%2C%0A                                                %2850%2C 50%2C 50%29%2C %2850%2C 50%2C 50%2C 50%29%2C%0A                                                %28100%2C 100%29%2C %28100%2C 100%2C 100%29%2C%0A                                                %28100%2C 100%2C 100%2C 100%29%5D%7D%2C%0A             scoring=make_scorer%28rmse%2C greater_is_better=False%29%29" isContainer="True" />
<var name="importdata" type="function" qualifier="builtins" value="%3Cfunction importdata at 0x7f93a6eef5e0&gt;" isContainer="True" />
<var name="make_scorer" type="function" qualifier="builtins" value="%3Cfunction make_scorer at 0x7f9345aead30&gt;" isContainer="True" />
<var name="metrics" type="module" qualifier="builtins" value="%3Cmodule %27sklearn.metrics%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/sklearn/metrics/__init__.py%27&gt;" isContainer="True" />
<var name="model" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="np" type="module" qualifier="builtins" value="%3Cmodule %27numpy%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/numpy/__init__.py%27&gt;" isContainer="True" />
<var name="param_search" type="dict" qualifier="builtins" value="%7B%27hidden_layer_sizes%27%3A %5B%2810%2C 10%29%2C %2810%2C 10%2C 10%29%2C %2810%2C 10%2C 10%2C 10%29%2C %2850%2C 50%29%2C %2850%2C 50%2C 50%29%2C %2850%2C 50%2C 50%2C 50%29%2C %28100%2C 100%29%2C %28100%2C 100%2C 100%29%2C %28100%2C 100%2C 100%2C 100%29%5D%7D" isContainer="True" shape="1" />
<var name="pd" type="module" qualifier="builtins" value="%3Cmodule %27pandas%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/pandas/__init__.py%27&gt;" isContainer="True" />
<var name="plt" type="module" qualifier="builtins" value="%3Cmodule %27matplotlib.pyplot%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/matplotlib/pyplot.py%27&gt;" isContainer="True" />
<var name="predicted_y" type="ndarray" qualifier="numpy" value="%5B1 2 2 2 4 3 1 3 3 4 1 2 2 4 1 2 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 2 1 1 4 4%2C 1 2 1 4 4 1 3 1 1 1 1 2 2 3 4 1 4 1 1 1 1 3 4 4 3 2 1 3 3 3 1 4 4 3 4 1 2%2C 1 2 3 3 4 3 3 1 3 1 3 4 2 4 3 4 2 2 4 2 3 2 1 3 3 2%5D" isContainer="True" shape="(509432,)" />
<var name="print_columns" type="function" qualifier="builtins" value="%3Cfunction print_columns at 0x7f8d54ae4700&gt;" isContainer="True" />
<var name="pydev_jupyter_vars" type="module" qualifier="builtins" value="%3Cmodule %27pydev_jupyter_vars%27 from %27/Applications/PyCharm.app/Contents/plugins/python/helpers-pro/jupyter_debug/pydev_jupyter_vars.py%27&gt;" isContainer="True" />
<var name="quit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7f93a6e96910&gt;" isContainer="True" isIPythonHidden="True" />
<var name="regression_results" type="function" qualifier="builtins" value="%3Cfunction regression_results at 0x7f9343f18ee0&gt;" isContainer="True" />
<var name="remove_imported_pydev_package" type="function" qualifier="builtins" value="%3Cfunction remove_imported_pydev_package at 0x7f93a6eef280&gt;" isContainer="True" />
<var name="rf_y_pred" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 4 4 1 2 2 4 3 1 4 1 1 3 4 3 4 1 2 4 2 1 3 3 4 1 3 1 1 4 4%2C 1 1 2 4 4 1 3 1 2 1 1 4 3 3 4 1 4 2 1 1 2 1 4 4 3 1 1 3 3 4 1 1 4 3 4 1 3%2C 1 1 3 3 4 3 3 1 2 2 3 4 1 3 2 2 2 2 4 2 3 2 3 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="rfc" type="RandomForestClassifier" qualifier="sklearn.ensemble._forest" value="RandomForestClassifier%28%29" isContainer="True" shape="100" />
<var name="rmse" type="function" qualifier="builtins" value="%3Cfunction rmse at 0x7f9343f18ca0&gt;" isContainer="True" />
<var name="rmse_score" type="_PredictScorer" qualifier="sklearn.metrics._scorer" value="make_scorer%28rmse%2C greater_is_better=False%29" isContainer="True" />
<var name="sns" type="module" qualifier="builtins" value="%3Cmodule %27seaborn%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/seaborn/__init__.py%27&gt;" isContainer="True" />
<var name="sys" type="module" qualifier="builtins" value="%3Cmodule %27sys%27 %28built-in%29&gt;" isContainer="True" />
<var name="train_test_split" type="function" qualifier="builtins" value="%3Cfunction train_test_split at 0x7f9344c24820&gt;" isContainer="True" />
<var name="tscv" type="TimeSeriesSplit" qualifier="sklearn.model_selection._split" value="TimeSeriesSplit%28gap=0%2C max_train_size=None%2C n_splits=10%2C test_size=None%29" isContainer="True" />
<var name="wandb" type="module" qualifier="builtins" value="%3Cmodule %27wandb%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/wandb/__init__.py%27&gt;" isContainer="True" />
<var name="y" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(2547158, 1)" />
<var name="y_pred" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 3 4 1 2 2 4 1 1 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 3 1 1 3 4%2C 1 1 1 4 4 1 3 1 1 2 1 4 2 3 3 1 4 1 1 1 1 1 4 4 3 2 1 2 3 4 1 4 4 3 4 1 2%2C 2 3 3 3 4 3 3 1 2 1 3 4 2 4 1 4 2 2 4 2 3 2 2 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="y_pred_mlp" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 3 4 1 2 2 4 1 1 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 3 1 1 3 4%2C 1 1 1 4 4 1 3 1 1 2 1 4 2 3 3 1 4 1 1 1 1 1 4 4 3 2 1 2 3 4 1 4 4 3 4 1 2%2C 2 3 3 3 4 3 3 1 2 1 3 4 2 4 1 4 2 2 4 2 3 2 2 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="y_test" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="y_train" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(2037726, 1)" />
<var name="y_true" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="y_true_mlp" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
</xml>
<xml><var name="ConfusionMatrixDisplay" type="type" qualifier="builtins" value="%3Cclass %27sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay%27&gt;" isContainer="True" />
<var name="DataFrame" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.frame.DataFrame%27&gt;" isContainer="True" />
<var name="GridSearchCV" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._search.GridSearchCV%27&gt;" isContainer="True" />
<var name="In" type="list" qualifier="builtins" value="%5B%27%27%2C %22def importdata%28%29%3A%5Cn    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%5Cn    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %22%23 event del Index Column%5Cndf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%5Cndf.head%28%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29%22%2C %22%23add classification target%5Cndef f%28row%29%3A%5Cn    if row%5B%27idle_time%27%5D %3C 56%3A%5Cn        val = 1%5Cn    elif row%5B%27idle_time%27%5D %3C 195%3A%5Cn        val = 2%5Cn    elif row%5B%27idle_time%27%5D %3C 488%3A%5Cn        val = 3%5Cn    else%3A%5Cn        val = 4%5Cn    return val%5Cn%5Cndf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29%22%2C %27df..." isContainer="True" shape="44" isIPythonHidden="True" />
<var name="MLPClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.neural_network._multilayer_perceptron.MLPClassifier%27&gt;" isContainer="True" />
<var name="MultiIndex" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.indexes.multi.MultiIndex%27&gt;" isContainer="True" />
<var name="Out" type="dict" qualifier="builtins" value="%7B4%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %0A2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %0A3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %0A4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80   0.0   0.0     12    6       1427           1   %0A1      195  10.80   0.0   0.0     12    6       1427           1   %0A2       81  10.80   0.0   0.0     12    6       1437           1   %0A3       81  10.86   0.0   0.0      1    0          0           1   %0A4      195  10.86   0.0   0.0      1    0          0           0   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                1439         12  %0A2                14..." isContainer="True" shape="6" isIPythonHidden="True" />
<var name="PredictorScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="PredictorScalerFit" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="Predictors" type="list" qualifier="builtins" value="%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C %27hex_enc%27%2C %27start_min%27%2C %27month%27%2C %27day%27%5D" isContainer="True" shape="11" />
<var name="RandomForestClassifier" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._forest.RandomForestClassifier%27&gt;" isContainer="True" />
<var name="RandomForestRegressor" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._forest.RandomForestRegressor%27&gt;" isContainer="True" />
<var name="StandardScaler" type="type" qualifier="builtins" value="%3Cclass %27sklearn.preprocessing._data.StandardScaler%27&gt;" isContainer="True" />
<var name="TargetVarScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="TargetVariable" type="list" qualifier="builtins" value="%5B%27idle_time_class%27%5D" isContainer="True" shape="1" />
<var name="TimeSeriesSplit" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.model_selection._split.TimeSeriesSplit%27&gt;" isContainer="True" />
<var name="X" type="ndarray" qualifier="numpy" value="%5B%5B-3.48291031  0.05221204  0.00831509 ...  1.74586868  1.62198697%2C   1.52004291%5D%2C %5B-3.53864896  0.05221204  0.00831509 ...  1.74586868  1.62198697%2C   1.52004291%5D%2C %5B-1.68963911  0.05525741  0.0933678  ...  1.7676273   1.62198697%2C   1.52004291%5D%2C ...%2C %5B-3.50067524  0.05965731  0.03911388 ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%2C %5B-3.42209597  0.05545353 -0.0107677  ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%2C %5B-3.51129661  0.05743199  0.04654993 ... -1.35908699 -2.01828988%2C  -1.0372361 %5D%5D" isContainer="True" shape="(2547158, 11)" />
<var name="X_test" type="ndarray" qualifier="numpy" value="%5B%5B 1.05071915  0.04889693  0.11413728 ...  0.63617885  0.62918419%2C  -1.0372361 %5D%2C %5B-0.27530614  0.06483141  0.04634295 ...  0.68187196 -0.36361858%2C  -0.01432449%5D%2C %5B 1.05175309  0.04263701  0.08134823 ... -0.14495576 -0.36361858%2C   1.00858711%5D%2C ...%2C %5B-1.69631271  0.05545353 -0.0107677  ...  0.93209614 -0.36361858%2C  -0.52578029%5D%2C %5B 0.73480414  0.05847147  0.11548136 ... -1.35908699  0.29824993%2C  -0.01432449%5D%2C %5B-0.26548373  0.05469059  0.00189398 ... -0.02963505 -0.03268432%2C   0.49713131%5D%5D" isContainer="True" shape="(509432, 11)" />
<var name="X_train" type="ndarray" qualifier="numpy" value="%5B%5B-1.70087144  0.05915032  0.06987419 ... -0.46480754  0.96011845%2C  -0.52578029%5D%2C %5B 0.73973884  0.05925821  0.07617097 ... -0.16889025  0.96011845%2C   1.00858711%5D%2C %5B-1.69678268  0.05520917  0.10957407 ...  0.92339269  1.29105271%2C  -1.5486919 %5D%2C ...%2C %5B 0.74420358  0.05981332  0.10904473 ... -1.35908699 -0.69455284%2C   1.52004291%5D%2C %5B 0.74425057  0.07199308  0.1287628  ... -1.35908699 -0.69455284%2C  -1.0372361 %5D%2C %5B-0.27666906  0.05176837  0.06976643 ...  1.27805826 -0.36361858%2C  -1.0372361 %5D%5D" isContainer="True" shape="(2037726, 11)" />
<var name="_" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7f8d53de0100&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_16" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" isIPythonHidden="True" />
<var name="_33" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7f8d53de0100&gt;" isContainer="True" isIPythonHidden="True" />
<var name="_4" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  %5D %5B0                 821         12  %5D %5B1                1439         12  %5D %5B2                1439  ...%5D" isContainer="True" shape="(5, 16)" isIPythonHidden="True" />
<var name="_6" type="Series" qualifier="pandas.core.series" value="%280.25%2C 56.0%29 %280.5%2C 195.0%29 %280.75%2C 488.0%29" isContainer="True" shape="(3,)" isIPythonHidden="True" />
<var name="_7" type="Series" qualifier="pandas.core.series" value="%280.25%2C 56.0%29 %280.5%2C 195.0%29 %280.75%2C 488.0%29 %281.0%2C 1439.0%29" isContainer="True" shape="(4,)" isIPythonHidden="True" />
<var name="_9" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  idle_time_class  %5D %5B0                 821         12                1  %5D %5B1                1439   ...%5D" isContainer="True" shape="(5, 17)" isIPythonHidden="True" />
<var name="__" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" isIPythonHidden="True" />
<var name="___" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %5D %5B2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %5D %5B3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %5D %5B4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B1      195  10.80   0.0   0.0     12    6       1427           1   %5D %5B2       81  10.80   0.0   0.0     12    6       1437           1   %5D %5B3       81  10.86   0.0   0.0      1    0          0           1   %5D %5B4      195  10.86   0.0   0.0      1    0          0           0   %5D %5B%5D %5B   idle_time_next_day  idle_time  idle_time_class  %5D %5B0                 821         12                1  %5D %5B1                1439   ...%5D" isContainer="True" shape="(5, 17)" isIPythonHidden="True" />
<var name="__builtin__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtins__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__doc__" type="str" qualifier="builtins" value="Automatically created module for IPython interactive environment" isIPythonHidden="True" />
<var name="__loader__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__name__" type="str" qualifier="builtins" value="__main__" isIPythonHidden="True" />
<var name="__package__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__spec__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="_dh" type="list" qualifier="builtins" value="%5B%27/Users/jonweske/devment/BA_nextbike/scripts%27%5D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_i" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C TargetVariable%29" isIPythonHidden="True" />
<var name="_i1" type="str" qualifier="builtins" value="def importdata%28%29%3A%0A    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%0A    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29" isIPythonHidden="True" />
<var name="_i10" type="str" qualifier="builtins" value="TargetVariable=%5B%27idle_time_class%27%5D%0APredictors=%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C%27hex_enc%27%2C%27start_min%27%2C %27month%27%2C %27day%27%2C%5D" isIPythonHidden="True" />
<var name="_i11" type="str" qualifier="builtins" value="X=df%5BPredictors%5D.values%0Ay=df%5BTargetVariable%5D.values%0A%0A%23%23%23 Sandardization of data %23%23%23%0Afrom sklearn.preprocessing import StandardScaler%0APredictorScaler=StandardScaler%28%29%0ATargetVarScaler=StandardScaler%28%29%0A%0A%23 Storing the fit object for later reference%0APredictorScalerFit=PredictorScaler.fit%28X%29%0A%23TargetVarScalerFit=TargetVarScaler.fit%28y%29%0A%0A%23 Generating the standardized values of X and y%0AX=PredictorScalerFit.transform%28X%29%0A%23y=TargetVarScalerFit.transform%28y%29%0A%0A%0A%23 Split the data into training and testing set%0Afrom sklearn.model_selection import train_test_split%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28X%2C y%2C test_size=0.2%2C random_state=42%29%0A%0A%23 Quick sanity check with the shapes of Training and testing datasets%0Aprint%28X_train.shape%29%0Aprint%28y_train.shape%29%0Aprint%28X_test.shape%29%0Aprint%28y_test.shape%29" isIPythonHidden="True" />
<var name="_i12" type="str" qualifier="builtins" value="from sklearn.neural_network import MLPClassifier%0Aimport matplotlib.pyplot as plt%0Afrom sklearn.metrics import ConfusionMatrixDisplay%0A%0Acls = MLPClassifier%28hidden_layer_sizes=%28100%2C50%2C100%29%2C activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=1%2C early_stopping=True%29%0Acls.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Aexpected_y = y_test%0Apredicted_y = cls.predict%28X_test%29%0A%0Aprint%28cls.score%28X_test%2C y_test%29%29%0A%0Afig = ConfusionMatrixDisplay.from_predictions%28predicted_y%2Cexpected_y%2Ccmap=plt.cm.Blues%29%0Afig.figure_.suptitle%28%22Confusion Matrix%22%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i13" type="str" qualifier="builtins" value="def regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29%0A%0Aregression_results%28expected_y%2C predicted_y%29" isIPythonHidden="True" />
<var name="_i14" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29%0A%0Aregression_results%28expected_y%2C predicted_y%29" isIPythonHidden="True" />
<var name="_i15" type="str" qualifier="builtins" value="from sklearn.ensemble import RandomForestClassifier%0A%0Arfc = RandomForestClassifier%28n_estimators=100%29%0A%0Arfc.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Arf_y_pred = rfc.predict%28X_test%29%0A%0Arfc.score%28X_test%2Cy_test%29%0A%0Afig = ConfusionMatrixDisplay.from_predictions%28rf_y_pred%2Cexpected_y%2Ccmap=plt.cm.Blues%29%0Afig.figure_.suptitle%28%22Confusion Matrix RandomForestClassifier%22%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i16" type="str" qualifier="builtins" value="import pandas as pd%0A%0Afeature_imp = pd.Series%28rfc.feature_importances_%2Cindex=Predictors%29.sort_values%28ascending=False%29%0Afeature_imp" isIPythonHidden="True" />
<var name="_i17" type="str" qualifier="builtins" value="import matplotlib.pyplot as plt%0Aimport seaborn as sns%0A%25matplotlib inline%0A%23 Creating a bar plot%0Asns.barplot%28x=feature_imp%2C y=feature_imp.index%29%0A%23 Add labels to your graph%0Aplt.xlabel%28%27Feature Importance Score%27%29%0Aplt.ylabel%28%27Features%27%29%0Aplt.title%28%22Visualizing Important Features%22%29%0Aplt.legend%28%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i18" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i19" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i2" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0A%0A%23 read CSV%0Adf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29" isIPythonHidden="True" />
<var name="_i20" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i21" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i22" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i23" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i24" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0Afrom sklearn.ensemble import RandomForestRegressor%0Afrom sklearn.model_selection import TimeSeriesSplit%0A%0Amodel = MLPClassifier%28activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=0%2C early_stopping=True%29%0Aparam_search = %7B%0A    %27hidden_layer_sizes%27%3A %5B%2810%2C10%29%2C %2810%2C10%2C10%29%2C %2810%2C10%2C10%2C10%29%2C%0A                           %2850%2C50%29%2C %2850%2C50%2C50%29%2C %2850%2C50%2C50%2C50%29%2C%0A                           %28100%2C100%29%2C %28100%2C100%2C100%29%2C %28100%2C100%2C100%2C100%29%5D%7D%0Atscv = TimeSeriesSplit%28n_splits=10%29%0Agsearch = GridSearchCV%28estimator=model%2C cv=tscv%2C param_grid=param_search%2C scoring = rmse_score%29%0Agsearch.fit%28X_train%2C y_train.ravel%28%29%29%0Abest_score = gsearch.best_score_%0Abest_model = gsearch.best_estimator_" isIPythonHidden="True" />
<var name="_i25" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i26" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i27" type="str" qualifier="builtins" value="from sklearn.model_selection import GridSearchCV%0Afrom sklearn.ensemble import RandomForestRegressor%0Afrom sklearn.model_selection import TimeSeriesSplit%0A%0Amodel = MLPClassifier%28activation=%27relu%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=1%2C early_stopping=True%29%0Aparam_search = %7B%0A    %27hidden_layer_sizes%27%3A %5B%2810%2C10%29%2C %2810%2C10%2C10%29%2C %2810%2C10%2C10%2C10%29%2C%0A                           %2850%2C50%29%2C %2850%2C50%2C50%29%2C %2850%2C50%2C50%2C50%29%2C%0A                           %28100%2C100%29%2C %28100%2C100%2C100%29%2C %28100%2C100%2C100%2C100%29%5D%7D%0Atscv = TimeSeriesSplit%28n_splits=10%29%0Agsearch = GridSearchCV%28estimator=model%2C cv=tscv%2C param_grid=param_search%2C scoring = rmse_score%29%0Agsearch.fit%28X_train%2C y_train.ravel%28%29%29%0Abest_score = gsearch.best_score_%0Abest_model = gsearch.best_estimator_" isIPythonHidden="True" />
<var name="_i28" type="str" qualifier="builtins" value="y_true = y_test%0Ay_pred = best_model.predict%28X_test%29%0A%0Aregression_results%28y_true%2C y_pred%29" isIPythonHidden="True" />
<var name="_i29" type="str" qualifier="builtins" value="imp = best_model.feature_importances_%0AX_train = pd.DataFrame%28X_train%2Ccolumns=Predictors%29%0Afeatures = X_train.columns%0Aindices = np.argsort%28imp%29%0Aplt.title%28%27Feature Importances%27%29%0Aplt.barh%28range%28len%28indices%29%29%2C imp%5Bindices%5D%2C color=%27b%27%2C align=%27center%27%29%0Aplt.yticks%28range%28len%28indices%29%29%2C %5Bfeatures%5Bi%5D for i in indices%5D%29%0Aplt.xlabel%28%27Relative Importance%27%29%0Aplt.show%28%29" isIPythonHidden="True" />
<var name="_i3" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0A%0A%23 read CSV%0Adf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29" isIPythonHidden="True" />
<var name="_i30" type="str" qualifier="builtins" value="best_model.get%28%29" isIPythonHidden="True" />
<var name="_i31" type="str" qualifier="builtins" value="best_model.__getattribute__%28%29" isIPythonHidden="True" />
<var name="_i32" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_i33" type="str" qualifier="builtins" value="import wandb%0Awandb.init%28project=%22visualize-sklearn%22%29" isIPythonHidden="True" />
<var name="_i34" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i35" type="str" qualifier="builtins" value="y_true_mlp = y_test%0Ay_pred_mlp = best_model.predict%28X_test%29%0A%0Aregression_results%28y_true_mlp%2C y_pred_mlp%29" isIPythonHidden="True" />
<var name="_i36" type="str" qualifier="builtins" value="print%28best_model%29" isIPythonHidden="True" />
<var name="_i37" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i38" type="str" qualifier="builtins" value="%23 Visualize all classifier plots%0Awandb.sklearn.plot_classifier%28best_model%2C X_train%2C X_test%2C y_train%2C y_test%2C y_pred_mlp%2C Predictors%2Cmodel_name=%27SVC%27%2C feature_names=None%29" isIPythonHidden="True" />
<var name="_i39" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C Predictors%29" isIPythonHidden="True" />
<var name="_i4" type="str" qualifier="builtins" value="%23 event del Index Column%0Adf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%0Adf.head%28%29" isIPythonHidden="True" />
<var name="_i40" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C TargetVariable%29" isIPythonHidden="True" />
<var name="_i41" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C TargetVariable%29" isIPythonHidden="True" />
<var name="_i42" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C TargetVariable%29" isIPythonHidden="True" />
<var name="_i43" type="str" qualifier="builtins" value="wandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C TargetVariable%29" isIPythonHidden="True" />
<var name="_i5" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29" isIPythonHidden="True" />
<var name="_i6" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%0Adf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29" isIPythonHidden="True" />
<var name="_i7" type="str" qualifier="builtins" value="boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%0Adf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29" isIPythonHidden="True" />
<var name="_i8" type="str" qualifier="builtins" value="%23add classification target%0Adef f%28row%29%3A%0A    if row%5B%27idle_time%27%5D %3C 56%3A%0A        val = 1%0A    elif row%5B%27idle_time%27%5D %3C 195%3A%0A        val = 2%0A    elif row%5B%27idle_time%27%5D %3C 488%3A%0A        val = 3%0A    else%3A%0A        val = 4%0A    return val%0A%0Adf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29" isIPythonHidden="True" />
<var name="_i9" type="str" qualifier="builtins" value="df.head%28%29" isIPythonHidden="True" />
<var name="_ih" type="list" qualifier="builtins" value="%5B%27%27%2C %22def importdata%28%29%3A%5Cn    dataframe = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%5Cn    return dataframe.sort_values%28by=%5B%27dt_start%27%5D%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points_18_21_v1_new_features.csv%27%29%22%2C %22import pandas as pd%5Cnimport numpy as np%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %22%23 event del Index Column%5Cndf = df.sort_values%28by=%27dt_start%27%2C ignore_index=True%29%5Cndf.head%28%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%5D%29%22%2C %22boxplot = df.boxplot%28column=%5B%27idle_time%27%5D%29%5Cndf%5B%27idle_time%27%5D.quantile%28%5B.25%2C .5%2C.75%2C1%5D%29%22%2C %22%23add classification target%5Cndef f%28row%29%3A%5Cn    if row%5B%27idle_time%27%5D %3C 56%3A%5Cn        val = 1%5Cn    elif row%5B%27idle_time%27%5D %3C 195%3A%5Cn        val = 2%5Cn    elif row%5B%27idle_time%27%5D %3C 488%3A%5Cn        val = 3%5Cn    else%3A%5Cn        val = 4%5Cn    return val%5Cn%5Cndf%5B%27idle_time_class%27%5D = df.apply%28f%2C axis=1%29%22%2C %27df..." isContainer="True" shape="44" isIPythonHidden="True" />
<var name="_ii" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C TargetVariable%29" isIPythonHidden="True" />
<var name="_iii" type="str" qualifier="builtins" value="%23 Visualize single plot%0Awandb.sklearn.plot_confusion_matrix%28y_true_mlp%2C y_pred_mlp%2C TargetVariable%29" isIPythonHidden="True" />
<var name="_oh" type="dict" qualifier="builtins" value="%7B4%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     2508  51.323619  12.335887  1514764035  1514764799  881f1a8d91fffff   %0A2    41851  51.332415  12.395158  1514764638  1514764799  881f1a1659fffff   %0A3    41851  51.332415  12.395158  1514764800  1514851199  881f1a1659fffff   %0A4     3694  51.323619  12.335887  1514764800  1514814103  881f1a8d91fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80   0.0   0.0     12    6       1427           1   %0A1      195  10.80   0.0   0.0     12    6       1427           1   %0A2       81  10.80   0.0   0.0     12    6       1437           1   %0A3       81  10.86   0.0   0.0      1    0          0           1   %0A4      195  10.86   0.0   0.0      1    0          0           0   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                1439         12  %0A2                14..." isContainer="True" shape="6" isIPythonHidden="True" />
<var name="_pydevd_bundle" type="module" qualifier="builtins" value="%3Cmodule %27_pydevd_bundle%27 from %27/Applications/PyCharm.app/Contents/plugins/python/helpers/pydev/_pydevd_bundle/__init__.py%27&gt;" isContainer="True" />
<var name="best_model" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C hidden_layer_sizes=%2850%2C 50%2C 50%2C 50%29%2C%0A              max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="best_score" type="float64" qualifier="numpy" value="-1.0336816581459078" shape="()" />
<var name="boxplot" type="AxesSubplot" qualifier="matplotlib.axes._subplots" value="AxesSubplot%280.125%2C0.125%3B0.775x0.755%29" isContainer="True" />
<var name="cls" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C hidden_layer_sizes=%28100%2C 50%2C 100%29%2C%0A              max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="df" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end  %5C %5B0           3694  51.323619  12.335887  1514764029  1514764799   %5D %5B1           2508  51.323619  12.335887  1514764035  1514764799   %5D %5B2          41851  51.332415  12.395158  1514764638  1514764799   %5D %5B3          41851  51.332415  12.395158  1514764800  1514851199   %5D %5B4           3694  51.323619  12.335887  1514764800  1514814103   %5D %5B...          ...        ...        ...         ...         ...   %5D %5B2547153    72243  51.367222  12.369617  1640897552  1640903562   %5D %5B2547154    72058  51.317569  12.382730  1640897593  1640904368   %5D %5B2547155    71949  51.334711  12.356763  1640897835  1640899343   %5D %5B2547156    97785  51.367276  12.369792  1640898086  1640900985   %5D %5B2547157    41738  51.366942  12.370322  1640900918  1640903516   %5D %5B%5D %5B                  hex_id  hex_enc   temp  rain  snow  month  day  start_min  %5C%5D %5B0        881f1a8d91fffff      195  10.80  0.00   0.0     12    6       1427   %5D %5B1        881f1a8d91fffff      195  10.80  0.00   ...%5D" isContainer="True" shape="(2547158, 17)" />
<var name="exit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7f93a6e96910&gt;" isContainer="True" isIPythonHidden="True" />
<var name="expected_y" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="f" type="function" qualifier="builtins" value="%3Cfunction f at 0x7f9345087f70&gt;" isContainer="True" />
<var name="feature_imp" type="Series" qualifier="pandas.core.series" value="%28%27start_min%27%2C 0.2605078084416175%29 %28%27lat%27%2C 0.13662362941576048%29 %28%27lng%27%2C 0.13637486731269613%29 %28%27bike_id%27%2C 0.1199068644712988%29 %28%27dt_start%27%2C 0.11477551702876346%29 %28%27temp%27%2C 0.09752620487490744%29 %28%27hex_enc%27%2C 0.05216760862201645%29 %28%27day%27%2C 0.03852363255701577%29 %28%27month%27%2C 0.028917888878066695%29 %28%27rain%27%2C 0.0143044500011802%29 %28%27snow%27%2C 0.00037152839667711903%29" isContainer="True" shape="(11,)" />
<var name="fig" type="ConfusionMatrixDisplay" qualifier="sklearn.metrics._plot.confusion_matrix" value="%3Csklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay object at 0x7f9344523eb0&gt;" isContainer="True" />
<var name="get_ipython" type="method" qualifier="builtins" value="%3Cbound method InteractiveShell.get_ipython of %3Cipykernel.zmqshell.ZMQInteractiveShell object at 0x7f93a6e7d610&gt;&gt;" isContainer="True" isIPythonHidden="True" />
<var name="gsearch" type="GridSearchCV" qualifier="sklearn.model_selection._search" value="GridSearchCV%28cv=TimeSeriesSplit%28gap=0%2C max_train_size=None%2C n_splits=10%2C test_size=None%29%2C%0A             estimator=MLPClassifier%28early_stopping=True%2C max_iter=1000%2C%0A                                     verbose=1%29%2C%0A             param_grid=%7B%27hidden_layer_sizes%27%3A %5B%2810%2C 10%29%2C %2810%2C 10%2C 10%29%2C%0A                                                %2810%2C 10%2C 10%2C 10%29%2C %2850%2C 50%29%2C%0A                                                %2850%2C 50%2C 50%29%2C %2850%2C 50%2C 50%2C 50%29%2C%0A                                                %28100%2C 100%29%2C %28100%2C 100%2C 100%29%2C%0A                                                %28100%2C 100%2C 100%2C 100%29%5D%7D%2C%0A             scoring=make_scorer%28rmse%2C greater_is_better=False%29%29" isContainer="True" />
<var name="importdata" type="function" qualifier="builtins" value="%3Cfunction importdata at 0x7f93a6eef5e0&gt;" isContainer="True" />
<var name="make_scorer" type="function" qualifier="builtins" value="%3Cfunction make_scorer at 0x7f9345aead30&gt;" isContainer="True" />
<var name="metrics" type="module" qualifier="builtins" value="%3Cmodule %27sklearn.metrics%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/sklearn/metrics/__init__.py%27&gt;" isContainer="True" />
<var name="model" type="MLPClassifier" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPClassifier%28early_stopping=True%2C max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="np" type="module" qualifier="builtins" value="%3Cmodule %27numpy%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/numpy/__init__.py%27&gt;" isContainer="True" />
<var name="param_search" type="dict" qualifier="builtins" value="%7B%27hidden_layer_sizes%27%3A %5B%2810%2C 10%29%2C %2810%2C 10%2C 10%29%2C %2810%2C 10%2C 10%2C 10%29%2C %2850%2C 50%29%2C %2850%2C 50%2C 50%29%2C %2850%2C 50%2C 50%2C 50%29%2C %28100%2C 100%29%2C %28100%2C 100%2C 100%29%2C %28100%2C 100%2C 100%2C 100%29%5D%7D" isContainer="True" shape="1" />
<var name="pd" type="module" qualifier="builtins" value="%3Cmodule %27pandas%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/pandas/__init__.py%27&gt;" isContainer="True" />
<var name="plt" type="module" qualifier="builtins" value="%3Cmodule %27matplotlib.pyplot%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/matplotlib/pyplot.py%27&gt;" isContainer="True" />
<var name="predicted_y" type="ndarray" qualifier="numpy" value="%5B1 2 2 2 4 3 1 3 3 4 1 2 2 4 1 2 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 2 1 1 4 4%2C 1 2 1 4 4 1 3 1 1 1 1 2 2 3 4 1 4 1 1 1 1 3 4 4 3 2 1 3 3 3 1 4 4 3 4 1 2%2C 1 2 3 3 4 3 3 1 3 1 3 4 2 4 3 4 2 2 4 2 3 2 1 3 3 2%5D" isContainer="True" shape="(509432,)" />
<var name="print_columns" type="function" qualifier="builtins" value="%3Cfunction print_columns at 0x7f8d54ae4700&gt;" isContainer="True" />
<var name="pydev_jupyter_vars" type="module" qualifier="builtins" value="%3Cmodule %27pydev_jupyter_vars%27 from %27/Applications/PyCharm.app/Contents/plugins/python/helpers-pro/jupyter_debug/pydev_jupyter_vars.py%27&gt;" isContainer="True" />
<var name="quit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7f93a6e96910&gt;" isContainer="True" isIPythonHidden="True" />
<var name="regression_results" type="function" qualifier="builtins" value="%3Cfunction regression_results at 0x7f9343f18ee0&gt;" isContainer="True" />
<var name="remove_imported_pydev_package" type="function" qualifier="builtins" value="%3Cfunction remove_imported_pydev_package at 0x7f93a6eef280&gt;" isContainer="True" />
<var name="rf_y_pred" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 4 4 1 2 2 4 3 1 4 1 1 3 4 3 4 1 2 4 2 1 3 3 4 1 3 1 1 4 4%2C 1 1 2 4 4 1 3 1 2 1 1 4 3 3 4 1 4 2 1 1 2 1 4 4 3 1 1 3 3 4 1 1 4 3 4 1 3%2C 1 1 3 3 4 3 3 1 2 2 3 4 1 3 2 2 2 2 4 2 3 2 3 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="rfc" type="RandomForestClassifier" qualifier="sklearn.ensemble._forest" value="RandomForestClassifier%28%29" isContainer="True" shape="100" />
<var name="rmse" type="function" qualifier="builtins" value="%3Cfunction rmse at 0x7f9343f18ca0&gt;" isContainer="True" />
<var name="rmse_score" type="_PredictScorer" qualifier="sklearn.metrics._scorer" value="make_scorer%28rmse%2C greater_is_better=False%29" isContainer="True" />
<var name="sns" type="module" qualifier="builtins" value="%3Cmodule %27seaborn%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/seaborn/__init__.py%27&gt;" isContainer="True" />
<var name="sys" type="module" qualifier="builtins" value="%3Cmodule %27sys%27 %28built-in%29&gt;" isContainer="True" />
<var name="train_test_split" type="function" qualifier="builtins" value="%3Cfunction train_test_split at 0x7f9344c24820&gt;" isContainer="True" />
<var name="tscv" type="TimeSeriesSplit" qualifier="sklearn.model_selection._split" value="TimeSeriesSplit%28gap=0%2C max_train_size=None%2C n_splits=10%2C test_size=None%29" isContainer="True" />
<var name="wandb" type="module" qualifier="builtins" value="%3Cmodule %27wandb%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/wandb/__init__.py%27&gt;" isContainer="True" />
<var name="y" type="ndarray" qualifier="numpy" value="%5B%5B1%5D%2C %5B1%5D%2C %5B1%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B1%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B2%5D%2C %5B4%5D%2C %5B4%5D%2C %5B2%5D%2C %5B1%5D%2C %5B1%5D%2C %5B1%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B3%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B2%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B3%5D%2C %5B3%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B2%5D%2C %5B4%5D%2C %5B4%5D%2C %5B2%5D%2C %5B2%5D%2C %5B4%5D%2C %5B1%5D%2C %5B3%5D%2C %5B2%5D%2C %5B4%5D%2C %5B2%5D%2C %5B4%5D%2C %5B4%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B4%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B2%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B2%5D%2C %5B1%5D%2C %5B4%5D%2C %5B4%5D%2C %5B3%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B2%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B2%5D%2C %5B2%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%2C %5B4%5D%5D" isContainer="True" shape="(2547158, 1)" />
<var name="y_pred" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 3 4 1 2 2 4 1 1 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 3 1 1 3 4%2C 1 1 1 4 4 1 3 1 1 2 1 4 2 3 3 1 4 1 1 1 1 1 4 4 3 2 1 2 3 4 1 4 4 3 4 1 2%2C 2 3 3 3 4 3 3 1 2 1 3 4 2 4 1 4 2 2 4 2 3 2 2 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="y_pred_mlp" type="ndarray" qualifier="numpy" value="%5B1 4 2 2 4 3 1 3 3 4 1 2 2 4 1 1 4 1 2 1 4 3 4 1 1 4 4 1 4 3 4 1 3 1 1 3 4%2C 1 1 1 4 4 1 3 1 1 2 1 4 2 3 3 1 4 1 1 1 1 1 4 4 3 2 1 2 3 4 1 4 4 3 4 1 2%2C 2 3 3 3 4 3 3 1 2 1 3 4 2 4 1 4 2 2 4 2 3 2 2 3 4 1%5D" isContainer="True" shape="(509432,)" />
<var name="y_test" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
<var name="y_train" type="ndarray" qualifier="numpy" value="%5B%5B1%5D%2C %5B3%5D%2C %5B2%5D%2C %5B1%5D%2C %5B4%5D%2C %5B2%5D%2C %5B4%5D%2C %5B2%5D%2C %5B1%5D%2C %5B3%5D%2C %5B4%5D%2C %5B1%5D%2C %5B2%5D%2C %5B3%5D%2C %5B1%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B4%5D%2C %5B1%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B1%5D%2C %5B4%5D%2C %5B1%5D%2C %5B4%5D%2C %5B2%5D%2C %5B4%5D%2C %5B4%5D%2C %5B1%5D%2C %5B2%5D%2C %5B2%5D%2C %5B4%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B2%5D%2C %5B4%5D%2C %5B3%5D%2C %5B3%5D%2C %5B2%5D%2C %5B1%5D%2C %5B4%5D%2C %5B4%5D%2C %5B1%5D%2C %5B3%5D%2C %5B4%5D%2C %5B4%5D%2C %5B1%5D%2C %5B1%5D%2C %5B1%5D%2C %5B1%5D%2C %5B4%5D%2C %5B1%5D%2C %5B1%5D%2C %5B1%5D%2C %5B3%5D%2C %5B1%5D%2C %5B2%5D%2C %5B4%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B2%5D%2C %5B1%5D%2C %5B3%5D%2C %5B2%5D%2C %5B1%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B2%5D%2C %5B4%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B1%5D%2C %5B4%5D%2C %5B2%5D%2C %5B3%5D%2C %5B2%5D%2C %5B2%5D%2C %5B1%5D%2C %5B2%5D%2C %5B3%5D%2C %5B4%5D%2C %5B2%5D%2C %5B2%5D%2C %5B3%5D%2C %5B4%5D%2C %5B1%5D%2C %5B1%5D%2C %5B1%5D%2C %5B1%5D%2C %5B4%5D%2C %5B1%5D%2C %5B4%5D%2C %5B3%5D%5D" isContainer="True" shape="(2037726, 1)" />
<var name="y_true" type="ndarray" qualifier="numpy" value="%5B%5B1%5D%2C %5B4%5D%2C %5B4%5D%2C %5B3%5D%2C %5B4%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B4%5D%2C %5B3%5D%2C %5B1%5D%2C %5B4%5D%2C %5B3%5D%2C %5B4%5D%2C %5B3%5D%2C %5B1%5D%2C %5B4%5D%2C %5B3%5D%2C %5B2%5D%2C %5B3%5D%2C %5B4%5D%2C %5B3%5D%2C %5B4%5D%2C %5B1%5D%2C %5B1%5D%2C %5B3%5D%2C %5B1%5D%2C %5B1%5D%2C %5B3%5D%2C %5B3%5D%2C %5B3%5D%2C %5B4%5D%2C %5B1%5D%2C %5B3%5D%2C %5B1%5D%2C %5B4%5D%2C %5B1%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B4%5D%2C %5B4%5D%2C %5B1%5D%2C %5B3%5D%2C %5B1%5D%2C %5B1%5D%2C %5B3%5D%2C %5B1%5D%2C %5B1%5D%2C %5B2%5D%2C %5B1%5D%2C %5B3%5D%2C %5B2%5D%2C %5B3%5D%2C %5B1%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B3%5D%2C %5B1%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B3%5D%2C %5B4%5D%2C %5B1%5D%2C %5B4%5D%2C %5B4%5D%2C %5B3%5D%2C %5B4%5D%2C %5B1%5D%2C %5B3%5D%2C %5B2%5D%2C %5B3%5D%2C %5B4%5D%2C %5B1%5D%2C %5B3%5D%2C %5B3%5D%2C %5B1%5D%2C %5B1%5D%2C %5B2%5D%2C %5B3%5D%2C %5B1%5D%2C %5B4%5D%2C %5B1%5D%2C %5B3%5D%2C %5B3%5D%2C %5B2%5D%2C %5B2%5D%2C %5B2%5D%2C %5B4%5D%2C %5B1%5D%2C %5B4%5D%2C %5B2%5D%2C %5B1%5D%2C %5B3%5D%2C %5B4%5D%2C %5B2%5D%5D" isContainer="True" shape="(509432, 1)" />
<var name="y_true_mlp" type="ndarray" qualifier="numpy" valueisContainer="True" shape="(509432, 1)" />
</xml>