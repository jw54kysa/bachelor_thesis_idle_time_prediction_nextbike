<xml><var name="DataFrame" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.frame.DataFrame%27&gt;" isContainer="True" />
<var name="In" type="list" qualifier="builtins" value="%5B%27%27%2C %22import pandas as pd%5Cnimport numpy as np%5Cnfrom tqdm import tqdm%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %27df.head%28%29%27%2C %22TargetVariable=%5B%27idle_time%27%5D%5CnPredictors=%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C%27hex_enc%27%2C%27start_min%27%2C %27month%27%2C %27day%27%5D%22%2C %27X=df%5BPredictors%5D.values%5Cny=df%5BTargetVariable%5D.values%5Cn%5Cn%23%23%23 Sandardization of data %23%23%23%5Cnfrom sklearn.preprocessing import StandardScaler%5CnPredictorScaler=StandardScaler%28%29%5CnTargetVarScaler=StandardScaler%28%29%5Cn%5Cn%23 Storing the fit object for later reference%5CnPredictorScalerFit=PredictorScaler.fit%28X%29%5CnTargetVarScalerFit=TargetVarScaler.fit%28y%29%5Cn%5Cn%23 Generating the standardized values of X and y%5CnX=PredictorScalerFit.transform%28X%29%5Cny=TargetVarScalerFit.transform%28y%29%5Cn%5Cn%5Cn%23 Split the data into training and testing set%5Cnfrom sklearn.model_selection import train_test_split%5CnX_train%2C X_test%2C y_train%2C y_test = train_test_split%28X%2C y%2C test_size=0.2%2C random_state=42%29%5Cn%5Cn%23 Quick sanity check with the sh..." isContainer="True" shape="15" isIPythonHidden="True" />
<var name="MLPRegressor" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.neural_network._multilayer_perceptron.MLPRegressor%27&gt;" isContainer="True" />
<var name="MultiIndex" type="type" qualifier="builtins" value="%3Cclass %27pandas.core.indexes.multi.MultiIndex%27&gt;" isContainer="True" />
<var name="Out" type="dict" qualifier="builtins" value="%7B2%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     3694  51.343813  12.381495  1514814666  1514851199  881f1a8cb1fffff   %0A2     3694  51.343076  12.365177  1514904953  1514907104  881f1a8cbdfffff   %0A3     3694  51.332874  12.373261  1514933625  1514937599  881f1a164bfffff   %0A4     3694  51.297564  12.293015  1514998503  1515023999  881f1a8da3fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80  0.00   0.0     12    6       1427           1   %0A1      164   8.52  0.00   0.0      1    0        831           1   %0A2      170   6.11  0.00   0.0      1    1        896           0   %0A3       75   2.96  0.00   0.0      1    1       1374           1   %0A4      202   7.11  0.14   0.0      1    2       1015           1   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                 877        608  %0A2                  ..." isContainer="True" shape="1" isIPythonHidden="True" />
<var name="PredictorScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="PredictorScalerFit" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="Predictors" type="list" qualifier="builtins" value="%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C %27hex_enc%27%2C %27start_min%27%2C %27month%27%2C %27day%27%5D" isContainer="True" shape="11" />
<var name="RandomForestRegressor" type="ABCMeta" qualifier="abc" value="%3Cclass %27sklearn.ensemble._forest.RandomForestRegressor%27&gt;" isContainer="True" />
<var name="StandardScaler" type="type" qualifier="builtins" value="%3Cclass %27sklearn.preprocessing._data.StandardScaler%27&gt;" isContainer="True" />
<var name="TargetVarScaler" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="TargetVarScalerFit" type="StandardScaler" qualifier="sklearn.preprocessing._data" value="StandardScaler%28%29" isContainer="True" />
<var name="TargetVariable" type="list" qualifier="builtins" value="%5B%27idle_time%27%5D" isContainer="True" shape="1" />
<var name="X" type="ndarray" qualifier="numpy" value="%5B%5B-3.48291031  0.05221204  0.00831509 ...  1.74586868  1.62198697%2C   1.52004291%5D%2C %5B-3.48291031  0.05920369  0.07376157 ...  0.44905468 -2.01828988%2C  -1.5486919 %5D%2C %5B-3.48291031  0.0589485   0.05034492 ...  0.59048574 -2.01828988%2C  -1.0372361 %5D%2C ...%2C %5B-3.53864896  0.05255676  0.00980076 ...  0.0943891  -0.69455284%2C   0.49713131%5D%2C %5B-3.53864896  0.05255676  0.00980076 ...  0.67316851 -0.69455284%2C  -1.5486919 %5D%2C %5B-3.53864896  0.04319088 -0.05320553 ...  0.91904096 -0.69455284%2C  -1.5486919 %5D%5D" isContainer="True" shape="(2547158, 11)" />
<var name="X_test" type="ndarray" qualifier="numpy" value="%5B%5B 8.38009936e-01  5.78974887e-02  6.95798872e-02 ... -1.21021275e-01%2C   1.29105271e%2B00  1.00858711e%2B00%5D%2C %5B 7.42417683e-01  5.95763409e-02  1.27176364e-01 ...  2.79337410e-01%2C   2.98249935e-01  1.00858711e%2B00%5D%2C %5B 7.43592612e-01  4.68903121e-02  6.74114892e-02 ...  1.26500309e%2B00%2C  -6.94552843e-01 -5.25780295e-01%5D%2C ...%2C %5B-1.69165999e%2B00  5.39888869e-02  5.98747118e-02 ...  9.22132423e-02%2C  -3.63618584e-01  1.00858711e%2B00%5D%2C %5B 7.38845897e-01  5.88069311e-02  6.37873946e-02 ...  1.56527210e%2B00%2C  -3.26843246e-02  4.97131310e-01%5D%2C %5B 9.29231452e-01  5.64094502e-02  1.62293209e-03 ... -6.38876530e-01%2C  -3.26843246e-02 -1.43244924e-02%5D%5D" isContainer="True" shape="(509432, 11)" />
<var name="X_train" type="ndarray" qualifier="numpy" value="%5B%5B-0.26858554  0.05997643  0.0988405  ... -1.35908699 -0.69455284%2C  -0.52578029%5D%2C %5B 0.93402516  0.06483757  0.07785328 ... -1.35908699  0.29824993%2C   0.49713131%5D%2C %5B-0.18587051  0.05658579  0.07249312 ... -1.35908699  1.29105271%2C  -0.01432449%5D%2C ...%2C %5B-0.27572911  0.05967483  0.08920708 ... -0.74766965 -1.0254871%2C  -1.5486919 %5D%2C %5B 0.93468312  0.05045576  0.07622061 ... -0.23416612 -0.69455284%2C   0.49713131%5D%2C %5B 0.73644904  0.04557    -0.00356687 ...  0.71015817 -1.0254871%2C  -1.5486919 %5D%5D" isContainer="True" shape="(2037726, 11)" />
<var name="_" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     3694  51.343813  12.381495  1514814666  1514851199  881f1a8cb1fffff   %5D %5B2     3694  51.343076  12.365177  1514904953  1514907104  881f1a8cbdfffff   %5D %5B3     3694  51.332874  12.373261  1514933625  1514937599  881f1a164bfffff   %5D %5B4     3694  51.297564  12.293015  1514998503  1515023999  881f1a8da3fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80  0.00   0.0     12    6       1427           1   %5D %5B1      164   8.52  0.00   0.0      1    0        831           1   %5D %5B2      170   6.11  0.00   0.0      1    1        896           0   %5D %5B3       75   2.96  0.00   0.0      1    1       1374           1   %5D %5B4      202   7.11  0.14   0.0      1    2       1015           1   %5D %5B%5D %5B   idle_time_next_day  idle_time  %5D %5B0                 821         12  %5D %5B1                 877        608  %5D %5B2                   0  ...%5D" isContainer="True" shape="(5, 16)" isIPythonHidden="True" />
<var name="_2" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end           hex_id  %5C %5B0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %5D %5B1     3694  51.343813  12.381495  1514814666  1514851199  881f1a8cb1fffff   %5D %5B2     3694  51.343076  12.365177  1514904953  1514907104  881f1a8cbdfffff   %5D %5B3     3694  51.332874  12.373261  1514933625  1514937599  881f1a164bfffff   %5D %5B4     3694  51.297564  12.293015  1514998503  1515023999  881f1a8da3fffff   %5D %5B%5D %5B   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%5D %5B0      195  10.80  0.00   0.0     12    6       1427           1   %5D %5B1      164   8.52  0.00   0.0      1    0        831           1   %5D %5B2      170   6.11  0.00   0.0      1    1        896           0   %5D %5B3       75   2.96  0.00   0.0      1    1       1374           1   %5D %5B4      202   7.11  0.14   0.0      1    2       1015           1   %5D %5B%5D %5B   idle_time_next_day  idle_time  %5D %5B0                 821         12  %5D %5B1                 877        608  %5D %5B2                   0  ...%5D" isContainer="True" shape="(5, 16)" isIPythonHidden="True" />
<var name="__" type="str" qualifier="builtins" value="" isIPythonHidden="True" />
<var name="___" type="str" qualifier="builtins" value="" isIPythonHidden="True" />
<var name="__builtin__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__builtins__" type="module" qualifier="builtins" value="%3Cmodule %27builtins%27 %28built-in%29&gt;" isContainer="True" isIPythonHidden="True" />
<var name="__doc__" type="str" qualifier="builtins" value="Automatically created module for IPython interactive environment" isIPythonHidden="True" />
<var name="__loader__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__name__" type="str" qualifier="builtins" value="__main__" isIPythonHidden="True" />
<var name="__package__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="__spec__" type="NoneType" qualifier="builtins" value="None" isIPythonHidden="True" />
<var name="_dh" type="list" qualifier="builtins" value="%5B%27/Users/jonweske/devment/BA_nextbike/scripts%27%5D" isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_i" type="str" qualifier="builtins" value="from sklearn.ensemble import RandomForestRegressor%0A%0Arfr = RandomForestRegressor%28n_estimators = 100%29%0Arfr.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Aexpected_y_rfr = y_test%0Apredicted_y_rfr = rfr.predict%28X_test%29" isIPythonHidden="True" />
<var name="_i1" type="str" qualifier="builtins" value="import pandas as pd%0Aimport numpy as np%0Afrom tqdm import tqdm%0A%0A%23 read CSV%0Adf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29" isIPythonHidden="True" />
<var name="_i10" type="str" qualifier="builtins" value="import sklearn.metrics as metrics%0A%0Adef regression_results%28y_true%2C y_pred%29%3A%0A    %23 Regression metrics%0A    explained_variance=metrics.explained_variance_score%28y_true%2C y_pred%29%0A    mean_absolute_error=metrics.mean_absolute_error%28y_true%2C y_pred%29%0A    mse=metrics.mean_squared_error%28y_true%2C y_pred%29%0A    %23mean_squared_log_error=metrics.mean_squared_log_error%28y_true%2C y_pred%29%0A    median_absolute_error=metrics.median_absolute_error%28y_true%2C y_pred%29%0A    r2=metrics.r2_score%28y_true%2C y_pred%29%0A    print%28%27explained_variance%3A %27%2C round%28explained_variance%2C4%29%29%0A    %23print%28%27mean_squared_log_error%3A %27%2C round%28mean_squared_log_error%2C4%29%29%0A    print%28%27r2%3A %27%2C round%28r2%2C4%29%29%0A    print%28%27MAE%3A %27%2C round%28mean_absolute_error%2C4%29%29%0A    print%28%27MSE%3A %27%2C round%28mse%2C4%29%29%0A    print%28%27RMSE%3A %27%2C round%28np.sqrt%28mse%29%2C4%29%29" isIPythonHidden="True" />
<var name="_i11" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_i12" type="str" qualifier="builtins" value="rfr = RandomForestRegressor%28n_estimators = 100%29%0Arfr.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Aexpected_y_rfr = y_test%0Apredicted_y_rfr = rfr.predict%28X_test%29" isIPythonHidden="True" />
<var name="_i13" type="str" qualifier="builtins" value="from sklearn.ensemble import RandomForestRegressor%0A%0Arfr = RandomForestRegressor%28n_estimators = 100%29%0Arfr.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Aexpected_y_rfr = y_test%0Apredicted_y_rfr = rfr.predict%28X_test%29" isIPythonHidden="True" />
<var name="_i14" type="str" qualifier="builtins" value="run = wandb.init%28project=%27nb_idle_time_prediction%27%2C name=%22RFRegressor%22%29" isIPythonHidden="True" />
<var name="_i2" type="str" qualifier="builtins" value="df.head%28%29" isIPythonHidden="True" />
<var name="_i3" type="str" qualifier="builtins" value="TargetVariable=%5B%27idle_time%27%5D%0APredictors=%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C%27hex_enc%27%2C%27start_min%27%2C %27month%27%2C %27day%27%5D" isIPythonHidden="True" />
<var name="_i4" type="str" qualifier="builtins" value="X=df%5BPredictors%5D.values%0Ay=df%5BTargetVariable%5D.values%0A%0A%23%23%23 Sandardization of data %23%23%23%0Afrom sklearn.preprocessing import StandardScaler%0APredictorScaler=StandardScaler%28%29%0ATargetVarScaler=StandardScaler%28%29%0A%0A%23 Storing the fit object for later reference%0APredictorScalerFit=PredictorScaler.fit%28X%29%0ATargetVarScalerFit=TargetVarScaler.fit%28y%29%0A%0A%23 Generating the standardized values of X and y%0AX=PredictorScalerFit.transform%28X%29%0Ay=TargetVarScalerFit.transform%28y%29%0A%0A%0A%23 Split the data into training and testing set%0Afrom sklearn.model_selection import train_test_split%0AX_train%2C X_test%2C y_train%2C y_test = train_test_split%28X%2C y%2C test_size=0.2%2C random_state=42%29%0A%0A%23 Quick sanity check with the shapes of Training and testing datasets%0Aprint%28X_train.shape%29%0Aprint%28y_train.shape%29%0Aprint%28X_test.shape%29%0Aprint%28y_test.shape%29" isIPythonHidden="True" />
<var name="_i5" type="str" qualifier="builtins" value="import wandb%0Arun = wandb.init%28project=%27nb_idle_time_prediction%27%2C name=%22MLPRegressor%22%29" isIPythonHidden="True" />
<var name="_i6" type="str" qualifier="builtins" value="from sklearn.neural_network import MLPRegressor%0A%0Ann = MLPRegressor%28hidden_layer_sizes=%2810%2C15%2C10%29%2C activation=%27tanh%27%2C solver=%27adam%27%2C max_iter=1000%2C verbose=1%2C early_stopping=True%29%0Ann.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Aexpected_y = y_test%0Apredicted_y = nn.predict%28X_test%29%0A%0Ar2 = metrics.r2_score%28expected_y%2Cpredicted_y%29%0Amse = metrics.mean_squared_error%28expected_y%2Cpredicted_y%29%0Aprint%28f%22R2%3A %7Br2%7D%22%29%0Aprint%28f%22MSE%3A %7Bmse%7D%22%29" isIPythonHidden="True" />
<var name="_i7" type="str" qualifier="builtins" value="r2 = metrics.r2_score%28expected_y%2Cpredicted_y%29%0Amse = metrics.mean_squared_error%28expected_y%2Cpredicted_y%29%0Aprint%28f%22R2%3A %7Br2%7D%22%29%0Aprint%28f%22MSE%3A %7Bmse%7D%22%29" isIPythonHidden="True" />
<var name="_i8" type="str" qualifier="builtins" value="from sklearn import metrics%0Ar2 = metrics.r2_score%28expected_y%2Cpredicted_y%29%0Amse = metrics.mean_squared_error%28expected_y%2Cpredicted_y%29%0Aprint%28f%22R2%3A %7Br2%7D%22%29%0Aprint%28f%22MSE%3A %7Bmse%7D%22%29" isIPythonHidden="True" />
<var name="_i9" type="str" qualifier="builtins" value="wandb.sklearn.plot_regressor%28nn%2C X_train%2C X_test%2C y_train.ravel%28%29%2C y_test.ravel%28%29%2C model_name=%27MLPRegressor%27%29%0A%0Awandb.finish%28%29" isIPythonHidden="True" />
<var name="_ih" type="list" qualifier="builtins" value="%5B%27%27%2C %22import pandas as pd%5Cnimport numpy as np%5Cnfrom tqdm import tqdm%5Cn%5Cn%23 read CSV%5Cndf = pd.read_csv%28%27../data/df_points/final_df_points_18_21.csv%27%29%22%2C %27df.head%28%29%27%2C %22TargetVariable=%5B%27idle_time%27%5D%5CnPredictors=%5B%27bike_id%27%2C %27lat%27%2C %27lng%27%2C %27temp%27%2C %27rain%27%2C %27snow%27%2C %27dt_start%27%2C%27hex_enc%27%2C%27start_min%27%2C %27month%27%2C %27day%27%5D%22%2C %27X=df%5BPredictors%5D.values%5Cny=df%5BTargetVariable%5D.values%5Cn%5Cn%23%23%23 Sandardization of data %23%23%23%5Cnfrom sklearn.preprocessing import StandardScaler%5CnPredictorScaler=StandardScaler%28%29%5CnTargetVarScaler=StandardScaler%28%29%5Cn%5Cn%23 Storing the fit object for later reference%5CnPredictorScalerFit=PredictorScaler.fit%28X%29%5CnTargetVarScalerFit=TargetVarScaler.fit%28y%29%5Cn%5Cn%23 Generating the standardized values of X and y%5CnX=PredictorScalerFit.transform%28X%29%5Cny=TargetVarScalerFit.transform%28y%29%5Cn%5Cn%5Cn%23 Split the data into training and testing set%5Cnfrom sklearn.model_selection import train_test_split%5CnX_train%2C X_test%2C y_train%2C y_test = train_test_split%28X%2C y%2C test_size=0.2%2C random_state=42%29%5Cn%5Cn%23 Quick sanity check with the sh..." isContainer="True" shape="15" isIPythonHidden="True" />
<var name="_ii" type="str" qualifier="builtins" value="rfr = RandomForestRegressor%28n_estimators = 100%29%0Arfr.fit%28X_train%2Cy_train.ravel%28%29%29%0A%0Aexpected_y_rfr = y_test%0Apredicted_y_rfr = rfr.predict%28X_test%29" isIPythonHidden="True" />
<var name="_iii" type="str" qualifier="builtins" value="from sklearn.metrics import make_scorer%0A%0Adef rmse%28actual%2C predict%29%3A%0A    predict = np.array%28predict%29%0A    actual = np.array%28actual%29%0A    distance = predict - actual%0A    square_distance = distance %2A%2A 2%0A    mean_square_distance = square_distance.mean%28%29%0A    score = np.sqrt%28mean_square_distance%29%0A    return score%0A%0Armse_score = make_scorer%28rmse%2C greater_is_better = False%29" isIPythonHidden="True" />
<var name="_oh" type="dict" qualifier="builtins" value="%7B2%3A    bike_id        lat        lng    dt_start      dt_end           hex_id  %5C%0A0     3694  51.323619  12.335887  1514764029  1514764799  881f1a8d91fffff   %0A1     3694  51.343813  12.381495  1514814666  1514851199  881f1a8cb1fffff   %0A2     3694  51.343076  12.365177  1514904953  1514907104  881f1a8cbdfffff   %0A3     3694  51.332874  12.373261  1514933625  1514937599  881f1a164bfffff   %0A4     3694  51.297564  12.293015  1514998503  1515023999  881f1a8da3fffff   %0A%0A   hex_enc   temp  rain  snow  month  day  start_min  over_night  %5C%0A0      195  10.80  0.00   0.0     12    6       1427           1   %0A1      164   8.52  0.00   0.0      1    0        831           1   %0A2      170   6.11  0.00   0.0      1    1        896           0   %0A3       75   2.96  0.00   0.0      1    1       1374           1   %0A4      202   7.11  0.14   0.0      1    2       1015           1   %0A%0A   idle_time_next_day  idle_time  %0A0                 821         12  %0A1                 877        608  %0A2                  ..." isContainer="True" shape="1" isIPythonHidden="True" />
<var name="_pydevd_bundle" type="module" qualifier="builtins" value="%3Cmodule %27_pydevd_bundle%27 from %27/Applications/PyCharm.app/Contents/plugins/python/helpers/pydev/_pydevd_bundle/__init__.py%27&gt;" isContainer="True" />
<var name="df" type="DataFrame" qualifier="pandas.core.frame" value="bike_id        lat        lng    dt_start      dt_end  %5C %5B0           3694  51.323619  12.335887  1514764029  1514764799   %5D %5B1           3694  51.343813  12.381495  1514814666  1514851199   %5D %5B2           3694  51.343076  12.365177  1514904953  1514907104   %5D %5B3           3694  51.332874  12.373261  1514933625  1514937599   %5D %5B4           3694  51.297564  12.293015  1514998503  1515023999   %5D %5B...          ...        ...        ...         ...         ...   %5D %5B2547153    97516  51.324615  12.336922  1633737600  1633823999   %5D %5B2547154    97516  51.324615  12.336922  1633824000  1633910399   %5D %5B2547155    97516  51.324615  12.336922  1633910400  1633996799   %5D %5B2547156    97516  51.324615  12.336922  1633996800  1634083199   %5D %5B2547157    97516  51.324615  12.336922  1634083200  1634148977   %5D %5B%5D %5B                  hex_id  hex_enc   temp  rain  snow  month  day  start_min  %5C%5D %5B0        881f1a8d91fffff      195  10.80  0.00   0.0     12    6       1427   %5D %5B1        881f1a8cb1fffff      164   8.52  0.00   ...%5D" isContainer="True" shape="(2547158, 16)" />
<var name="exit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fd3866a20d0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="expected_y" type="ndarray" qualifier="numpy" value="%5B%5B-0.71433663%5D%2C %5B-0.45217584%5D%2C %5B-0.2963633 %5D%2C %5B-0.78605986%5D%2C %5B 0.70281555%5D%2C %5B-0.05893466%5D%2C %5B 0.31946723%5D%2C %5B 1.49671756%5D%2C %5B 2.68386075%5D%2C %5B-0.73412235%5D%2C %5B-0.79347951%5D%2C %5B 2.68386075%5D%2C %5B-0.83552416%5D%2C %5B-0.19248827%5D%2C %5B 2.68386075%5D%2C %5B-0.86767596%5D%2C %5B-0.79347951%5D%2C %5B-0.82068487%5D%2C %5B 0.512378  %5D%2C %5B 0.29473508%5D%2C %5B-0.8577831 %5D%2C %5B 0.46044048%5D%2C %5B-0.78358665%5D%2C %5B-0.776167  %5D%2C %5B-0.64014018%5D%2C %5B-0.87014917%5D%2C %5B-0.51647943%5D%2C %5B 0.17849398%5D%2C %5B 2.68386075%5D%2C %5B-0.75143485%5D%2C %5B-0.57089016%5D%2C %5B-0.76132771%5D%2C %5B-0.43980977%5D%2C %5B 0.12655646%5D%2C %5B-0.80584558%5D%2C %5B-0.58078302%5D%2C %5B-0.63766697%5D%2C %5B-0.85530988%5D%2C %5B-0.01441679%5D%2C %5B-0.63519375%5D%2C %5B 2.68386075%5D%2C %5B 0.12161003%5D%2C %5B-0.79842594%5D%2C %5B-0.43733655%5D%2C %5B 0.20817256%5D%2C %5B-0.81326523%5D%2C %5B 0.27742258%5D%2C %5B-0.87262239%5D%2C %5B-0.07377395%5D%2C %5B-0.29389008%5D%2C %5B-0.70197055%5D%2C %5B 0.01031536%5D%2C %5B-0.78111343%5D%2C %5B 2.68386075%5D%2C %5B-0.83799738%5D%2C %5B-0.3631401 %5D%2C %5B-0.65250626%5D%2C %5B-0.20732756%5D%2C %5B 0.07709216%5D%2C %5B 0.46786013%5D%2C %5B-0.84294381%5D%2C %5B-0.08861324%5D%2C %5B-0.79347951%5D%2C %5B-0.74648842%5D%2C %5B 2.68386075%5D%2C %5B-0.82315809%5D%2C %5B 0.21064..." isContainer="True" shape="(509432, 1)" />
<var name="get_ipython" type="method" qualifier="builtins" value="%3Cbound method InteractiveShell.get_ipython of %3Cipykernel.zmqshell.ZMQInteractiveShell object at 0x7fd38665b6d0&gt;&gt;" isContainer="True" isIPythonHidden="True" />
<var name="make_scorer" type="function" qualifier="builtins" value="%3Cfunction make_scorer at 0x7fd31f790040&gt;" isContainer="True" />
<var name="metrics" type="module" qualifier="builtins" value="%3Cmodule %27sklearn.metrics%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/sklearn/metrics/__init__.py%27&gt;" isContainer="True" />
<var name="mse" type="float64" qualifier="numpy" value="0.43747535885668426" shape="()" />
<var name="nn" type="MLPRegressor" qualifier="sklearn.neural_network._multilayer_perceptron" value="MLPRegressor%28activation=%27tanh%27%2C early_stopping=True%2C%0A             hidden_layer_sizes=%2810%2C 15%2C 10%29%2C max_iter=1000%2C verbose=1%29" isContainer="True" />
<var name="np" type="module" qualifier="builtins" value="%3Cmodule %27numpy%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/numpy/__init__.py%27&gt;" isContainer="True" />
<var name="pd" type="module" qualifier="builtins" value="%3Cmodule %27pandas%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/pandas/__init__.py%27&gt;" isContainer="True" />
<var name="predicted_y" type="ndarray" qualifier="numpy" value="%5B-0.41216727 -0.42796594 -0.37575216 -0.65673557 -0.45748374  0.67474702%2C -0.22558494  0.29047544  2.27500553 -0.66894412 -0.72659389  0.1201513%2C  0.2684182  -0.19088819  1.94809487 -0.55773479 -0.49419569 -0.42522371%2C  0.73453309  0.19717722 -0.51631731  1.08871077 -0.7569263  -0.60401839%2C -0.45715     0.06721619  0.02584085  0.09080388  1.86572754 -0.74632154%2C -0.48389519 -0.78994099 -0.35632361 -0.49822894 -0.61742407 -0.67319728%2C -0.65234682 -0.62950051  0.8646413  -0.29867083  1.73670379  0.83561607%2C -0.64954861 -0.55724965  0.14056199 -0.66786129 -0.41879027 -0.62301268%2C  0.93042597 -0.41532579 -0.54404786  0.66806514 -0.55385218  1.80655841%2C  0.0280935  -0.45641461 -0.19434521 -0.61678277 -0.28091162 -0.41130075%2C -0.51159036 -0.43507939 -0.84456095 -0.53193782  0.24539273 -0.38561863%2C -0.25034511 -0.23368424 -0.55281395  1.75900691 -0.62459273  1.53540261%2C  0.36750311 -0.62807121  1.11084039  1.28783368 -0.36188417  1.90372565%2C  1.14608399 -0.20791339 -0.19269647 -0.47680423 -0...." isContainer="True" shape="(509432,)" />
<var name="print_columns" type="function" qualifier="builtins" value="%3Cfunction print_columns at 0x7fd335356f70&gt;" isContainer="True" />
<var name="pydev_jupyter_vars" type="module" qualifier="builtins" value="%3Cmodule %27pydev_jupyter_vars%27 from %27/Applications/PyCharm.app/Contents/plugins/python/helpers-pro/jupyter_debug/pydev_jupyter_vars.py%27&gt;" isContainer="True" />
<var name="quit" type="ZMQExitAutocall" qualifier="IPython.core.autocall" value="%3CIPython.core.autocall.ZMQExitAutocall object at 0x7fd3866a20d0&gt;" isContainer="True" isIPythonHidden="True" />
<var name="r2" type="float64" qualifier="numpy" value="0.5614761331530398" shape="()" />
<var name="regression_results" type="function" qualifier="builtins" value="%3Cfunction regression_results at 0x7fd3351e54c0&gt;" isContainer="True" />
<var name="remove_imported_pydev_package" type="function" qualifier="builtins" value="%3Cfunction remove_imported_pydev_package at 0x7fd3866c85e0&gt;" isContainer="True" />
<var name="rfr" type="RandomForestRegressor" qualifier="sklearn.ensemble._forest" value="RandomForestRegressor%28%29" isContainer="True" shape="0" />
<var name="rmse" type="function" qualifier="builtins" value="%3Cfunction rmse at 0x7fd3351e5790&gt;" isContainer="True" />
<var name="rmse_score" type="_PredictScorer" qualifier="sklearn.metrics._scorer" value="make_scorer%28rmse%2C greater_is_better=False%29" isContainer="True" />
<var name="run" type="Run" qualifier="wandb.sdk.wandb_run" value="%3Cwandb.sdk.wandb_run.Run object at 0x7fd33541d910&gt;" isContainer="True" />
<var name="sys" type="module" qualifier="builtins" value="%3Cmodule %27sys%27 %28built-in%29&gt;" isContainer="True" />
<var name="tqdm" type="type" qualifier="builtins" value="%3Cclass %27tqdm.std.tqdm%27&gt;" isContainer="True" />
<var name="train_test_split" type="function" qualifier="builtins" value="%3Cfunction train_test_split at 0x7fd31f7395e0&gt;" isContainer="True" />
<var name="wandb" type="module" qualifier="builtins" value="%3Cmodule %27wandb%27 from %27/usr/local/Caskroom/miniconda/base/envs/geobike/lib/python3.9/site-packages/wandb/__init__.py%27&gt;" isContainer="True" />
<var name="y" type="ndarray" qualifier="numpy" value="%5B%5B-0.84541702%5D%2C %5B 0.6286191 %5D%2C %5B-0.78853308%5D%2C %5B-0.71186341%5D%2C %5B 0.17354755%5D%2C %5B 1.40768182%5D%2C %5B-0.23205971%5D%2C %5B 0.27989579%5D%2C %5B 0.19333327%5D%2C %5B 0.90067275%5D%2C %5B 1.02927993%5D%2C %5B-0.78111343%5D%2C %5B 1.24444963%5D%2C %5B 0.21311899%5D%2C %5B-0.85283667%5D%2C %5B-0.42497048%5D%2C %5B 0.05236001%5D%2C %5B 0.26752972%5D%2C %5B 0.30710116%5D%2C %5B-0.76380093%5D%2C %5B-0.79347951%5D%2C %5B 0.25763686%5D%2C %5B-0.87014917%5D%2C %5B-0.09355967%5D%2C %5B-0.73906878%5D%2C %5B-0.51647943%5D%2C %5B 1.36069074%5D%2C %5B-0.84294381%5D%2C %5B-0.16280969%5D%2C %5B 0.42828869%5D%2C %5B 0.54205658%5D%2C %5B 0.73744056%5D%2C %5B-0.81821166%5D%2C %5B 0.9254049 %5D%2C %5B-0.14055076%5D%2C %5B-0.08614003%5D%2C %5B-0.85036345%5D%2C %5B-0.59809553%5D%2C %5B-0.03667573%5D%2C %5B-0.27163115%5D%2C %5B 0.90067275%5D%2C %5B 0.76959236%5D%2C %5B 0.36645831%5D%2C %5B-0.05151502%5D%2C %5B-0.62035446%5D%2C %5B-0.50905979%5D%2C %5B-0.51400622%5D%2C %5B-0.07872038%5D%2C %5B 0.59152088%5D%2C %5B-0.54863123%5D%2C %5B 1.64511046%5D%2C %5B-0.87014917%5D%2C %5B 0.68797626%5D%2C %5B-0.25184543%5D%2C %5B 1.10842281%5D%2C %5B 0.40850297%5D%2C %5B 0.38624403%5D%2C %5B 1.38047645%5D%2C %5B-0.4942205 %5D%2C %5B-0.03420251%5D%2C %5B-0.73906878%5D%2C %5B 0.72507449%5D%2C %5B-0.12818468%5D%2C %5B 0.49011906%5D%2C %5B 0.99960135%5D%2C %5B-0.00452393%5D%2C %5B 1.67478..." isContainer="True" shape="(2547158, 1)" />
<var name="y_test" type="ndarray" qualifier="numpy" value="%5B%5B-0.71433663%5D%2C %5B-0.45217584%5D%2C %5B-0.2963633 %5D%2C %5B-0.78605986%5D%2C %5B 0.70281555%5D%2C %5B-0.05893466%5D%2C %5B 0.31946723%5D%2C %5B 1.49671756%5D%2C %5B 2.68386075%5D%2C %5B-0.73412235%5D%2C %5B-0.79347951%5D%2C %5B 2.68386075%5D%2C %5B-0.83552416%5D%2C %5B-0.19248827%5D%2C %5B 2.68386075%5D%2C %5B-0.86767596%5D%2C %5B-0.79347951%5D%2C %5B-0.82068487%5D%2C %5B 0.512378  %5D%2C %5B 0.29473508%5D%2C %5B-0.8577831 %5D%2C %5B 0.46044048%5D%2C %5B-0.78358665%5D%2C %5B-0.776167  %5D%2C %5B-0.64014018%5D%2C %5B-0.87014917%5D%2C %5B-0.51647943%5D%2C %5B 0.17849398%5D%2C %5B 2.68386075%5D%2C %5B-0.75143485%5D%2C %5B-0.57089016%5D%2C %5B-0.76132771%5D%2C %5B-0.43980977%5D%2C %5B 0.12655646%5D%2C %5B-0.80584558%5D%2C %5B-0.58078302%5D%2C %5B-0.63766697%5D%2C %5B-0.85530988%5D%2C %5B-0.01441679%5D%2C %5B-0.63519375%5D%2C %5B 2.68386075%5D%2C %5B 0.12161003%5D%2C %5B-0.79842594%5D%2C %5B-0.43733655%5D%2C %5B 0.20817256%5D%2C %5B-0.81326523%5D%2C %5B 0.27742258%5D%2C %5B-0.87262239%5D%2C %5B-0.07377395%5D%2C %5B-0.29389008%5D%2C %5B-0.70197055%5D%2C %5B 0.01031536%5D%2C %5B-0.78111343%5D%2C %5B 2.68386075%5D%2C %5B-0.83799738%5D%2C %5B-0.3631401 %5D%2C %5B-0.65250626%5D%2C %5B-0.20732756%5D%2C %5B 0.07709216%5D%2C %5B 0.46786013%5D%2C %5B-0.84294381%5D%2C %5B-0.08861324%5D%2C %5B-0.79347951%5D%2C %5B-0.74648842%5D%2C %5B 2.68386075%5D%2C %5B-0.82315809%5D%2C %5B 0.21064..." isContainer="True" shape="(509432, 1)" />
<var name="y_train" type="ndarray" qualifier="numpy" value="%5B%5B 0.38624403%5D%2C %5B 2.68386075%5D%2C %5B 0.14386897%5D%2C %5B-0.19496148%5D%2C %5B-0.07130074%5D%2C %5B 0.0671993 %5D%2C %5B 0.26011007%5D%2C %5B 0.42581547%5D%2C %5B-0.8577831 %5D%2C %5B-0.33098831%5D%2C %5B 0.86852095%5D%2C %5B-0.7093902 %5D%2C %5B 0.07709216%5D%2C %5B 2.68386075%5D%2C %5B-0.77122057%5D%2C %5B 0.1488154 %5D%2C %5B-0.3136758 %5D%2C %5B-0.86767596%5D%2C %5B-0.73659556%5D%2C %5B 0.03999394%5D%2C %5B-0.55110444%5D%2C %5B-0.3631401 %5D%2C %5B-0.50905979%5D%2C %5B-0.82810452%5D%2C %5B 2.68386075%5D%2C %5B-0.8577831 %5D%2C %5B-0.8750956 %5D%2C %5B-0.84789024%5D%2C %5B-0.85530988%5D%2C %5B-0.20238113%5D%2C %5B-0.61788125%5D%2C %5B 1.80339622%5D%2C %5B 0.36645831%5D%2C %5B-0.60304196%5D%2C %5B 0.58904766%5D%2C %5B 1.19745855%5D%2C %5B-0.04656859%5D%2C %5B 2.2139499 %5D%2C %5B-0.50164014%5D%2C %5B 0.33925295%5D%2C %5B-0.27657758%5D%2C %5B 0.84131559%5D%2C %5B 0.10429753%5D%2C %5B 0.10182431%5D%2C %5B 0.05730644%5D%2C %5B 0.5791548 %5D%2C %5B-0.73412235%5D%2C %5B-0.69207769%5D%2C %5B 0.49011906%5D%2C %5B 0.13892254%5D%2C %5B 2.68386075%5D%2C %5B-0.13313111%5D%2C %5B-0.86025631%5D%2C %5B-0.25926507%5D%2C %5B-0.45712227%5D%2C %5B-0.03914894%5D%2C %5B-0.65497947%5D%2C %5B-0.40518476%5D%2C %5B-0.69949734%5D%2C %5B-0.56841695%5D%2C %5B 0.42334226%5D%2C %5B 1.79844979%5D%2C %5B 0.03010108%5D%2C %5B-0.52637229%5D%2C %5B-0.02678287%5D%2C %5B 0.34667259%5D%2C %5B-0.87509..." isContainer="True" shape="(2037726, 1)" />
</xml>
[34m[1mwandb[39m[22m:
[34m[1mwandb[39m[22m: Plotting RFRegressor.
[34m[1mwandb[39m[22m: Logged summary metrics.
[34m[1mwandb[39m[22m: Logged learning curve.
[34m[1mwandb[39m[22m: [33mWARNING[39m using only the first 1000 datapoints to create chart outlier_candidates
[34m[1mwandb[39m[22m: Logged outlier candidates.
[34m[1mwandb[39m[22m: [33mWARNING[39m using only the first 100 datapoints to create chart residuals
[34m[1mwandb[39m[22m: [33mWARNING[39m using only the first 100 datapoints to create chart residuals
[34m[1mwandb[39m[22m: Logged residuals.