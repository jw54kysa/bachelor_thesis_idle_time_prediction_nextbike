program: mlpr_train.py
method: random
project: mlpr_hyperparam_opt
metric:
  name: accuracy
  goal: maximize
parameters:
  hidden_layer_sizes:
    values:
      - 16, 16
      - 32, 32
    distribution: categorical
  activation:
    values: ['identity', 'logistic', 'tanh', 'relu']
  solver:
    values: ['lbfgs','sgd','adam']
  alpha:
    values: [0.0001,0.0005,0.001, 0.005, 0.01, 0.05]
  learning_rate:
    values: ['constant', 'invscaling', 'adaptive']
  learning_rate_init:
    values: [0.4, 0.45, 0.5, 0.55, 0.6]
  momentum:
    values: [0.9, 0.85, 0.8, 0.75, 0.7]

# (16, 16), (32, 32), (64, 64), (128, 128), (256, 256), (16, 16, 16), (32, 32, 32), (64, 64, 64), (128, 128, 128)]